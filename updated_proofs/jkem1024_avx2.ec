require import AllCore IntDiv CoreMap List Distr.

from Jasmin require import JModel_x86.

import SLH64.

from Jasmin require import Jcheck JSafety.

require import
Array1 Array2 Array4 Array5 Array6 Array7 Array8 Array16 Array24 Array25
Array32 Array33 Array64 Array128 Array160 Array200 Array224 Array256 Array384
Array400 Array512 Array536 Array800 Array1024 Array1410 Array1536 Array1568
Array1600 Array2048 Array2144 Array3168 Array4096 Array8192 WArray16 WArray32
WArray64 WArray192 WArray256 WArray800 WArray2048 BArray1 BArray2 BArray4
BArray8 BArray16 BArray32 BArray33 BArray64 BArray128 BArray160 BArray192
BArray200 BArray224 BArray256 BArray384 BArray512 BArray536 BArray800
BArray1410 BArray1536 BArray1568 BArray1600 BArray2048 BArray2144 BArray3168
BArray8192 SBArray4_1 SBArray8_2 SBArray64_32 SBArray1600_32 SBArray3168_32
SBArray128_128 SBArray1568_160 SBArray536_200 SBArray1536_384 SBArray2048_512
SBArray8192_512 SBArray2144_536 SBArray1568_1410 SBArray1568_1536
SBArray3168_1536 SBArray1600_1568 SBArray3168_1568 SBArray8192_2048.

abbrev  gen_matrix_indexes =
(BArray64.of_list8
[(W8.of_int 0); (W8.of_int 0); (W8.of_int 1); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 0); (W8.of_int 3); (W8.of_int 0); (W8.of_int 0); (W8.of_int 1);
(W8.of_int 1); (W8.of_int 1); (W8.of_int 2); (W8.of_int 1); (W8.of_int 3);
(W8.of_int 1); (W8.of_int 0); (W8.of_int 2); (W8.of_int 1); (W8.of_int 2);
(W8.of_int 2); (W8.of_int 2); (W8.of_int 3); (W8.of_int 2); (W8.of_int 0);
(W8.of_int 3); (W8.of_int 1); (W8.of_int 3); (W8.of_int 2); (W8.of_int 3);
(W8.of_int 3); (W8.of_int 3); (W8.of_int 0); (W8.of_int 0); (W8.of_int 0);
(W8.of_int 1); (W8.of_int 0); (W8.of_int 2); (W8.of_int 0); (W8.of_int 3);
(W8.of_int 1); (W8.of_int 0); (W8.of_int 1); (W8.of_int 1); (W8.of_int 1);
(W8.of_int 2); (W8.of_int 1); (W8.of_int 3); (W8.of_int 2); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 1); (W8.of_int 2); (W8.of_int 2); (W8.of_int 2);
(W8.of_int 3); (W8.of_int 3); (W8.of_int 0); (W8.of_int 3); (W8.of_int 1);
(W8.of_int 3); (W8.of_int 2); (W8.of_int 3); (W8.of_int 3)]).

abbrev  sample_shuffle_table =
(BArray2048.of_list8
[(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 4); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 4); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 4); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 6); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 6); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 6); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 6); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 4); (W8.of_int 6); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 4); (W8.of_int 6); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 4); (W8.of_int 6); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 8);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4);
(W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 4); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 4); (W8.of_int 8); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6);
(W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 6); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 6); (W8.of_int 8); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 8); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 8);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 8);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 8);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 8); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 8);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 8);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 8);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 10);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 10);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 10);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 10);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 8); (W8.of_int 10);
(W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int (-1)); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 6); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 8); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 4); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 4); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 4); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 6); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 10);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 10);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 10);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 10);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 8); (W8.of_int 10);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 6); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 8); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 2); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 2); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 4); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 6); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 4); (W8.of_int 6); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 2); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 4); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2);
(W8.of_int 4); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10);
(W8.of_int 12); (W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 2); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 6); (W8.of_int 8);
(W8.of_int 10); (W8.of_int 12); (W8.of_int 14); (W8.of_int (-1));
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 0);
(W8.of_int 4); (W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12);
(W8.of_int 14); (W8.of_int (-1)); (W8.of_int 2); (W8.of_int 4);
(W8.of_int 6); (W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14);
(W8.of_int (-1)); (W8.of_int 0); (W8.of_int 2); (W8.of_int 4); (W8.of_int 6);
(W8.of_int 8); (W8.of_int 10); (W8.of_int 12); (W8.of_int 14)]).

abbrev [-printing] sample_q =
(W256.of_int
5881923629679188442283784376194736327817742869488325897419002016668082834689).

abbrev [-printing] sample_mask =
(W256.of_int
7235349132933696807194982583513801520701008426120364839270295361446620368895).

abbrev [-printing] sample_ones =
(W256.of_int
454086624460063511464984254936031011189294057512315937409637584344757371137).

abbrev  sample_load_shuffle =
(BArray32.of_list8
[(W8.of_int 0); (W8.of_int 1); (W8.of_int 1); (W8.of_int 2); (W8.of_int 3);
(W8.of_int 4); (W8.of_int 4); (W8.of_int 5); (W8.of_int 6); (W8.of_int 7);
(W8.of_int 7); (W8.of_int 8); (W8.of_int 9); (W8.of_int 10); (W8.of_int 10);
(W8.of_int 11); (W8.of_int 4); (W8.of_int 5); (W8.of_int 5); (W8.of_int 6);
(W8.of_int 7); (W8.of_int 8); (W8.of_int 8); (W8.of_int 9); (W8.of_int 10);
(W8.of_int 11); (W8.of_int 11); (W8.of_int 12); (W8.of_int 13);
(W8.of_int 14); (W8.of_int 14); (W8.of_int 15)]).

abbrev  pvc_shufbidx_s =
(BArray32.of_list8
[(W8.of_int 0); (W8.of_int 1); (W8.of_int 2); (W8.of_int 3); (W8.of_int 4);
(W8.of_int 5); (W8.of_int 6); (W8.of_int 7); (W8.of_int 8); (W8.of_int 9);
(W8.of_int 10); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int 5); (W8.of_int 6);
(W8.of_int 7); (W8.of_int 8); (W8.of_int 9); (W8.of_int 10);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 0); (W8.of_int 1); (W8.of_int 2); (W8.of_int 3);
(W8.of_int 4)]).

abbrev  pvc_srlvqidx =
(BArray32.of_list64
[(W64.of_int 10); (W64.of_int 30); (W64.of_int 10); (W64.of_int 30)]).

abbrev [-printing] pvc_sllvdidx_s = (W64.of_int 10).

abbrev [-printing] pvc_shift2_s = (W64.of_int 576460756732608513).

abbrev [-printing] pvc_mask_s = (W16.of_int 2047).

abbrev [-printing] pvc_shift1_s = (W16.of_int 8192).

abbrev [-printing] pvc_off_s = (W16.of_int 36).

abbrev [-printing] pvd_mask_s = (W16.of_int 32752).

abbrev  pvd_shift_s =
(BArray32.of_list16
[(W16.of_int 32); (W16.of_int 4); (W16.of_int 1); (W16.of_int 32);
(W16.of_int 8); (W16.of_int 1); (W16.of_int 32); (W16.of_int 4);
(W16.of_int 32); (W16.of_int 4); (W16.of_int 1); (W16.of_int 32);
(W16.of_int 8); (W16.of_int 1); (W16.of_int 32); (W16.of_int 4)]).

abbrev  pvd_srlvqidx_s =
(BArray32.of_list64
[(W64.of_int 0); (W64.of_int 2); (W64.of_int 0); (W64.of_int 2)]).

abbrev  pvd_srlvdidx_s =
(BArray32.of_list32
[(W32.of_int 0); (W32.of_int 1); (W32.of_int 0); (W32.of_int 0);
(W32.of_int 0); (W32.of_int 1); (W32.of_int 0); (W32.of_int 0)]).

abbrev  pvd_shufbidx_s =
(BArray32.of_list8
[(W8.of_int 0); (W8.of_int 1); (W8.of_int 1); (W8.of_int 2); (W8.of_int 2);
(W8.of_int 3); (W8.of_int 4); (W8.of_int 5); (W8.of_int 5); (W8.of_int 6);
(W8.of_int 6); (W8.of_int 7); (W8.of_int 8); (W8.of_int 9); (W8.of_int 9);
(W8.of_int 10); (W8.of_int 3); (W8.of_int 4); (W8.of_int 4); (W8.of_int 5);
(W8.of_int 5); (W8.of_int 6); (W8.of_int 7); (W8.of_int 8); (W8.of_int 8);
(W8.of_int 9); (W8.of_int 9); (W8.of_int 10); (W8.of_int 11); (W8.of_int 12);
(W8.of_int 12); (W8.of_int 13)]).

abbrev  pd_shift_s =
(BArray32.of_list16
[(W16.of_int 1024); (W16.of_int 32); (W16.of_int 256); (W16.of_int 8);
(W16.of_int 64); (W16.of_int 512); (W16.of_int 16); (W16.of_int 128);
(W16.of_int 1024); (W16.of_int 32); (W16.of_int 256); (W16.of_int 8);
(W16.of_int 64); (W16.of_int 512); (W16.of_int 16); (W16.of_int 128)]).

abbrev  pd_mask_s =
(BArray32.of_list16
[(W16.of_int 31); (W16.of_int 992); (W16.of_int 124); (W16.of_int 3968);
(W16.of_int 496); (W16.of_int 62); (W16.of_int 1984); (W16.of_int 248);
(W16.of_int 31); (W16.of_int 992); (W16.of_int 124); (W16.of_int 3968);
(W16.of_int 496); (W16.of_int 62); (W16.of_int 1984); (W16.of_int 248)]).

abbrev  pd_jshufbidx =
(BArray32.of_list8
[(W8.of_int 0); (W8.of_int 0); (W8.of_int 0); (W8.of_int 1); (W8.of_int 1);
(W8.of_int 1); (W8.of_int 1); (W8.of_int 2); (W8.of_int 2); (W8.of_int 3);
(W8.of_int 3); (W8.of_int 3); (W8.of_int 3); (W8.of_int 4); (W8.of_int 4);
(W8.of_int 4); (W8.of_int 5); (W8.of_int 5); (W8.of_int 5); (W8.of_int 6);
(W8.of_int 6); (W8.of_int 6); (W8.of_int 6); (W8.of_int 7); (W8.of_int 7);
(W8.of_int 8); (W8.of_int 8); (W8.of_int 8); (W8.of_int 8); (W8.of_int 9);
(W8.of_int 9); (W8.of_int 9)]).

abbrev  pc_shufbidx_s =
(BArray32.of_list8
[(W8.of_int 0); (W8.of_int 1); (W8.of_int 2); (W8.of_int 3); (W8.of_int 4);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 8); (W8.of_int 9); (W8.of_int 10);
(W8.of_int 11); (W8.of_int 12); (W8.of_int (-1)); (W8.of_int 9);
(W8.of_int 10); (W8.of_int 11); (W8.of_int 12); (W8.of_int (-1));
(W8.of_int 0); (W8.of_int 1); (W8.of_int 2); (W8.of_int 3); (W8.of_int 4);
(W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1)); (W8.of_int (-1));
(W8.of_int (-1)); (W8.of_int 8)]).

abbrev [-printing] pc_sllvdidx_s = (W64.of_int 12).

abbrev [-printing] pc_shift3_s = (W32.of_int 67108865).

abbrev [-printing] pc_shift2_s = (W16.of_int 8193).

abbrev [-printing] pc_shift1_s = (W16.of_int 1024).

abbrev [-printing] pc_mask_s = (W16.of_int 31).

abbrev  pfm_idx_s =
(BArray16.of_list8
[(W8.of_int 0); (W8.of_int 1); (W8.of_int 4); (W8.of_int 5); (W8.of_int 8);
(W8.of_int 9); (W8.of_int 12); (W8.of_int 13); (W8.of_int 2); (W8.of_int 3);
(W8.of_int 6); (W8.of_int 7); (W8.of_int 10); (W8.of_int 11); (W8.of_int 14);
(W8.of_int 15)]).

abbrev  pfm_shift_s =
(BArray16.of_list32
[(W32.of_int 3); (W32.of_int 2); (W32.of_int 1); (W32.of_int 0)]).

abbrev [-printing] rOL8 =
(W256.of_int
13620818001941277694121380808605999856886653716761013959207994299728839901191
).

abbrev [-printing] rOL56 =
(W256.of_int
10910488462195273559651782724632284871561478246514020268633800075540923875841
).

abbrev  kECCAK_RHOTATES_RIGHT =
(BArray192.of_list256
[(W256.of_int 144373339913893657577751063007562604548177214458152943091773);
(W256.of_int 232252764209307188274174373867837442080505530800860351692863);
(W256.of_int 156927543384667019098616994515559168111335794127330162507795);
(W256.of_int 351517697181654122777866749001917765472957616589092975280182);
(W256.of_int 276192476357013953622045746931053922384479139705868246843454);
(W256.of_int 313855086769334038206421612937983674734430261968315659321364)]).

abbrev  kECCAK_RHOTATES_LEFT =
(BArray192.of_list256
[(W256.of_int 257361171150853911329517531560668107745210100483895842570243);
(W256.of_int 169481746855440380633094220700393270212881784141188433969153);
(W256.of_int 244806967680080549808651600052671544182051520814718623154221);
(W256.of_int 50216813883093446129401845566312946820429698352955810381834);
(W256.of_int 125542034707733615285222847637176789908908175236180538818562);
(W256.of_int 87879424295413530700846981630247037558957052973733126340652)]).

abbrev  kECCAK1600_RC =
(BArray192.of_list64
[(W64.of_int 1); (W64.of_int 32898); (W64.of_int (-9223372036854742902));
(W64.of_int (-9223372034707259392)); (W64.of_int 32907);
(W64.of_int 2147483649); (W64.of_int (-9223372034707259263));
(W64.of_int (-9223372036854743031)); (W64.of_int 138); (W64.of_int 136);
(W64.of_int 2147516425); (W64.of_int 2147483658); (W64.of_int 2147516555);
(W64.of_int (-9223372036854775669)); (W64.of_int (-9223372036854742903));
(W64.of_int (-9223372036854743037)); (W64.of_int (-9223372036854743038));
(W64.of_int (-9223372036854775680)); (W64.of_int 32778);
(W64.of_int (-9223372034707292150)); (W64.of_int (-9223372034707259263));
(W64.of_int (-9223372036854742912)); (W64.of_int 2147483649);
(W64.of_int (-9223372034707259384))]).

abbrev  jdmontx16 =
(BArray32.of_list16
[(W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353);
(W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353);
(W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353);
(W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353); (W16.of_int 1353)]).

abbrev  mqinvx16 =
(BArray32.of_list16
[(W16.of_int 15099); (W16.of_int 15099); (W16.of_int 15099);
(W16.of_int 15099); (W16.of_int 15099); (W16.of_int 15099);
(W16.of_int 15099); (W16.of_int 15099); (W16.of_int 15099);
(W16.of_int 15099); (W16.of_int 15099); (W16.of_int 15099);
(W16.of_int 15099); (W16.of_int 15099); (W16.of_int 15099);
(W16.of_int 15099)]).

abbrev  hhqx16 =
(BArray32.of_list16
[(W16.of_int 832); (W16.of_int 832); (W16.of_int 832); (W16.of_int 832);
(W16.of_int 832); (W16.of_int 832); (W16.of_int 832); (W16.of_int 832);
(W16.of_int 832); (W16.of_int 832); (W16.of_int 832); (W16.of_int 832);
(W16.of_int 832); (W16.of_int 832); (W16.of_int 832); (W16.of_int 832)]).

abbrev  hqx16_m1 =
(BArray32.of_list16
[(W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664);
(W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664);
(W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664);
(W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664); (W16.of_int 1664)]).

abbrev  hqx16_p1 =
(BArray32.of_list16
[(W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665);
(W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665);
(W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665);
(W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665); (W16.of_int 1665)]).

abbrev  maskx16 =
(BArray32.of_list16
[(W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095);
(W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095);
(W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095);
(W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095); (W16.of_int 4095)]).

abbrev  jflox16 =
(BArray32.of_list16
[(W16.of_int (-10079)); (W16.of_int (-10079)); (W16.of_int (-10079));
(W16.of_int (-10079)); (W16.of_int (-10079)); (W16.of_int (-10079));
(W16.of_int (-10079)); (W16.of_int (-10079)); (W16.of_int (-10079));
(W16.of_int (-10079)); (W16.of_int (-10079)); (W16.of_int (-10079));
(W16.of_int (-10079)); (W16.of_int (-10079)); (W16.of_int (-10079));
(W16.of_int (-10079))]).

abbrev  jfhix16 =
(BArray32.of_list16
[(W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441);
(W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441);
(W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441);
(W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441); (W16.of_int 1441)]).

abbrev  jvx16 =
(BArray32.of_list16
[(W16.of_int 20159); (W16.of_int 20159); (W16.of_int 20159);
(W16.of_int 20159); (W16.of_int 20159); (W16.of_int 20159);
(W16.of_int 20159); (W16.of_int 20159); (W16.of_int 20159);
(W16.of_int 20159); (W16.of_int 20159); (W16.of_int 20159);
(W16.of_int 20159); (W16.of_int 20159); (W16.of_int 20159);
(W16.of_int 20159)]).

abbrev  jqinvx16 =
(BArray32.of_list16
[(W16.of_int (-3327)); (W16.of_int (-3327)); (W16.of_int (-3327));
(W16.of_int (-3327)); (W16.of_int (-3327)); (W16.of_int (-3327));
(W16.of_int (-3327)); (W16.of_int (-3327)); (W16.of_int (-3327));
(W16.of_int (-3327)); (W16.of_int (-3327)); (W16.of_int (-3327));
(W16.of_int (-3327)); (W16.of_int (-3327)); (W16.of_int (-3327));
(W16.of_int (-3327))]).

abbrev  jqx16 =
(BArray32.of_list16
[(W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329);
(W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329);
(W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329);
(W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329); (W16.of_int 3329)]).

abbrev  jzetas_inv_exp =
(BArray800.of_list16
[(W16.of_int (-23131)); (W16.of_int (-7756)); (W16.of_int 20258);
(W16.of_int 23860); (W16.of_int 17443); (W16.of_int (-23210));
(W16.of_int 20199); (W16.of_int 21498); (W16.of_int (-14469));
(W16.of_int 11045); (W16.of_int 14903); (W16.of_int 6280);
(W16.of_int 32385); (W16.of_int (-15355)); (W16.of_int (-2145));
(W16.of_int (-20296)); (W16.of_int 1701); (W16.of_int 1460);
(W16.of_int 2338); (W16.of_int 308); (W16.of_int 2851); (W16.of_int 854);
(W16.of_int 2535); (W16.of_int 1530); (W16.of_int 1659); (W16.of_int 3109);
(W16.of_int 1335); (W16.of_int 136); (W16.of_int 2945); (W16.of_int 1285);
(W16.of_int 2719); (W16.of_int 2232); (W16.of_int 17423);
(W16.of_int (-23997)); (W16.of_int (-28643)); (W16.of_int (-31636));
(W16.of_int (-10906)); (W16.of_int 22502); (W16.of_int 7934);
(W16.of_int (-10335)); (W16.of_int (-16989)); (W16.of_int (-24214));
(W16.of_int (-10945)); (W16.of_int 20927); (W16.of_int (-24391));
(W16.of_int 7383); (W16.of_int (-25434)); (W16.of_int 31184);
(W16.of_int 1807); (W16.of_int 2371); (W16.of_int 2333); (W16.of_int 108);
(W16.of_int 870); (W16.of_int 1510); (W16.of_int 1278); (W16.of_int 1185);
(W16.of_int 1187); (W16.of_int 874); (W16.of_int 2111); (W16.of_int 1215);
(W16.of_int 1465); (W16.of_int 2007); (W16.of_int 2726); (W16.of_int 2512);
(W16.of_int 17915); (W16.of_int 24156); (W16.of_int (-4311));
(W16.of_int (-16831)); (W16.of_int 12757); (W16.of_int 29156);
(W16.of_int (-14016)); (W16.of_int (-13426)); (W16.of_int (-18249));
(W16.of_int 30199); (W16.of_int (-9075)); (W16.of_int 28310);
(W16.of_int 8899); (W16.of_int 15887); (W16.of_int 28250);
(W16.of_int (-19883)); (W16.of_int 1275); (W16.of_int 2652);
(W16.of_int 1065); (W16.of_int 2881); (W16.of_int 725); (W16.of_int 1508);
(W16.of_int 2368); (W16.of_int 398); (W16.of_int 951); (W16.of_int 247);
(W16.of_int 1421); (W16.of_int 3222); (W16.of_int 2499); (W16.of_int 271);
(W16.of_int 90); (W16.of_int 853); (W16.of_int 16163); (W16.of_int 16163);
(W16.of_int (-26675)); (W16.of_int (-26675)); (W16.of_int (-8858));
(W16.of_int (-8858)); (W16.of_int (-18426)); (W16.of_int (-18426));
(W16.of_int (-8799)); (W16.of_int (-8799)); (W16.of_int 10533);
(W16.of_int 10533); (W16.of_int (-24312)); (W16.of_int (-24312));
(W16.of_int 28073); (W16.of_int 28073); (W16.of_int 1571); (W16.of_int 1571);
(W16.of_int 205); (W16.of_int 205); (W16.of_int 2918); (W16.of_int 2918);
(W16.of_int 1542); (W16.of_int 1542); (W16.of_int 2721); (W16.of_int 2721);
(W16.of_int 2597); (W16.of_int 2597); (W16.of_int 2312); (W16.of_int 2312);
(W16.of_int 681); (W16.of_int 681); (W16.of_int (-31163));
(W16.of_int (-31163)); (W16.of_int (-31163)); (W16.of_int (-31163));
(W16.of_int 11202); (W16.of_int 11202); (W16.of_int 11202);
(W16.of_int 11202); (W16.of_int (-1358)); (W16.of_int (-1358));
(W16.of_int (-1358)); (W16.of_int (-1358)); (W16.of_int (-10689));
(W16.of_int (-10689)); (W16.of_int (-10689)); (W16.of_int (-10689));
(W16.of_int 1861); (W16.of_int 1861); (W16.of_int 1861); (W16.of_int 1861);
(W16.of_int 1474); (W16.of_int 1474); (W16.of_int 1474); (W16.of_int 1474);
(W16.of_int 1202); (W16.of_int 1202); (W16.of_int 1202); (W16.of_int 1202);
(W16.of_int 2367); (W16.of_int 2367); (W16.of_int 2367); (W16.of_int 2367);
(W16.of_int 16695); (W16.of_int 16695); (W16.of_int 16695);
(W16.of_int 16695); (W16.of_int 16695); (W16.of_int 16695);
(W16.of_int 16695); (W16.of_int 16695); (W16.of_int (-28190));
(W16.of_int (-28190)); (W16.of_int (-28190)); (W16.of_int (-28190));
(W16.of_int (-28190)); (W16.of_int (-28190)); (W16.of_int (-28190));
(W16.of_int (-28190)); (W16.of_int 3127); (W16.of_int 3127);
(W16.of_int 3127); (W16.of_int 3127); (W16.of_int 3127); (W16.of_int 3127);
(W16.of_int 3127); (W16.of_int 3127); (W16.of_int 3042); (W16.of_int 3042);
(W16.of_int 3042); (W16.of_int 3042); (W16.of_int 3042); (W16.of_int 3042);
(W16.of_int 3042); (W16.of_int 3042); (W16.of_int (-787));
(W16.of_int (-787)); (W16.of_int 1517); (W16.of_int 1517);
(W16.of_int 12619); (W16.of_int (-19528)); (W16.of_int (-18524));
(W16.of_int (-20099)); (W16.of_int (-12638)); (W16.of_int 18742);
(W16.of_int (-30317)); (W16.of_int 32503); (W16.of_int (-5492));
(W16.of_int (-23092)); (W16.of_int 4587); (W16.of_int (-13130));
(W16.of_int 21656); (W16.of_int 14234); (W16.of_int (-13386));
(W16.of_int (-11181)); (W16.of_int 75); (W16.of_int 3000); (W16.of_int 2980);
(W16.of_int 2685); (W16.of_int 2210); (W16.of_int 1846); (W16.of_int 147);
(W16.of_int 2551); (W16.of_int 1676); (W16.of_int 460); (W16.of_int 235);
(W16.of_int 2742); (W16.of_int 3224); (W16.of_int 2458); (W16.of_int 2486);
(W16.of_int 2899); (W16.of_int 5276); (W16.of_int 14431);
(W16.of_int (-17560)); (W16.of_int 18486); (W16.of_int 28762);
(W16.of_int (-29175)); (W16.of_int (-10630)); (W16.of_int (-32010));
(W16.of_int (-6181)); (W16.of_int 14883); (W16.of_int (-944));
(W16.of_int 27739); (W16.of_int (-20493)); (W16.of_int 32227);
(W16.of_int 11478); (W16.of_int 335); (W16.of_int 156); (W16.of_int 2911);
(W16.of_int 872); (W16.of_int 1590); (W16.of_int 602); (W16.of_int 777);
(W16.of_int 2170); (W16.of_int 246); (W16.of_int 1755); (W16.of_int 291);
(W16.of_int 3152); (W16.of_int 2907); (W16.of_int 1779); (W16.of_int 1251);
(W16.of_int 2774); (W16.of_int 1103); (W16.of_int (-27836));
(W16.of_int 25987); (W16.of_int 650); (W16.of_int (-9134));
(W16.of_int 12442); (W16.of_int (-16064)); (W16.of_int (-26616));
(W16.of_int 12797); (W16.of_int (-25080)); (W16.of_int (-20710));
(W16.of_int (-20178)); (W16.of_int 23565); (W16.of_int (-30966));
(W16.of_int (-1496)); (W16.of_int 6517); (W16.of_int 5690);
(W16.of_int 1860); (W16.of_int 3203); (W16.of_int 1162); (W16.of_int 1618);
(W16.of_int 666); (W16.of_int 320); (W16.of_int 8); (W16.of_int 2813);
(W16.of_int 1544); (W16.of_int 282); (W16.of_int 1838); (W16.of_int 1293);
(W16.of_int 2314); (W16.of_int 552); (W16.of_int 2677); (W16.of_int 2106);
(W16.of_int 26242); (W16.of_int 26242); (W16.of_int (-21438));
(W16.of_int (-21438)); (W16.of_int 1103); (W16.of_int 1103);
(W16.of_int (-5571)); (W16.of_int (-5571)); (W16.of_int 29058);
(W16.of_int 29058); (W16.of_int 26361); (W16.of_int 26361);
(W16.of_int (-17363)); (W16.of_int (-17363)); (W16.of_int 5828);
(W16.of_int 5828); (W16.of_int 130); (W16.of_int 130); (W16.of_int 1602);
(W16.of_int 1602); (W16.of_int 1871); (W16.of_int 1871); (W16.of_int 829);
(W16.of_int 829); (W16.of_int 2946); (W16.of_int 2946); (W16.of_int 3065);
(W16.of_int 3065); (W16.of_int 1325); (W16.of_int 1325); (W16.of_int 2756);
(W16.of_int 2756); (W16.of_int 15691); (W16.of_int 15691);
(W16.of_int 15691); (W16.of_int 15691); (W16.of_int 3800); (W16.of_int 3800);
(W16.of_int 3800); (W16.of_int 3800); (W16.of_int (-27757));
(W16.of_int (-27757)); (W16.of_int (-27757)); (W16.of_int (-27757));
(W16.of_int 20907); (W16.of_int 20907); (W16.of_int 20907);
(W16.of_int 20907); (W16.of_int 3147); (W16.of_int 3147); (W16.of_int 3147);
(W16.of_int 3147); (W16.of_int 1752); (W16.of_int 1752); (W16.of_int 1752);
(W16.of_int 1752); (W16.of_int 2707); (W16.of_int 2707); (W16.of_int 2707);
(W16.of_int 2707); (W16.of_int 171); (W16.of_int 171); (W16.of_int 171);
(W16.of_int 171); (W16.of_int 12403); (W16.of_int 12403); (W16.of_int 12403);
(W16.of_int 12403); (W16.of_int 12403); (W16.of_int 12403);
(W16.of_int 12403); (W16.of_int 12403); (W16.of_int (-13524));
(W16.of_int (-13524)); (W16.of_int (-13524)); (W16.of_int (-13524));
(W16.of_int (-13524)); (W16.of_int (-13524)); (W16.of_int (-13524));
(W16.of_int (-13524)); (W16.of_int 1907); (W16.of_int 1907);
(W16.of_int 1907); (W16.of_int 1907); (W16.of_int 1907); (W16.of_int 1907);
(W16.of_int 1907); (W16.of_int 1907); (W16.of_int 1836); (W16.of_int 1836);
(W16.of_int 1836); (W16.of_int 1836); (W16.of_int 1836); (W16.of_int 1836);
(W16.of_int 1836); (W16.of_int 1836); (W16.of_int (-14745));
(W16.of_int (-14745)); (W16.of_int 359); (W16.of_int 359);
(W16.of_int (-5236)); (W16.of_int (-5236)); (W16.of_int 1932);
(W16.of_int 1932); (W16.of_int 0); (W16.of_int 0); (W16.of_int 0);
(W16.of_int 0)]).

abbrev  jzetas_exp =
(BArray800.of_list16
[(W16.of_int 31499); (W16.of_int 31499); (W16.of_int 2571);
(W16.of_int 2571); (W16.of_int 14746); (W16.of_int 14746); (W16.of_int 2970);
(W16.of_int 2970); (W16.of_int 13525); (W16.of_int 13525);
(W16.of_int 13525); (W16.of_int 13525); (W16.of_int 13525);
(W16.of_int 13525); (W16.of_int 13525); (W16.of_int 13525);
(W16.of_int (-12402)); (W16.of_int (-12402)); (W16.of_int (-12402));
(W16.of_int (-12402)); (W16.of_int (-12402)); (W16.of_int (-12402));
(W16.of_int (-12402)); (W16.of_int (-12402)); (W16.of_int 1493);
(W16.of_int 1493); (W16.of_int 1493); (W16.of_int 1493); (W16.of_int 1493);
(W16.of_int 1493); (W16.of_int 1493); (W16.of_int 1493); (W16.of_int 1422);
(W16.of_int 1422); (W16.of_int 1422); (W16.of_int 1422); (W16.of_int 1422);
(W16.of_int 1422); (W16.of_int 1422); (W16.of_int 1422);
(W16.of_int (-20906)); (W16.of_int (-20906)); (W16.of_int (-20906));
(W16.of_int (-20906)); (W16.of_int 27758); (W16.of_int 27758);
(W16.of_int 27758); (W16.of_int 27758); (W16.of_int (-3799));
(W16.of_int (-3799)); (W16.of_int (-3799)); (W16.of_int (-3799));
(W16.of_int (-15690)); (W16.of_int (-15690)); (W16.of_int (-15690));
(W16.of_int (-15690)); (W16.of_int 3158); (W16.of_int 3158);
(W16.of_int 3158); (W16.of_int 3158); (W16.of_int 622); (W16.of_int 622);
(W16.of_int 622); (W16.of_int 622); (W16.of_int 1577); (W16.of_int 1577);
(W16.of_int 1577); (W16.of_int 1577); (W16.of_int 182); (W16.of_int 182);
(W16.of_int 182); (W16.of_int 182); (W16.of_int (-5827));
(W16.of_int (-5827)); (W16.of_int 17364); (W16.of_int 17364);
(W16.of_int (-26360)); (W16.of_int (-26360)); (W16.of_int (-29057));
(W16.of_int (-29057)); (W16.of_int 5572); (W16.of_int 5572);
(W16.of_int (-1102)); (W16.of_int (-1102)); (W16.of_int 21439);
(W16.of_int 21439); (W16.of_int (-26241)); (W16.of_int (-26241));
(W16.of_int 573); (W16.of_int 573); (W16.of_int 2004); (W16.of_int 2004);
(W16.of_int 264); (W16.of_int 264); (W16.of_int 383); (W16.of_int 383);
(W16.of_int 2500); (W16.of_int 2500); (W16.of_int 1458); (W16.of_int 1458);
(W16.of_int 1727); (W16.of_int 1727); (W16.of_int 3199); (W16.of_int 3199);
(W16.of_int (-5689)); (W16.of_int (-6516)); (W16.of_int 1497);
(W16.of_int 30967); (W16.of_int (-23564)); (W16.of_int 20179);
(W16.of_int 20711); (W16.of_int 25081); (W16.of_int (-12796));
(W16.of_int 26617); (W16.of_int 16065); (W16.of_int (-12441));
(W16.of_int 9135); (W16.of_int (-649)); (W16.of_int (-25986));
(W16.of_int 27837); (W16.of_int 1223); (W16.of_int 652); (W16.of_int 2777);
(W16.of_int 1015); (W16.of_int 2036); (W16.of_int 1491); (W16.of_int 3047);
(W16.of_int 1785); (W16.of_int 516); (W16.of_int 3321); (W16.of_int 3009);
(W16.of_int 2663); (W16.of_int 1711); (W16.of_int 2167); (W16.of_int 126);
(W16.of_int 1469); (W16.of_int (-334)); (W16.of_int (-11477));
(W16.of_int (-32226)); (W16.of_int 20494); (W16.of_int (-27738));
(W16.of_int 945); (W16.of_int (-14882)); (W16.of_int 6182);
(W16.of_int 32011); (W16.of_int 10631); (W16.of_int 29176);
(W16.of_int (-28761)); (W16.of_int (-18485)); (W16.of_int 17561);
(W16.of_int (-14430)); (W16.of_int (-5275)); (W16.of_int 2226);
(W16.of_int 555); (W16.of_int 2078); (W16.of_int 1550); (W16.of_int 422);
(W16.of_int 177); (W16.of_int 3038); (W16.of_int 1574); (W16.of_int 3083);
(W16.of_int 1159); (W16.of_int 2552); (W16.of_int 2727); (W16.of_int 1739);
(W16.of_int 2457); (W16.of_int 418); (W16.of_int 3173); (W16.of_int 11182);
(W16.of_int 13387); (W16.of_int (-14233)); (W16.of_int (-21655));
(W16.of_int 13131); (W16.of_int (-4586)); (W16.of_int 23093);
(W16.of_int 5493); (W16.of_int (-32502)); (W16.of_int 30318);
(W16.of_int (-18741)); (W16.of_int 12639); (W16.of_int 20100);
(W16.of_int 18525); (W16.of_int 19529); (W16.of_int (-12618));
(W16.of_int 430); (W16.of_int 843); (W16.of_int 871); (W16.of_int 105);
(W16.of_int 587); (W16.of_int 3094); (W16.of_int 2869); (W16.of_int 1653);
(W16.of_int 778); (W16.of_int 3182); (W16.of_int 1483); (W16.of_int 1119);
(W16.of_int 644); (W16.of_int 349); (W16.of_int 329); (W16.of_int 3254);
(W16.of_int 788); (W16.of_int 788); (W16.of_int 1812); (W16.of_int 1812);
(W16.of_int 28191); (W16.of_int 28191); (W16.of_int 28191);
(W16.of_int 28191); (W16.of_int 28191); (W16.of_int 28191);
(W16.of_int 28191); (W16.of_int 28191); (W16.of_int (-16694));
(W16.of_int (-16694)); (W16.of_int (-16694)); (W16.of_int (-16694));
(W16.of_int (-16694)); (W16.of_int (-16694)); (W16.of_int (-16694));
(W16.of_int (-16694)); (W16.of_int 287); (W16.of_int 287); (W16.of_int 287);
(W16.of_int 287); (W16.of_int 287); (W16.of_int 287); (W16.of_int 287);
(W16.of_int 287); (W16.of_int 202); (W16.of_int 202); (W16.of_int 202);
(W16.of_int 202); (W16.of_int 202); (W16.of_int 202); (W16.of_int 202);
(W16.of_int 202); (W16.of_int 10690); (W16.of_int 10690); (W16.of_int 10690);
(W16.of_int 10690); (W16.of_int 1359); (W16.of_int 1359); (W16.of_int 1359);
(W16.of_int 1359); (W16.of_int (-11201)); (W16.of_int (-11201));
(W16.of_int (-11201)); (W16.of_int (-11201)); (W16.of_int 31164);
(W16.of_int 31164); (W16.of_int 31164); (W16.of_int 31164); (W16.of_int 962);
(W16.of_int 962); (W16.of_int 962); (W16.of_int 962); (W16.of_int 2127);
(W16.of_int 2127); (W16.of_int 2127); (W16.of_int 2127); (W16.of_int 1855);
(W16.of_int 1855); (W16.of_int 1855); (W16.of_int 1855); (W16.of_int 1468);
(W16.of_int 1468); (W16.of_int 1468); (W16.of_int 1468);
(W16.of_int (-28072)); (W16.of_int (-28072)); (W16.of_int 24313);
(W16.of_int 24313); (W16.of_int (-10532)); (W16.of_int (-10532));
(W16.of_int 8800); (W16.of_int 8800); (W16.of_int 18427); (W16.of_int 18427);
(W16.of_int 8859); (W16.of_int 8859); (W16.of_int 26676); (W16.of_int 26676);
(W16.of_int (-16162)); (W16.of_int (-16162)); (W16.of_int 2648);
(W16.of_int 2648); (W16.of_int 1017); (W16.of_int 1017); (W16.of_int 732);
(W16.of_int 732); (W16.of_int 608); (W16.of_int 608); (W16.of_int 1787);
(W16.of_int 1787); (W16.of_int 411); (W16.of_int 411); (W16.of_int 3124);
(W16.of_int 3124); (W16.of_int 1758); (W16.of_int 1758); (W16.of_int 19884);
(W16.of_int (-28249)); (W16.of_int (-15886)); (W16.of_int (-8898));
(W16.of_int (-28309)); (W16.of_int 9076); (W16.of_int (-30198));
(W16.of_int 18250); (W16.of_int 13427); (W16.of_int 14017);
(W16.of_int (-29155)); (W16.of_int (-12756)); (W16.of_int 16832);
(W16.of_int 4312); (W16.of_int (-24155)); (W16.of_int (-17914));
(W16.of_int 2476); (W16.of_int 3239); (W16.of_int 3058); (W16.of_int 830);
(W16.of_int 107); (W16.of_int 1908); (W16.of_int 3082); (W16.of_int 2378);
(W16.of_int 2931); (W16.of_int 961); (W16.of_int 1821); (W16.of_int 2604);
(W16.of_int 448); (W16.of_int 2264); (W16.of_int 677); (W16.of_int 2054);
(W16.of_int (-31183)); (W16.of_int 25435); (W16.of_int (-7382));
(W16.of_int 24392); (W16.of_int (-20926)); (W16.of_int 10946);
(W16.of_int 24215); (W16.of_int 16990); (W16.of_int 10336);
(W16.of_int (-7933)); (W16.of_int (-22501)); (W16.of_int 10907);
(W16.of_int 31637); (W16.of_int 28644); (W16.of_int 23998);
(W16.of_int (-17422)); (W16.of_int 817); (W16.of_int 603); (W16.of_int 1322);
(W16.of_int 1864); (W16.of_int 2114); (W16.of_int 1218); (W16.of_int 2455);
(W16.of_int 2142); (W16.of_int 2144); (W16.of_int 2051); (W16.of_int 1819);
(W16.of_int 2459); (W16.of_int 3221); (W16.of_int 996); (W16.of_int 958);
(W16.of_int 1522); (W16.of_int 20297); (W16.of_int 2146); (W16.of_int 15356);
(W16.of_int (-32384)); (W16.of_int (-6279)); (W16.of_int (-14902));
(W16.of_int (-11044)); (W16.of_int 14470); (W16.of_int (-21497));
(W16.of_int (-20198)); (W16.of_int 23211); (W16.of_int (-17442));
(W16.of_int (-23859)); (W16.of_int (-20257)); (W16.of_int 7757);
(W16.of_int 23132); (W16.of_int 1097); (W16.of_int 610); (W16.of_int 2044);
(W16.of_int 384); (W16.of_int 3193); (W16.of_int 1994); (W16.of_int 220);
(W16.of_int 1670); (W16.of_int 1799); (W16.of_int 794); (W16.of_int 2475);
(W16.of_int 478); (W16.of_int 3021); (W16.of_int 991); (W16.of_int 1869);
(W16.of_int 1628); (W16.of_int 0); (W16.of_int 0); (W16.of_int 0);
(W16.of_int 0)]).

abbrev  jzetas_inv =
(BArray256.of_list16
[(W16.of_int 1701); (W16.of_int 1807); (W16.of_int 1460); (W16.of_int 2371);
(W16.of_int 2338); (W16.of_int 2333); (W16.of_int 308); (W16.of_int 108);
(W16.of_int 2851); (W16.of_int 870); (W16.of_int 854); (W16.of_int 1510);
(W16.of_int 2535); (W16.of_int 1278); (W16.of_int 1530); (W16.of_int 1185);
(W16.of_int 1659); (W16.of_int 1187); (W16.of_int 3109); (W16.of_int 874);
(W16.of_int 1335); (W16.of_int 2111); (W16.of_int 136); (W16.of_int 1215);
(W16.of_int 2945); (W16.of_int 1465); (W16.of_int 1285); (W16.of_int 2007);
(W16.of_int 2719); (W16.of_int 2726); (W16.of_int 2232); (W16.of_int 2512);
(W16.of_int 75); (W16.of_int 156); (W16.of_int 3000); (W16.of_int 2911);
(W16.of_int 2980); (W16.of_int 872); (W16.of_int 2685); (W16.of_int 1590);
(W16.of_int 2210); (W16.of_int 602); (W16.of_int 1846); (W16.of_int 777);
(W16.of_int 147); (W16.of_int 2170); (W16.of_int 2551); (W16.of_int 246);
(W16.of_int 1676); (W16.of_int 1755); (W16.of_int 460); (W16.of_int 291);
(W16.of_int 235); (W16.of_int 3152); (W16.of_int 2742); (W16.of_int 2907);
(W16.of_int 3224); (W16.of_int 1779); (W16.of_int 2458); (W16.of_int 1251);
(W16.of_int 2486); (W16.of_int 2774); (W16.of_int 2899); (W16.of_int 1103);
(W16.of_int 1275); (W16.of_int 2652); (W16.of_int 1065); (W16.of_int 2881);
(W16.of_int 725); (W16.of_int 1508); (W16.of_int 2368); (W16.of_int 398);
(W16.of_int 951); (W16.of_int 247); (W16.of_int 1421); (W16.of_int 3222);
(W16.of_int 2499); (W16.of_int 271); (W16.of_int 90); (W16.of_int 853);
(W16.of_int 1860); (W16.of_int 3203); (W16.of_int 1162); (W16.of_int 1618);
(W16.of_int 666); (W16.of_int 320); (W16.of_int 8); (W16.of_int 2813);
(W16.of_int 1544); (W16.of_int 282); (W16.of_int 1838); (W16.of_int 1293);
(W16.of_int 2314); (W16.of_int 552); (W16.of_int 2677); (W16.of_int 2106);
(W16.of_int 1571); (W16.of_int 205); (W16.of_int 2918); (W16.of_int 1542);
(W16.of_int 2721); (W16.of_int 2597); (W16.of_int 2312); (W16.of_int 681);
(W16.of_int 130); (W16.of_int 1602); (W16.of_int 1871); (W16.of_int 829);
(W16.of_int 2946); (W16.of_int 3065); (W16.of_int 1325); (W16.of_int 2756);
(W16.of_int 1861); (W16.of_int 1474); (W16.of_int 1202); (W16.of_int 2367);
(W16.of_int 3147); (W16.of_int 1752); (W16.of_int 2707); (W16.of_int 171);
(W16.of_int 3127); (W16.of_int 3042); (W16.of_int 1907); (W16.of_int 1836);
(W16.of_int 1517); (W16.of_int 359); (W16.of_int 758); (W16.of_int 1441)]).

abbrev  jzetas =
(BArray256.of_list16
[(W16.of_int 2285); (W16.of_int 2571); (W16.of_int 2970); (W16.of_int 1812);
(W16.of_int 1493); (W16.of_int 1422); (W16.of_int 287); (W16.of_int 202);
(W16.of_int 3158); (W16.of_int 622); (W16.of_int 1577); (W16.of_int 182);
(W16.of_int 962); (W16.of_int 2127); (W16.of_int 1855); (W16.of_int 1468);
(W16.of_int 573); (W16.of_int 2004); (W16.of_int 264); (W16.of_int 383);
(W16.of_int 2500); (W16.of_int 1458); (W16.of_int 1727); (W16.of_int 3199);
(W16.of_int 2648); (W16.of_int 1017); (W16.of_int 732); (W16.of_int 608);
(W16.of_int 1787); (W16.of_int 411); (W16.of_int 3124); (W16.of_int 1758);
(W16.of_int 1223); (W16.of_int 652); (W16.of_int 2777); (W16.of_int 1015);
(W16.of_int 2036); (W16.of_int 1491); (W16.of_int 3047); (W16.of_int 1785);
(W16.of_int 516); (W16.of_int 3321); (W16.of_int 3009); (W16.of_int 2663);
(W16.of_int 1711); (W16.of_int 2167); (W16.of_int 126); (W16.of_int 1469);
(W16.of_int 2476); (W16.of_int 3239); (W16.of_int 3058); (W16.of_int 830);
(W16.of_int 107); (W16.of_int 1908); (W16.of_int 3082); (W16.of_int 2378);
(W16.of_int 2931); (W16.of_int 961); (W16.of_int 1821); (W16.of_int 2604);
(W16.of_int 448); (W16.of_int 2264); (W16.of_int 677); (W16.of_int 2054);
(W16.of_int 2226); (W16.of_int 430); (W16.of_int 555); (W16.of_int 843);
(W16.of_int 2078); (W16.of_int 871); (W16.of_int 1550); (W16.of_int 105);
(W16.of_int 422); (W16.of_int 587); (W16.of_int 177); (W16.of_int 3094);
(W16.of_int 3038); (W16.of_int 2869); (W16.of_int 1574); (W16.of_int 1653);
(W16.of_int 3083); (W16.of_int 778); (W16.of_int 1159); (W16.of_int 3182);
(W16.of_int 2552); (W16.of_int 1483); (W16.of_int 2727); (W16.of_int 1119);
(W16.of_int 1739); (W16.of_int 644); (W16.of_int 2457); (W16.of_int 349);
(W16.of_int 418); (W16.of_int 329); (W16.of_int 3173); (W16.of_int 3254);
(W16.of_int 817); (W16.of_int 1097); (W16.of_int 603); (W16.of_int 610);
(W16.of_int 1322); (W16.of_int 2044); (W16.of_int 1864); (W16.of_int 384);
(W16.of_int 2114); (W16.of_int 3193); (W16.of_int 1218); (W16.of_int 1994);
(W16.of_int 2455); (W16.of_int 220); (W16.of_int 2142); (W16.of_int 1670);
(W16.of_int 2144); (W16.of_int 1799); (W16.of_int 2051); (W16.of_int 794);
(W16.of_int 1819); (W16.of_int 2475); (W16.of_int 2459); (W16.of_int 478);
(W16.of_int 3221); (W16.of_int 3021); (W16.of_int 996); (W16.of_int 991);
(W16.of_int 958); (W16.of_int 1869); (W16.of_int 1522); (W16.of_int 1628)]).

module type Syscall_t = {
  proc randombytes_32 (_:BArray32.t) : BArray32.t
  proc randombytes_64 (_:BArray64.t) : BArray64.t
}.

module Syscall : Syscall_t = {
  proc randombytes_32 (a:BArray32.t) : BArray32.t = {
    
    a <$ BArray32.darray;
    return a;
  }
  proc randombytes_64 (a:BArray64.t) : BArray64.t = {
    
    a <$ BArray64.darray;
    return a;
  }
}.

module M(SC:Syscall_t) = {
  var tmp__trace : trace
  proc __shuffle8 (a:W256.t, b:W256.t) : W256.t * W256.t * trace = {
    var r0:W256.t;
    var r1:W256.t;
    var trace___shuffle8:trace;
    trace___shuffle8 <- [];
    r0 <- (VPERM2I128 a b (W8.of_int 32));
    r1 <- (VPERM2I128 a b (W8.of_int 49));
    return (r0, r1, trace___shuffle8);
  }
  proc __shuffle4 (a:W256.t, b:W256.t) : W256.t * W256.t * trace = {
    var r0:W256.t;
    var r1:W256.t;
    var trace___shuffle4:trace;
    trace___shuffle4 <- [];
    r0 <- (VPUNPCKL_4u64 a b);
    r1 <- (VPUNPCKH_4u64 a b);
    return (r0, r1, trace___shuffle4);
  }
  proc __shuffle2 (a:W256.t, b:W256.t) : W256.t * W256.t * trace = {
    var t0:W256.t;
    var t1:W256.t;
    var trace___shuffle2:trace;
    trace___shuffle2 <- [];
    t0 <- (VMOVSLDUP_256 b);
    t0 <- (VPBLEND_8u32 a t0 (W8.of_int 170));
    a <- (VPSRL_4u64 a (W128.of_int 32));
    t1 <- (VPBLEND_8u32 a b (W8.of_int 170));
    return (t0, t1, trace___shuffle2);
  }
  proc __shuffle1 (a:W256.t, b:W256.t) : W256.t * W256.t * trace = {
    var r0:W256.t;
    var r1:W256.t;
    var t0:W256.t;
    var t1:W256.t;
    var trace___shuffle1:trace;
    trace___shuffle1 <- [];
    t0 <- (VPSLL_8u32 b (W128.of_int 16));
    r0 <- (VPBLEND_16u16 a t0 (W8.of_int 170));
    t1 <- (VPSRL_8u32 a (W128.of_int 16));
    r1 <- (VPBLEND_16u16 t1 b (W8.of_int 170));
    return (r0, r1, trace___shuffle1);
  }
  proc __nttunpack128 (r0:W256.t, r1:W256.t, r2:W256.t, r3:W256.t, r4:W256.t,
                       r5:W256.t, r6:W256.t, r7:W256.t) : W256.t * W256.t *
                                                          W256.t * W256.t *
                                                          W256.t * W256.t *
                                                          W256.t * W256.t *
                                                          trace = {
    var param:W256.t;
    var param_0:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var result_19:W256.t;
    var result_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_21:W256.t;
    var result_22:W256.t;
    var param_23:W256.t;
    var param_24:W256.t;
    var result_23:W256.t;
    var result_24:W256.t;
    var param_25:W256.t;
    var param_26:W256.t;
    var result_25:W256.t;
    var result_26:W256.t;
    var param_27:W256.t;
    var param_28:W256.t;
    var result_27:W256.t;
    var result_28:W256.t;
    var param_29:W256.t;
    var param_30:W256.t;
    var result_29:W256.t;
    var result_30:W256.t;
    var trace___nttunpack128:trace;
    trace___nttunpack128 <- [];
    param_30 <- r0;
    param_29 <- r4;
    (result_30, result_29, tmp__trace) <@ __shuffle8 (param_30, param_29);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r0 <- result_30;
    r4 <- result_29;
    param_28 <- r1;
    param_27 <- r5;
    (result_28, result_27, tmp__trace) <@ __shuffle8 (param_28, param_27);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r1 <- result_28;
    r5 <- result_27;
    param_26 <- r2;
    param_25 <- r6;
    (result_26, result_25, tmp__trace) <@ __shuffle8 (param_26, param_25);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r2 <- result_26;
    r6 <- result_25;
    param_24 <- r3;
    param_23 <- r7;
    (result_24, result_23, tmp__trace) <@ __shuffle8 (param_24, param_23);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r3 <- result_24;
    r7 <- result_23;
    param_22 <- r0;
    param_21 <- r2;
    (result_22, result_21, tmp__trace) <@ __shuffle4 (param_22, param_21);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r0 <- result_22;
    r2 <- result_21;
    param_20 <- r4;
    param_19 <- r6;
    (result_20, result_19, tmp__trace) <@ __shuffle4 (param_20, param_19);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r4 <- result_20;
    r6 <- result_19;
    param_18 <- r1;
    param_17 <- r3;
    (result_18, result_17, tmp__trace) <@ __shuffle4 (param_18, param_17);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r1 <- result_18;
    r3 <- result_17;
    param_16 <- r5;
    param_15 <- r7;
    (result_16, result_15, tmp__trace) <@ __shuffle4 (param_16, param_15);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r5 <- result_16;
    r7 <- result_15;
    param_14 <- r0;
    param_13 <- r1;
    (result_14, result_13, tmp__trace) <@ __shuffle2 (param_14, param_13);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r0 <- result_14;
    r1 <- result_13;
    param_12 <- r2;
    param_11 <- r3;
    (result_12, result_11, tmp__trace) <@ __shuffle2 (param_12, param_11);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r2 <- result_12;
    r3 <- result_11;
    param_10 <- r4;
    param_9 <- r5;
    (result_10, result_9, tmp__trace) <@ __shuffle2 (param_10, param_9);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r4 <- result_10;
    r5 <- result_9;
    param_8 <- r6;
    param_7 <- r7;
    (result_8, result_7, tmp__trace) <@ __shuffle2 (param_8, param_7);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r6 <- result_8;
    r7 <- result_7;
    param_6 <- r0;
    param_5 <- r4;
    (result_6, result_5, tmp__trace) <@ __shuffle1 (param_6, param_5);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r0 <- result_6;
    r4 <- result_5;
    param_4 <- r1;
    param_3 <- r5;
    (result_4, result_3, tmp__trace) <@ __shuffle1 (param_4, param_3);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r1 <- result_4;
    r5 <- result_3;
    param_2 <- r2;
    param_1 <- r6;
    (result_2, result_1, tmp__trace) <@ __shuffle1 (param_2, param_1);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r2 <- result_2;
    r6 <- result_1;
    param_0 <- r3;
    param <- r7;
    (result_0, result, tmp__trace) <@ __shuffle1 (param_0, param);
    trace___nttunpack128 <- (trace___nttunpack128 ++ tmp__trace);
    r3 <- result_0;
    r7 <- result;
    return (r0, r4, r1, r5, r2, r6, r3, r7, trace___nttunpack128);
  }
  proc _nttunpack (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                       BArray512.t * trace = {
    var r0:W256.t;
    var r1:W256.t;
    var r2:W256.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r6:W256.t;
    var r7:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var trace__nttunpack:trace;
    trace__nttunpack <- [];
    trace__nttunpack <-
    (trace__nttunpack ++ [(Assert, (is_init b_rp 0 512))]);
    r0 <- (BArray512.get256d rp 0);
    r1 <- (BArray512.get256d rp 32);
    r2 <- (BArray512.get256d rp 64);
    r3 <- (BArray512.get256d rp 96);
    r4 <- (BArray512.get256d rp 128);
    r5 <- (BArray512.get256d rp 160);
    r6 <- (BArray512.get256d rp 192);
    r7 <- (BArray512.get256d rp 224);
    param_14 <- r0;
    param_13 <- r1;
    param_12 <- r2;
    param_11 <- r3;
    param_10 <- r4;
    param_9 <- r5;
    param_8 <- r6;
    param_7 <- r7;
    (result_14, result_13, result_12, result_11, result_10, result_9,
    result_8, result_7, tmp__trace) <@ __nttunpack128 (param_14, param_13,
    param_12, param_11, param_10, param_9, param_8, param_7);
    trace__nttunpack <- (trace__nttunpack ++ tmp__trace);
    r0 <- result_14;
    r1 <- result_13;
    r2 <- result_12;
    r3 <- result_11;
    r4 <- result_10;
    r5 <- result_9;
    r6 <- result_8;
    r7 <- result_7;
    rp <- (BArray512.set256d rp 0 r0);
    rp <- (BArray512.set256d rp 32 r1);
    rp <- (BArray512.set256d rp 64 r2);
    rp <- (BArray512.set256d rp 96 r3);
    rp <- (BArray512.set256d rp 128 r4);
    rp <- (BArray512.set256d rp 160 r5);
    rp <- (BArray512.set256d rp 192 r6);
    rp <- (BArray512.set256d rp 224 r7);
    r0 <- (BArray512.get256d rp 256);
    r1 <- (BArray512.get256d rp 288);
    r2 <- (BArray512.get256d rp 320);
    r3 <- (BArray512.get256d rp 352);
    r4 <- (BArray512.get256d rp 384);
    r5 <- (BArray512.get256d rp 416);
    r6 <- (BArray512.get256d rp 448);
    r7 <- (BArray512.get256d rp 480);
    param_6 <- r0;
    param_5 <- r1;
    param_4 <- r2;
    param_3 <- r3;
    param_2 <- r4;
    param_1 <- r5;
    param_0 <- r6;
    param <- r7;
    (result_6, result_5, result_4, result_3, result_2, result_1, result_0,
    result, tmp__trace) <@ __nttunpack128 (param_6, param_5, param_4,
    param_3, param_2, param_1, param_0, param);
    trace__nttunpack <- (trace__nttunpack ++ tmp__trace);
    r0 <- result_6;
    r1 <- result_5;
    r2 <- result_4;
    r3 <- result_3;
    r4 <- result_2;
    r5 <- result_1;
    r6 <- result_0;
    r7 <- result;
    rp <- (BArray512.set256d rp 256 r0);
    rp <- (BArray512.set256d rp 288 r1);
    rp <- (BArray512.set256d rp 320 r2);
    rp <- (BArray512.set256d rp 352 r3);
    rp <- (BArray512.set256d rp 384 r4);
    rp <- (BArray512.set256d rp 416 r5);
    rp <- (BArray512.set256d rp 448 r6);
    rp <- (BArray512.set256d rp 480 r7);
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__nttunpack);
  }
  proc __csubq (r:W256.t, qx16:W256.t) : W256.t * trace = {
    var t:W256.t;
    var trace___csubq:trace;
    trace___csubq <- [];
    r <- (VPSUB_16u16 r qx16);
    t <- (VPSRA_16u16 r (W128.of_int 15));
    t <- (VPAND_256 t qx16);
    r <- (VPADD_16u16 t r);
    return (r, trace___csubq);
  }
  proc __red16x (r:W256.t, qx16:W256.t, vx16:W256.t) : W256.t * trace = {
    var x:W256.t;
    var trace___red16x:trace;
    trace___red16x <- [];
    x <- (VPMULH_16u16 r vx16);
    x <- (VPSRA_16u16 x (W128.of_int 10));
    x <- (VPMULL_16u16 x qx16);
    r <- (VPSUB_16u16 r x);
    return (r, trace___red16x);
  }
  proc __fqmulprecomp16x (b:W256.t, al:W256.t, ah:W256.t, qx16:W256.t) : 
  W256.t * trace = {
    var x:W256.t;
    var trace___fqmulprecomp16x:trace;
    trace___fqmulprecomp16x <- [];
    x <- (VPMULL_16u16 al b);
    b <- (VPMULH_16u16 ah b);
    x <- (VPMULH_16u16 x qx16);
    b <- (VPSUB_16u16 b x);
    return (b, trace___fqmulprecomp16x);
  }
  proc __fqmulx16 (a:W256.t, b:W256.t, qx16:W256.t, qinvx16:W256.t) : 
  W256.t * trace = {
    var rd:W256.t;
    var rhi:W256.t;
    var rlo:W256.t;
    var trace___fqmulx16:trace;
    trace___fqmulx16 <- [];
    rhi <- (VPMULH_16u16 a b);
    rlo <- (VPMULL_16u16 a b);
    rlo <- (VPMULL_16u16 rlo qinvx16);
    rlo <- (VPMULH_16u16 rlo qx16);
    rd <- (VPSUB_16u16 rhi rlo);
    return (rd, trace___fqmulx16);
  }
  proc keccakf1600_index (x:int, y:int) : int * trace = {
    var r:int;
    var trace_keccakf1600_index:trace;
    trace_keccakf1600_index <- [];
    r <- ((x %% 5) + (5 * (y %% 5)));
    return (r, trace_keccakf1600_index);
  }
  proc keccakf1600_rho_offsets (i:int) : int * trace = {
    var r:int;
    var x:int;
    var y:int;
    var t:int;
    var z:int;
    var trace_keccakf1600_rho_offsets:trace;
    trace_keccakf1600_rho_offsets <- [];
    r <- 0;
    x <- 1;
    y <- 0;
    t <- 0;
    while ((t < 24)) {
      if ((i = (x + (5 * y)))) {
        r <- ((((t + 1) * (t + 2)) %/ 2) %% 64);
      } else {
        
      }
      z <- (((2 * x) + (3 * y)) %% 5);
      x <- y;
      y <- z;
      t <- (t + 1);
    }
    return (r, trace_keccakf1600_rho_offsets);
  }
  proc keccakf1600_rhotates (x:int, y:int) : int * trace = {
    var r:int;
    var i:int;
    var param:int;
    var result:int;
    var param_0:int;
    var param_1:int;
    var result_0:int;
    var trace_keccakf1600_rhotates:trace;
    trace_keccakf1600_rhotates <- [];
    param_1 <- x;
    param_0 <- y;
    (result_0, tmp__trace) <@ keccakf1600_index (param_1, param_0);
    trace_keccakf1600_rhotates <- (trace_keccakf1600_rhotates ++ tmp__trace);
    i <- result_0;
    param <- i;
    (result, tmp__trace) <@ keccakf1600_rho_offsets (param);
    trace_keccakf1600_rhotates <- (trace_keccakf1600_rhotates ++ tmp__trace);
    r <- result;
    return (r, trace_keccakf1600_rhotates);
  }
  proc __keccakf1600_pround_avx2 (state:BArray224.t, b_state:BArray224.t) : 
  BArray224.t * BArray224.t * trace = {
    var c00:W256.t;
    var c14:W256.t;
    var t2:W256.t;
    var t4:W256.t;
    var t0:W256.t;
    var t1:W256.t;
    var d14:W256.t;
    var d00:W256.t;
    var t3:W256.t;
    var t5:W256.t;
    var t6:W256.t;
    var t7:W256.t;
    var t8:W256.t;
    var trace___keccakf1600_pround_avx2:trace;
    trace___keccakf1600_pround_avx2 <- [];
    trace___keccakf1600_pround_avx2 <-
    (trace___keccakf1600_pround_avx2 ++ [(Assert, (is_init b_state 0 224))]);
    c00 <- (VPSHUFD_256 (BArray224.get256 state 2) (W8.of_int 78));
    c14 <- ((BArray224.get256 state 5) `^` (BArray224.get256 state 3));
    t2 <- ((BArray224.get256 state 4) `^` (BArray224.get256 state 6));
    c14 <- (c14 `^` (BArray224.get256 state 1));
    c14 <- (c14 `^` t2);
    t4 <- (VPERMQ c14 (W8.of_int 147));
    c00 <- (c00 `^` (BArray224.get256 state 2));
    t0 <- (VPERMQ c00 (W8.of_int 78));
    t1 <- (c14 \vshr64u256 (W128.of_int 63));
    t2 <- (c14 \vadd64u256 c14);
    t1 <- (t1 `|` t2);
    d14 <- (VPERMQ t1 (W8.of_int 57));
    d00 <- (t1 `^` t4);
    d00 <- (VPERMQ d00 (W8.of_int 0));
    c00 <- (c00 `^` (BArray224.get256 state 0));
    c00 <- (c00 `^` t0);
    t0 <- (c00 \vshr64u256 (W128.of_int 63));
    t1 <- (c00 \vadd64u256 c00);
    t1 <- (t1 `|` t0);
    state <- (BArray224.set256 state 2 ((BArray224.get256 state 2) `^` d00));
    state <- (BArray224.set256 state 0 ((BArray224.get256 state 0) `^` d00));
    d14 <- (VPBLEND_8u32 d14 t1 (W8.of_int 192));
    t4 <- (VPBLEND_8u32 t4 c00 (W8.of_int 3));
    d14 <- (d14 `^` t4);
    t3 <-
    (VPSLLV_4u64 (BArray224.get256 state 2)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 0));
    state <-
    (BArray224.set256 state 2
    (VPSRLV_4u64 (BArray224.get256 state 2)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 0)));
    state <- (BArray224.set256 state 2 ((BArray224.get256 state 2) `|` t3));
    state <- (BArray224.set256 state 3 ((BArray224.get256 state 3) `^` d14));
    t4 <-
    (VPSLLV_4u64 (BArray224.get256 state 3)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 2));
    state <-
    (BArray224.set256 state 3
    (VPSRLV_4u64 (BArray224.get256 state 3)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 2)));
    state <- (BArray224.set256 state 3 ((BArray224.get256 state 3) `|` t4));
    state <- (BArray224.set256 state 4 ((BArray224.get256 state 4) `^` d14));
    t5 <-
    (VPSLLV_4u64 (BArray224.get256 state 4)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 3));
    state <-
    (BArray224.set256 state 4
    (VPSRLV_4u64 (BArray224.get256 state 4)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 3)));
    state <- (BArray224.set256 state 4 ((BArray224.get256 state 4) `|` t5));
    state <- (BArray224.set256 state 5 ((BArray224.get256 state 5) `^` d14));
    t6 <-
    (VPSLLV_4u64 (BArray224.get256 state 5)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 4));
    state <-
    (BArray224.set256 state 5
    (VPSRLV_4u64 (BArray224.get256 state 5)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 4)));
    state <- (BArray224.set256 state 5 ((BArray224.get256 state 5) `|` t6));
    state <- (BArray224.set256 state 6 ((BArray224.get256 state 6) `^` d14));
    t3 <- (VPERMQ (BArray224.get256 state 2) (W8.of_int 141));
    t4 <- (VPERMQ (BArray224.get256 state 3) (W8.of_int 141));
    t7 <-
    (VPSLLV_4u64 (BArray224.get256 state 6)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 5));
    t1 <-
    (VPSRLV_4u64 (BArray224.get256 state 6)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 5));
    t1 <- (t1 `|` t7);
    state <- (BArray224.set256 state 1 ((BArray224.get256 state 1) `^` d14));
    t5 <- (VPERMQ (BArray224.get256 state 4) (W8.of_int 27));
    t6 <- (VPERMQ (BArray224.get256 state 5) (W8.of_int 114));
    t8 <-
    (VPSLLV_4u64 (BArray224.get256 state 1)
    (BArray192.get256 kECCAK_RHOTATES_LEFT 1));
    t2 <-
    (VPSRLV_4u64 (BArray224.get256 state 1)
    (BArray192.get256 kECCAK_RHOTATES_RIGHT 1));
    t2 <- (t2 `|` t8);
    t7 <- (VPSRLDQ_256 t1 (W8.of_int 8));
    t0 <- ((invw t1) `&` t7);
    state <- (BArray224.set256 state 3 (VPBLEND_8u32 t2 t6 (W8.of_int 12)));
    t8 <- (VPBLEND_8u32 t4 t2 (W8.of_int 12));
    state <- (BArray224.set256 state 5 (VPBLEND_8u32 t3 t4 (W8.of_int 12)));
    t7 <- (VPBLEND_8u32 t2 t3 (W8.of_int 12));
    state <-
    (BArray224.set256 state 3
    (VPBLEND_8u32 (BArray224.get256 state 3) t4 (W8.of_int 48)));
    t8 <- (VPBLEND_8u32 t8 t5 (W8.of_int 48));
    state <-
    (BArray224.set256 state 5
    (VPBLEND_8u32 (BArray224.get256 state 5) t2 (W8.of_int 48)));
    t7 <- (VPBLEND_8u32 t7 t6 (W8.of_int 48));
    state <-
    (BArray224.set256 state 3
    (VPBLEND_8u32 (BArray224.get256 state 3) t5 (W8.of_int 192)));
    t8 <- (VPBLEND_8u32 t8 t6 (W8.of_int 192));
    state <-
    (BArray224.set256 state 5
    (VPBLEND_8u32 (BArray224.get256 state 5) t6 (W8.of_int 192)));
    t7 <- (VPBLEND_8u32 t7 t4 (W8.of_int 192));
    state <-
    (BArray224.set256 state 3 ((invw (BArray224.get256 state 3)) `&` t8));
    state <-
    (BArray224.set256 state 5 ((invw (BArray224.get256 state 5)) `&` t7));
    state <- (BArray224.set256 state 6 (VPBLEND_8u32 t5 t2 (W8.of_int 12)));
    t8 <- (VPBLEND_8u32 t3 t5 (W8.of_int 12));
    state <- (BArray224.set256 state 3 ((BArray224.get256 state 3) `^` t3));
    state <-
    (BArray224.set256 state 6
    (VPBLEND_8u32 (BArray224.get256 state 6) t3 (W8.of_int 48)));
    t8 <- (VPBLEND_8u32 t8 t4 (W8.of_int 48));
    state <- (BArray224.set256 state 5 ((BArray224.get256 state 5) `^` t5));
    state <-
    (BArray224.set256 state 6
    (VPBLEND_8u32 (BArray224.get256 state 6) t4 (W8.of_int 192)));
    t8 <- (VPBLEND_8u32 t8 t2 (W8.of_int 192));
    state <-
    (BArray224.set256 state 6 ((invw (BArray224.get256 state 6)) `&` t8));
    state <- (BArray224.set256 state 6 ((BArray224.get256 state 6) `^` t6));
    state <- (BArray224.set256 state 4 (VPERMQ t1 (W8.of_int 30)));
    t8 <-
    (VPBLEND_8u32 (BArray224.get256 state 4) (BArray224.get256 state 0)
    (W8.of_int 48));
    state <- (BArray224.set256 state 1 (VPERMQ t1 (W8.of_int 57)));
    state <-
    (BArray224.set256 state 1
    (VPBLEND_8u32 (BArray224.get256 state 1) (BArray224.get256 state 0)
    (W8.of_int 192)));
    state <-
    (BArray224.set256 state 1 ((invw (BArray224.get256 state 1)) `&` t8));
    state <- (BArray224.set256 state 2 (VPBLEND_8u32 t4 t5 (W8.of_int 12)));
    t7 <- (VPBLEND_8u32 t6 t4 (W8.of_int 12));
    state <-
    (BArray224.set256 state 2
    (VPBLEND_8u32 (BArray224.get256 state 2) t6 (W8.of_int 48)));
    t7 <- (VPBLEND_8u32 t7 t3 (W8.of_int 48));
    state <-
    (BArray224.set256 state 2
    (VPBLEND_8u32 (BArray224.get256 state 2) t3 (W8.of_int 192)));
    t7 <- (VPBLEND_8u32 t7 t5 (W8.of_int 192));
    state <-
    (BArray224.set256 state 2 ((invw (BArray224.get256 state 2)) `&` t7));
    state <- (BArray224.set256 state 2 ((BArray224.get256 state 2) `^` t2));
    t0 <- (VPERMQ t0 (W8.of_int 0));
    state <-
    (BArray224.set256 state 3
    (VPERMQ (BArray224.get256 state 3) (W8.of_int 27)));
    state <-
    (BArray224.set256 state 5
    (VPERMQ (BArray224.get256 state 5) (W8.of_int 141)));
    state <-
    (BArray224.set256 state 6
    (VPERMQ (BArray224.get256 state 6) (W8.of_int 114)));
    state <- (BArray224.set256 state 4 (VPBLEND_8u32 t6 t3 (W8.of_int 12)));
    t7 <- (VPBLEND_8u32 t5 t6 (W8.of_int 12));
    state <-
    (BArray224.set256 state 4
    (VPBLEND_8u32 (BArray224.get256 state 4) t5 (W8.of_int 48)));
    t7 <- (VPBLEND_8u32 t7 t2 (W8.of_int 48));
    state <-
    (BArray224.set256 state 4
    (VPBLEND_8u32 (BArray224.get256 state 4) t2 (W8.of_int 192)));
    t7 <- (VPBLEND_8u32 t7 t3 (W8.of_int 192));
    state <-
    (BArray224.set256 state 4 ((invw (BArray224.get256 state 4)) `&` t7));
    state <- (BArray224.set256 state 0 ((BArray224.get256 state 0) `^` t0));
    state <- (BArray224.set256 state 1 ((BArray224.get256 state 1) `^` t1));
    state <- (BArray224.set256 state 4 ((BArray224.get256 state 4) `^` t4));
    b_state <- (BArray224.init_arr (W8.of_int 255) 224);
    return (state, b_state, trace___keccakf1600_pround_avx2);
  }
  proc _keccakf1600_avx2 (state:BArray224.t, b_state:BArray224.t) : BArray224.t *
                                                                    BArray224.t *
                                                                    trace = {
    var round_constants:BArray192.t;
    var rc:W256.t;
    var r:int;
    var param:BArray224.t;
    var result:BArray224.t;
    var b_result:BArray224.t;
    var trace__keccakf1600_avx2:trace;
    b_result <- witness;
    param <- witness;
    result <- witness;
    round_constants <- witness;
    trace__keccakf1600_avx2 <- [];
    trace__keccakf1600_avx2 <-
    (trace__keccakf1600_avx2 ++ [(Assert, (is_init b_state 0 224))]);
    round_constants <- kECCAK1600_RC;
    r <- 0;
    param <- state;
    (result, b_result, tmp__trace) <@ __keccakf1600_pround_avx2 (param,
    (BArray224.init_arr (W8.of_int 255) 224));
    trace__keccakf1600_avx2 <- (trace__keccakf1600_avx2 ++ tmp__trace);
    trace__keccakf1600_avx2 <-
    (trace__keccakf1600_avx2 ++ [(Assert, (is_init b_result 0 224))]);
    state <- result;
    trace__keccakf1600_avx2 <-
    (trace__keccakf1600_avx2 ++
    [(Assert, ((0 <= (r * 8)) /\ (((r * 8) + 8) <= 192)))]);
    rc <- (VPBROADCAST_4u64 (BArray192.get64 round_constants r));
    state <- (BArray224.set256 state 0 ((BArray224.get256 state 0) `^` rc));
    trace__keccakf1600_avx2 <-
    (trace__keccakf1600_avx2 ++
    [(Assert, ((0 <= (r + 1)) /\ ((r + 1) <= 18446744073709551615)))]);
    r <- (r + 1);
    while ((r < 24)) {
      param <- state;
      (result, b_result, tmp__trace) <@ __keccakf1600_pround_avx2 (param,
      (BArray224.init_arr (W8.of_int 255) 224));
      trace__keccakf1600_avx2 <- (trace__keccakf1600_avx2 ++ tmp__trace);
      trace__keccakf1600_avx2 <-
      (trace__keccakf1600_avx2 ++ [(Assert, (is_init b_result 0 224))]);
      state <- result;
      trace__keccakf1600_avx2 <-
      (trace__keccakf1600_avx2 ++
      [(Assert, ((0 <= (r * 8)) /\ (((r * 8) + 8) <= 192)))]);
      rc <- (VPBROADCAST_4u64 (BArray192.get64 round_constants r));
      state <-
      (BArray224.set256 state 0 ((BArray224.get256 state 0) `^` rc));
      trace__keccakf1600_avx2 <-
      (trace__keccakf1600_avx2 ++
      [(Assert, ((0 <= (r + 1)) /\ ((r + 1) <= 18446744073709551615)))]);
      r <- (r + 1);
    }
    b_state <- (BArray224.init_arr (W8.of_int 255) 224);
    return (state, b_state, trace__keccakf1600_avx2);
  }
  proc __u64_to_u256 (x:W64.t, l:int) : W256.t * trace = {
    var t256:W256.t;
    var t128:W128.t;
    var trace___u64_to_u256:trace;
    trace___u64_to_u256 <- [];
    if (((l %% 2) = 0)) {
      t128 <- (zeroextu128 x);
    } else {
      t128 <- (set0_128);
      t128 <- (VPINSR_2u64 t128 x (W8.of_int 1));
    }
    t256 <- (set0_256);
    if (((l %/ 2) = 0)) {
      t256 <- (VINSERTI128 t256 t128 (W8.of_int 0));
    } else {
      t256 <- (VINSERTI128 t256 t128 (W8.of_int 1));
    }
    return (t256, trace___u64_to_u256);
  }
  proc __state_init_avx2 () : BArray224.t * BArray224.t * trace = {
    var st:BArray224.t;
    var i:int;
    var b_st:BArray224.t;
    var trace___state_init_avx2:trace;
    b_st <- witness;
    st <- witness;
    trace___state_init_avx2 <- [];
    b_st <- (BArray224.init_arr (W8.of_int 0) 224);
    i <- 0;
    while ((i < 7)) {
      trace___state_init_avx2 <-
      (trace___state_init_avx2 ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 224)))]);
      b_st <-
      (BArray224.set256d b_st (i * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      st <- (BArray224.set256 st i (set0_256));
      i <- (i + 1);
    }
    return (st, b_st, trace___state_init_avx2);
  }
  proc __pstate_init_avx2 (pst:BArray200.t, b_pst:BArray200.t) : BArray200.t *
                                                                 BArray200.t *
                                                                 BArray224.t *
                                                                 BArray224.t *
                                                                 trace = {
    var st:BArray224.t;
    var z256:W256.t;
    var i:int;
    var z64:W64.t;
    var result:BArray224.t;
    var b_st:BArray224.t;
    var b_result:BArray224.t;
    var trace___pstate_init_avx2:trace;
    b_result <- witness;
    b_st <- witness;
    result <- witness;
    st <- witness;
    trace___pstate_init_avx2 <- [];
    z256 <- (set0_256);
    i <- 0;
    while ((i < 6)) {
      trace___pstate_init_avx2 <-
      (trace___pstate_init_avx2 ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 200)))]);
      b_pst <-
      (BArray200.set256d b_pst (i * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      pst <- (BArray200.set256 pst i z256);
      i <- (i + 1);
    }
    z64 <- (W64.of_int 0);
    b_pst <- (BArray200.set64d b_pst 192 (W64.of_int 18446744073709551615));
    pst <- (BArray200.set64 pst 24 z64);
    (result, b_result, tmp__trace) <@ __state_init_avx2 ();
    trace___pstate_init_avx2 <- (trace___pstate_init_avx2 ++ tmp__trace);
    trace___pstate_init_avx2 <-
    (trace___pstate_init_avx2 ++ [(Assert, (is_init b_result 0 224))]);
    st <- result;
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (pst, b_pst, st, b_st, trace___pstate_init_avx2);
  }
  proc __perm_reg3456_avx2 (r3:W256.t, r4:W256.t, r5:W256.t, r6:W256.t) : 
  W256.t * W256.t * W256.t * W256.t * trace = {
    var st3:W256.t;
    var st4:W256.t;
    var st5:W256.t;
    var st6:W256.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var trace___perm_reg3456_avx2:trace;
    trace___perm_reg3456_avx2 <- [];
    t256_0 <- (VPBLEND_8u32 r3 r5 (W8.of_int 195));
    t256_1 <- (VPBLEND_8u32 r6 r4 (W8.of_int 195));
    t256_2 <- (VPBLEND_8u32 r4 r3 (W8.of_int 195));
    st3 <- (VPBLEND_8u32 t256_0 t256_1 (W8.of_int 240));
    st4 <- (VPBLEND_8u32 t256_1 t256_0 (W8.of_int 240));
    t256_0 <- (VPBLEND_8u32 r5 r6 (W8.of_int 195));
    st5 <- (VPBLEND_8u32 t256_0 t256_2 (W8.of_int 240));
    st6 <- (VPBLEND_8u32 t256_2 t256_0 (W8.of_int 240));
    return (st3, st4, st5, st6, trace___perm_reg3456_avx2);
  }
  proc __state_from_pstate_avx2 (pst:BArray200.t, b_pst:BArray200.t) : 
  BArray224.t * BArray224.t * trace = {
    var st:BArray224.t;
    var t128_0:W128.t;
    var t128_1:W128.t;
    var t:W64.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var b_st:BArray224.t;
    var trace___state_from_pstate_avx2:trace;
    b_st <- witness;
    st <- witness;
    trace___state_from_pstate_avx2 <- [];
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ [(Assert, (is_init b_pst 0 200))]);
    b_st <- (BArray224.init_arr (W8.of_int 0) 224);
    b_st <-
    (BArray224.set256d b_st 0
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <-
    (BArray224.set256 st 0 (VPBROADCAST_4u64 (BArray200.get64d pst 0)));
    b_st <-
    (BArray224.set256d b_st 32
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 1 (BArray200.get256d pst 8));
    t128_0 <- (VMOV_64 (BArray200.get64d pst 40));
    b_st <-
    (BArray224.set256d b_st 96
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 3 (BArray200.get256d pst 48));
    t128_1 <- (VMOV_64 (BArray200.get64d pst 80));
    b_st <-
    (BArray224.set256d b_st 128
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 4 (BArray200.get256d pst 88));
    t <- (BArray200.get64d pst 120);
    t128_0 <- (VPINSR_2u64 t128_0 t (W8.of_int 1));
    b_st <-
    (BArray224.set256d b_st 160
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 5 (BArray200.get256d pst 128));
    t <- (BArray200.get64d pst 160);
    t128_1 <- (VPINSR_2u64 t128_1 t (W8.of_int 1));
    b_st <-
    (BArray224.set256d b_st 64
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <-
    (BArray224.set256 st 2
    (W256.of_int
    (((W128.to_uint t128_1) %% (2 ^ 128)) +
    ((2 ^ 128) * (W128.to_uint t128_0)))));
    b_st <-
    (BArray224.set256d b_st 192
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 6 (BArray200.get256d pst 168));
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ [(Assert, (is_init b_st 96 32))]);
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ [(Assert, (is_init b_st 128 32))]);
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ [(Assert, (is_init b_st 160 32))]);
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ [(Assert, (is_init b_st 192 32))]);
    param_2 <- (BArray224.get256 st 3);
    param_1 <- (BArray224.get256 st 4);
    param_0 <- (BArray224.get256 st 5);
    param <- (BArray224.get256 st 6);
    (result_2, result_1, result_0, result, tmp__trace) <@ __perm_reg3456_avx2 (
    param_2, param_1, param_0, param);
    trace___state_from_pstate_avx2 <-
    (trace___state_from_pstate_avx2 ++ tmp__trace);
    b_st <-
    (BArray224.set256d b_st 96
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 3 result_2);
    b_st <-
    (BArray224.set256d b_st 128
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 4 result_1);
    b_st <-
    (BArray224.set256d b_st 160
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 5 result_0);
    b_st <-
    (BArray224.set256d b_st 192
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    st <- (BArray224.set256 st 6 result);
    return (st, b_st, trace___state_from_pstate_avx2);
  }
  proc __addstate_r3456_avx2 (st:BArray224.t, b_st:BArray224.t, r3:W256.t,
                              r4:W256.t, r5:W256.t, r6:W256.t) : BArray224.t *
                                                                 BArray224.t *
                                                                 trace = {
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var trace___addstate_r3456_avx2:trace;
    trace___addstate_r3456_avx2 <- [];
    trace___addstate_r3456_avx2 <-
    (trace___addstate_r3456_avx2 ++ [(Assert, (is_init b_st 0 224))]);
    param_2 <- r3;
    param_1 <- r4;
    param_0 <- r5;
    param <- r6;
    (result_2, result_1, result_0, result, tmp__trace) <@ __perm_reg3456_avx2 (
    param_2, param_1, param_0, param);
    trace___addstate_r3456_avx2 <-
    (trace___addstate_r3456_avx2 ++ tmp__trace);
    r3 <- result_2;
    r4 <- result_1;
    r5 <- result_0;
    r6 <- result;
    st <- (BArray224.set256 st 3 ((BArray224.get256 st 3) `^` r3));
    st <- (BArray224.set256 st 4 ((BArray224.get256 st 4) `^` r4));
    st <- (BArray224.set256 st 5 ((BArray224.get256 st 5) `^` r5));
    st <- (BArray224.set256 st 6 ((BArray224.get256 st 6) `^` r6));
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, trace___addstate_r3456_avx2);
  }
  proc __addpst01_avx2 (st:BArray224.t, b_st:BArray224.t, pst:BArray200.t,
                        b_pst:BArray200.t) : BArray224.t * BArray224.t *
                                             trace = {
    var t256:W256.t;
    var trace___addpst01_avx2:trace;
    trace___addpst01_avx2 <- [];
    trace___addpst01_avx2 <-
    (trace___addpst01_avx2 ++ [(Assert, (is_init b_st 0 224))]);
    trace___addpst01_avx2 <-
    (trace___addpst01_avx2 ++ [(Assert, (is_init b_pst 0 200))]);
    t256 <- (VPBROADCAST_4u64 (BArray200.get64d pst 0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` t256));
    t256 <- (BArray200.get256d pst 8);
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` t256));
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, trace___addpst01_avx2);
  }
  proc __addpst23456_avx2 (st:BArray224.t, b_st:BArray224.t, pst:BArray200.t,
                           b_pst:BArray200.t) : BArray224.t * BArray224.t *
                                                trace = {
    var t128_0:W128.t;
    var r3:W256.t;
    var t128_1:W128.t;
    var r4:W256.t;
    var t:W64.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var b_result:BArray224.t;
    var trace___addpst23456_avx2:trace;
    b_result <- witness;
    param_3 <- witness;
    result <- witness;
    trace___addpst23456_avx2 <- [];
    trace___addpst23456_avx2 <-
    (trace___addpst23456_avx2 ++ [(Assert, (is_init b_st 0 224))]);
    trace___addpst23456_avx2 <-
    (trace___addpst23456_avx2 ++ [(Assert, (is_init b_pst 0 200))]);
    t128_0 <- (VMOV_64 (BArray200.get64d pst 40));
    r3 <- (BArray200.get256d pst 48);
    t128_1 <- (VMOV_64 (BArray200.get64d pst 80));
    r4 <- (BArray200.get256d pst 88);
    t <- (BArray200.get64d pst 120);
    t128_0 <- (VPINSR_2u64 t128_0 t (W8.of_int 1));
    r5 <- (BArray200.get256d pst 128);
    t <- (BArray200.get64d pst 160);
    t128_1 <- (VPINSR_2u64 t128_1 t (W8.of_int 1));
    r2 <-
    (W256.of_int
    (((W128.to_uint t128_1) %% (2 ^ 128)) +
    ((2 ^ 128) * (W128.to_uint t128_0))));
    st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
    r6 <- (BArray200.get256d pst 168);
    param_3 <- st;
    param_2 <- r3;
    param_1 <- r4;
    param_0 <- r5;
    param <- r6;
    (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
    (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
    param);
    trace___addpst23456_avx2 <- (trace___addpst23456_avx2 ++ tmp__trace);
    trace___addpst23456_avx2 <-
    (trace___addpst23456_avx2 ++ [(Assert, (is_init b_result 0 224))]);
    st <- result;
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, trace___addpst23456_avx2);
  }
  proc _addpstate_avx2 (st:BArray224.t, b_st:BArray224.t, pst:BArray200.t,
                        b_pst:BArray200.t) : BArray224.t * BArray224.t *
                                             trace = {
    var param:BArray200.t;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:BArray200.t;
    var param_2:BArray224.t;
    var result_0:BArray224.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var trace__addpstate_avx2:trace;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    result <- witness;
    result_0 <- witness;
    trace__addpstate_avx2 <- [];
    trace__addpstate_avx2 <-
    (trace__addpstate_avx2 ++ [(Assert, (is_init b_st 0 224))]);
    trace__addpstate_avx2 <-
    (trace__addpstate_avx2 ++ [(Assert, (is_init b_pst 0 200))]);
    param_2 <- st;
    param_1 <- pst;
    (result_0, b_result_0, tmp__trace) <@ __addpst01_avx2 (param_2,
    (BArray224.init_arr (W8.of_int 255) 224), param_1,
    (BArray200.init_arr (W8.of_int 255) 200));
    trace__addpstate_avx2 <- (trace__addpstate_avx2 ++ tmp__trace);
    trace__addpstate_avx2 <-
    (trace__addpstate_avx2 ++ [(Assert, (is_init b_result_0 0 224))]);
    st <- result_0;
    param_0 <- st;
    param <- pst;
    (result, b_result, tmp__trace) <@ __addpst23456_avx2 (param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param,
    (BArray200.init_arr (W8.of_int 255) 200));
    trace__addpstate_avx2 <- (trace__addpstate_avx2 ++ tmp__trace);
    trace__addpstate_avx2 <-
    (trace__addpstate_avx2 ++ [(Assert, (is_init b_result 0 224))]);
    st <- result;
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, trace__addpstate_avx2);
  }
  proc __stavx2_pos_avx2 (pOS:int) : int * int * trace = {
    var r:int;
    var l:int;
    var trace___stavx2_pos_avx2:trace;
    trace___stavx2_pos_avx2 <- [];
    r <- 0;
    l <- 0;
    if ((0 < pOS)) {
      if ((pOS <= 4)) {
        r <- 1;
        l <- (pOS - 1);
      } else {
        if ((pOS = 10)) {
          r <- 2;
          l <- 0;
        } else {
          if ((pOS = 20)) {
            r <- 2;
            l <- 1;
          } else {
            if ((pOS = 5)) {
              r <- 2;
              l <- 2;
            } else {
              if ((pOS = 15)) {
                r <- 2;
                l <- 3;
              } else {
                if ((pOS = 16)) {
                  r <- 3;
                  l <- 0;
                } else {
                  if ((pOS = 7)) {
                    r <- 3;
                    l <- 1;
                  } else {
                    if ((pOS = 23)) {
                      r <- 3;
                      l <- 2;
                    } else {
                      if ((pOS = 14)) {
                        r <- 3;
                        l <- 3;
                      } else {
                        if ((pOS = 11)) {
                          r <- 4;
                          l <- 0;
                        } else {
                          if ((pOS = 22)) {
                            r <- 4;
                            l <- 1;
                          } else {
                            if ((pOS = 8)) {
                              r <- 4;
                              l <- 2;
                            } else {
                              if ((pOS = 19)) {
                                r <- 4;
                                l <- 3;
                              } else {
                                if ((pOS = 21)) {
                                  r <- 5;
                                  l <- 0;
                                } else {
                                  if ((pOS = 17)) {
                                    r <- 5;
                                    l <- 1;
                                  } else {
                                    if ((pOS = 13)) {
                                      r <- 5;
                                      l <- 2;
                                    } else {
                                      if ((pOS = 9)) {
                                        r <- 5;
                                        l <- 3;
                                      } else {
                                        if ((pOS = 6)) {
                                          r <- 6;
                                          l <- 0;
                                        } else {
                                          if ((pOS = 12)) {
                                            r <- 6;
                                            l <- 1;
                                          } else {
                                            if ((pOS = 18)) {
                                              r <- 6;
                                              l <- 2;
                                            } else {
                                              if ((pOS = 24)) {
                                                r <- 6;
                                                l <- 3;
                                              } else {
                                                
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      
    }
    return (r, l, trace___stavx2_pos_avx2);
  }
  proc __addratebit_avx2 (st:BArray224.t, b_st:BArray224.t, rATE8:int) : 
  BArray224.t * BArray224.t * trace = {
    var t64:W64.t;
    var r:int;
    var l:int;
    var t256:W256.t;
    var param:int;
    var param_0:W64.t;
    var result:W256.t;
    var param_1:int;
    var result_0:int;
    var result_1:int;
    var trace___addratebit_avx2:trace;
    trace___addratebit_avx2 <- [];
    trace___addratebit_avx2 <-
    (trace___addratebit_avx2 ++ [(Assert, (is_init b_st 0 224))]);
    t64 <- (W64.of_int 1);
    t64 <- (t64 `<<` (W8.of_int (((8 * rATE8) - 1) %% 64)));
    param_1 <- ((rATE8 - 1) %/ 8);
    (result_1, result_0, tmp__trace) <@ __stavx2_pos_avx2 (param_1);
    trace___addratebit_avx2 <- (trace___addratebit_avx2 ++ tmp__trace);
    trace___addratebit_avx2 <-
    (trace___addratebit_avx2 ++
    [(Assert, ((0 <= result_1) /\ (result_1 < 7)))]);
    r <- result_1;
    l <- result_0;
    if ((r = 0)) {
      t256 <- (VPBROADCAST_4u64 t64);
    } else {
      param_0 <- t64;
      param <- l;
      (result, tmp__trace) <@ __u64_to_u256 (param_0, param);
      trace___addratebit_avx2 <- (trace___addratebit_avx2 ++ tmp__trace);
      t256 <- result;
    }
    trace___addratebit_avx2 <-
    (trace___addratebit_avx2 ++
    [(Assert, ((0 <= (r * 32)) /\ (((r * 32) + 32) <= 224)))]);
    trace___addratebit_avx2 <-
    (trace___addratebit_avx2 ++
    [(Assert, ((0 <= (r * 32)) /\ (((r * 32) + 32) <= 224)))]);
    st <- (BArray224.set256 st r ((BArray224.get256 st r) `^` t256));
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, trace___addratebit_avx2);
  }
  proc keccakf1600_4x_theta_sum (a:BArray800.t, b_a:BArray800.t) : BArray160.t *
                                                                   BArray160.t *
                                                                   trace = {
    var c:BArray160.t;
    var x:int;
    var y:int;
    var b_c:BArray160.t;
    var trace_keccakf1600_4x_theta_sum:trace;
    b_c <- witness;
    c <- witness;
    trace_keccakf1600_4x_theta_sum <- [];
    trace_keccakf1600_4x_theta_sum <-
    (trace_keccakf1600_4x_theta_sum ++ [(Assert, (is_init b_a 0 800))]);
    b_c <- (BArray160.init_arr (W8.of_int 0) 160);
    x <- 0;
    while ((x < 5)) {
      trace_keccakf1600_4x_theta_sum <-
      (trace_keccakf1600_4x_theta_sum ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_theta_sum <-
      (trace_keccakf1600_4x_theta_sum ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 800)))]);
      b_c <-
      (BArray160.set256d b_c (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      c <- (BArray160.set256 c x (BArray800.get256 a x));
      x <- (x + 1);
    }
    y <- 1;
    while ((y < 5)) {
      x <- 0;
      while ((x < 5)) {
        trace_keccakf1600_4x_theta_sum <-
        (trace_keccakf1600_4x_theta_sum ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_theta_sum <-
        (trace_keccakf1600_4x_theta_sum ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_theta_sum <-
        (trace_keccakf1600_4x_theta_sum ++
        [(Assert, (is_init b_c (x * 32) 32))]);
        trace_keccakf1600_4x_theta_sum <-
        (trace_keccakf1600_4x_theta_sum ++
        [(Assert,
         ((0 <= ((x + (y * 5)) * 32)) /\
         ((((x + (y * 5)) * 32) + 32) <= 800)))]);
        b_c <-
        (BArray160.set256d b_c (x * 32)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        c <-
        (BArray160.set256 c x
        ((BArray160.get256 c x) `^` (BArray800.get256 a (x + (y * 5)))));
        x <- (x + 1);
      }
      y <- (y + 1);
    }
    return (c, b_c, trace_keccakf1600_4x_theta_sum);
  }
  proc keccakf1600_4x_rol (a:BArray160.t, b_a:BArray160.t, x:int, r:int,
                           r8:W256.t, r56:W256.t) : BArray160.t *
                                                    BArray160.t * trace = {
    var t:W256.t;
    var trace_keccakf1600_4x_rol:trace;
    trace_keccakf1600_4x_rol <- [];
    trace_keccakf1600_4x_rol <-
    (trace_keccakf1600_4x_rol ++
    [(Assert, (((is_init b_a (x * 32) 32) /\ (0 <= x)) /\ (x < 5)))]);
    if ((r = 8)) {
      trace_keccakf1600_4x_rol <-
      (trace_keccakf1600_4x_rol ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_rol <-
      (trace_keccakf1600_4x_rol ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_rol <-
      (trace_keccakf1600_4x_rol ++ [(Assert, (is_init b_a (x * 32) 32))]);
      b_a <-
      (BArray160.set256d b_a (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      a <- (BArray160.set256 a x (VPSHUFB_256 (BArray160.get256 a x) r8));
    } else {
      if ((r = 56)) {
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++ [(Assert, (is_init b_a (x * 32) 32))]);
        b_a <-
        (BArray160.set256d b_a (x * 32)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        a <- (BArray160.set256 a x (VPSHUFB_256 (BArray160.get256 a x) r56));
      } else {
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++ [(Assert, (is_init b_a (x * 32) 32))]);
        t <- (VPSLL_4u64 (BArray160.get256 a x) (W128.of_int r));
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++ [(Assert, (is_init b_a (x * 32) 32))]);
        b_a <-
        (BArray160.set256d b_a (x * 32)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        a <-
        (BArray160.set256 a x
        (VPSRL_4u64 (BArray160.get256 a x) (W128.of_int (64 - r))));
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++
        [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
        trace_keccakf1600_4x_rol <-
        (trace_keccakf1600_4x_rol ++ [(Assert, (is_init b_a (x * 32) 32))]);
        b_a <-
        (BArray160.set256d b_a (x * 32)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        a <- (BArray160.set256 a x ((BArray160.get256 a x) `|` t));
      }
    }
    return (a, b_a, trace_keccakf1600_4x_rol);
  }
  proc keccakf1600_4x_theta_rol (c:BArray160.t, b_c:BArray160.t, r8:W256.t,
                                 r56:W256.t) : BArray160.t * BArray160.t *
                                               trace = {
    var d:BArray160.t;
    var x:int;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray160.t;
    var result:BArray160.t;
    var b_d:BArray160.t;
    var b_result:BArray160.t;
    var b_param:BArray160.t;
    var trace_keccakf1600_4x_theta_rol:trace;
    b_d <- witness;
    b_param <- witness;
    b_result <- witness;
    d <- witness;
    param_3 <- witness;
    result <- witness;
    trace_keccakf1600_4x_theta_rol <- [];
    trace_keccakf1600_4x_theta_rol <-
    (trace_keccakf1600_4x_theta_rol ++ [(Assert, (is_init b_c 0 160))]);
    b_d <- (BArray160.init_arr (W8.of_int 0) 160);
    x <- 0;
    while ((x < 5)) {
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert,
       ((0 <= (((x + 1) %% 5) * 32)) /\
       (((((x + 1) %% 5) * 32) + 32) <= 160)))]);
      b_d <-
      (BArray160.set256d b_d (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      d <- (BArray160.set256 d x (BArray160.get256 c ((x + 1) %% 5)));
      b_param <- b_d;
      param_3 <- d;
      param_2 <- x;
      param_1 <- 1;
      param_0 <- r8;
      param <- r56;
      (result, b_result, tmp__trace) <@ keccakf1600_4x_rol (param_3, 
      b_param, param_2, param_1, param_0, param);
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++ tmp__trace);
      b_d <- b_result;
      d <- result;
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert, (is_init b_d (x * 32) 32))]);
      trace_keccakf1600_4x_theta_rol <-
      (trace_keccakf1600_4x_theta_rol ++
      [(Assert,
       ((0 <= ((((x - 1) + 5) %% 5) * 32)) /\
       ((((((x - 1) + 5) %% 5) * 32) + 32) <= 160)))]);
      b_d <-
      (BArray160.set256d b_d (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      d <-
      (BArray160.set256 d x
      ((BArray160.get256 d x) `^` (BArray160.get256 c (((x - 1) + 5) %% 5))));
      x <- (x + 1);
    }
    return (d, b_d, trace_keccakf1600_4x_theta_rol);
  }
  proc keccakf1600_4x_rol_sum (a:BArray800.t, b_a:BArray800.t, d:BArray160.t,
                               b_d:BArray160.t, y:int, r8:W256.t, r56:W256.t) : 
  BArray160.t * BArray160.t * trace = {
    var b:BArray160.t;
    var x:int;
    var x_:int;
    var y_:int;
    var r:int;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray160.t;
    var result:BArray160.t;
    var param_4:int;
    var param_5:int;
    var result_0:int;
    var b_b:BArray160.t;
    var b_result:BArray160.t;
    var b_param:BArray160.t;
    var trace_keccakf1600_4x_rol_sum:trace;
    b <- witness;
    b_b <- witness;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result <- witness;
    trace_keccakf1600_4x_rol_sum <- [];
    trace_keccakf1600_4x_rol_sum <-
    (trace_keccakf1600_4x_rol_sum ++
    [(Assert,
     ((((is_init b_a 0 800) /\ (is_init b_d 0 160)) /\ (0 <= y)) /\ (y < 5)))]);
    b_b <- (BArray160.init_arr (W8.of_int 0) 160);
    x <- 0;
    while ((x < 5)) {
      x_ <- ((x + (3 * y)) %% 5);
      y_ <- x;
      param_5 <- x_;
      param_4 <- y_;
      (result_0, tmp__trace) <@ keccakf1600_rhotates (param_5, param_4);
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++ tmp__trace);
      r <- result_0;
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++
      [(Assert,
       ((0 <= ((x_ + (y_ * 5)) * 32)) /\
       ((((x_ + (y_ * 5)) * 32) + 32) <= 800)))]);
      b_b <-
      (BArray160.set256d b_b (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      b <- (BArray160.set256 b x (BArray800.get256 a (x_ + (y_ * 5))));
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++ [(Assert, (is_init b_b (x * 32) 32))]);
      trace_keccakf1600_4x_rol_sum <-
      (trace_keccakf1600_4x_rol_sum ++
      [(Assert, ((0 <= (x_ * 32)) /\ (((x_ * 32) + 32) <= 160)))]);
      b_b <-
      (BArray160.set256d b_b (x * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      b <-
      (BArray160.set256 b x
      ((BArray160.get256 b x) `^` (BArray160.get256 d x_)));
      if ((r <> 0)) {
        b_param <- b_b;
        param_3 <- b;
        param_2 <- x;
        param_1 <- r;
        param_0 <- r8;
        param <- r56;
        (result, b_result, tmp__trace) <@ keccakf1600_4x_rol (param_3,
        b_param, param_2, param_1, param_0, param);
        trace_keccakf1600_4x_rol_sum <-
        (trace_keccakf1600_4x_rol_sum ++ tmp__trace);
        b_b <- b_result;
        b <- result;
      } else {
        
      }
      x <- (x + 1);
    }
    return (b, b_b, trace_keccakf1600_4x_rol_sum);
  }
  proc keccakf1600_4x_set_row (e:BArray800.t, b_e:BArray800.t, b:BArray160.t,
                               b_b:BArray160.t, y:int, rc:W256.t) : BArray800.t *
                                                                    BArray800.t *
                                                                    trace = {
    var x:int;
    var x1:int;
    var x2:int;
    var t:W256.t;
    var trace_keccakf1600_4x_set_row:trace;
    trace_keccakf1600_4x_set_row <- [];
    trace_keccakf1600_4x_set_row <-
    (trace_keccakf1600_4x_set_row ++
    [(Assert, (((is_init b_b 0 160) /\ (0 <= y)) /\ (y < 5)))]);
    x <- 0;
    while ((x < 5)) {
      x1 <- ((x + 1) %% 5);
      x2 <- ((x + 2) %% 5);
      trace_keccakf1600_4x_set_row <-
      (trace_keccakf1600_4x_set_row ++
      [(Assert, ((0 <= (x1 * 32)) /\ (((x1 * 32) + 32) <= 160)))]);
      trace_keccakf1600_4x_set_row <-
      (trace_keccakf1600_4x_set_row ++
      [(Assert, ((0 <= (x2 * 32)) /\ (((x2 * 32) + 32) <= 160)))]);
      t <- (VPANDN_256 (BArray160.get256 b x1) (BArray160.get256 b x2));
      trace_keccakf1600_4x_set_row <-
      (trace_keccakf1600_4x_set_row ++
      [(Assert, ((0 <= (x * 32)) /\ (((x * 32) + 32) <= 160)))]);
      t <- (t `^` (BArray160.get256 b x));
      if (((x = 0) /\ (y = 0))) {
        t <- (t `^` rc);
      } else {
        
      }
      trace_keccakf1600_4x_set_row <-
      (trace_keccakf1600_4x_set_row ++
      [(Assert,
       ((0 <= ((x + (y * 5)) * 32)) /\ ((((x + (y * 5)) * 32) + 32) <= 800)))]);
      b_e <-
      (BArray800.set256d b_e ((x + (y * 5)) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      e <- (BArray800.set256 e (x + (y * 5)) t);
      x <- (x + 1);
    }
    return (e, b_e, trace_keccakf1600_4x_set_row);
  }
  proc _keccakf1600_4x_round (e:BArray800.t, b_e:BArray800.t, a:BArray800.t,
                              b_a:BArray800.t, rc:W256.t, r8:W256.t,
                              r56:W256.t) : BArray800.t * BArray800.t * trace = {
    var c:BArray160.t;
    var d:BArray160.t;
    var y:int;
    var b:BArray160.t;
    var param:W256.t;
    var param_0:int;
    var param_1:BArray160.t;
    var param_2:BArray800.t;
    var result:BArray800.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:int;
    var param_6:BArray160.t;
    var param_7:BArray800.t;
    var result_0:BArray160.t;
    var param_8:W256.t;
    var param_9:W256.t;
    var param_10:BArray160.t;
    var result_1:BArray160.t;
    var param_11:BArray800.t;
    var result_2:BArray160.t;
    var b_result:BArray800.t;
    var b_param:BArray800.t;
    var b_result_0:BArray160.t;
    var b_result_1:BArray160.t;
    var b_result_2:BArray160.t;
    var trace__keccakf1600_4x_round:trace;
    b <- witness;
    b_param <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    c <- witness;
    d <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    trace__keccakf1600_4x_round <- [];
    trace__keccakf1600_4x_round <-
    (trace__keccakf1600_4x_round ++ [(Assert, (is_init b_a 0 800))]);
    param_11 <- a;
    (result_2, b_result_2, tmp__trace) <@ keccakf1600_4x_theta_sum (param_11,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__keccakf1600_4x_round <-
    (trace__keccakf1600_4x_round ++ tmp__trace);
    trace__keccakf1600_4x_round <-
    (trace__keccakf1600_4x_round ++ [(Assert, (is_init b_result_2 0 160))]);
    c <- result_2;
    param_10 <- c;
    param_9 <- r8;
    param_8 <- r56;
    (result_1, b_result_1, tmp__trace) <@ keccakf1600_4x_theta_rol (param_10,
    (BArray160.init_arr (W8.of_int 255) 160), param_9, param_8);
    trace__keccakf1600_4x_round <-
    (trace__keccakf1600_4x_round ++ tmp__trace);
    trace__keccakf1600_4x_round <-
    (trace__keccakf1600_4x_round ++ [(Assert, (is_init b_result_1 0 160))]);
    d <- result_1;
    y <- 0;
    while ((y < 5)) {
      param_7 <- a;
      param_6 <- d;
      param_5 <- y;
      param_4 <- r8;
      param_3 <- r56;
      (result_0, b_result_0, tmp__trace) <@ keccakf1600_4x_rol_sum (param_7,
      (BArray800.init_arr (W8.of_int 255) 800), param_6,
      (BArray160.init_arr (W8.of_int 255) 160), param_5, param_4, param_3);
      trace__keccakf1600_4x_round <-
      (trace__keccakf1600_4x_round ++ tmp__trace);
      trace__keccakf1600_4x_round <-
      (trace__keccakf1600_4x_round ++ [(Assert, (is_init b_result_0 0 160))]);
      b <- result_0;
      b_param <- b_e;
      param_2 <- e;
      param_1 <- b;
      param_0 <- y;
      param <- rc;
      (result, b_result, tmp__trace) <@ keccakf1600_4x_set_row (param_2,
      b_param, param_1, (BArray160.init_arr (W8.of_int 255) 160), param_0,
      param);
      trace__keccakf1600_4x_round <-
      (trace__keccakf1600_4x_round ++ tmp__trace);
      b_e <- b_result;
      e <- result;
      y <- (y + 1);
    }
    return (e, b_e, trace__keccakf1600_4x_round);
  }
  proc __keccakf1600_avx2x4 (a:BArray800.t, b_a:BArray800.t) : BArray800.t *
                                                               BArray800.t *
                                                               trace = {
    var rC:BArray192.t;
    var s_e:BArray800.t;
    var e:BArray800.t;
    var r8:W256.t;
    var r56:W256.t;
    var rc:W256.t;
    var c:int;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:BArray800.t;
    var param_3:BArray800.t;
    var result:BArray800.t;
    var param_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var param_7:BArray800.t;
    var param_8:BArray800.t;
    var result_0:BArray800.t;
    var b_e:BArray800.t;
    var b_result:BArray800.t;
    var b_param:BArray800.t;
    var b_param_0:BArray800.t;
    var b_result_0:BArray800.t;
    var b_param_1:BArray800.t;
    var b_s_e:BArray800.t;
    var trace___keccakf1600_avx2x4:trace;
    rC <- witness;
    b_e <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_s_e <- witness;
    e <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    result <- witness;
    result_0 <- witness;
    s_e <- witness;
    trace___keccakf1600_avx2x4 <- [];
    trace___keccakf1600_avx2x4 <-
    (trace___keccakf1600_avx2x4 ++ [(Assert, (is_init b_a 0 800))]);
    b_s_e <- (BArray800.init_arr (W8.of_int 0) 800);
    rC <- kECCAK1600_RC;
    b_e <- b_s_e;
    e <- s_e;
    r8 <- rOL8;
    r56 <- rOL56;
    c <- 0;
    while ((c < 24)) {
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++
      [(Assert, ((0 <= (c * 8)) /\ (((c * 8) + 8) <= 192)))]);
      rc <- (VPBROADCAST_4u64 (BArray192.get64 rC c));
      b_param_1 <- b_e;
      param_8 <- e;
      param_7 <- a;
      param_6 <- rc;
      param_5 <- r8;
      param_4 <- r56;
      (result_0, b_result_0, tmp__trace) <@ _keccakf1600_4x_round (param_8,
      b_param_1, param_7, (BArray800.init_arr (W8.of_int 255) 800), param_6,
      param_5, param_4);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++ tmp__trace);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++ [(Assert, (is_init b_result_0 0 800))]);
      e <- result_0;
      (b_a, b_e) <-
      (swap_ (BArray800.init_arr (W8.of_int 255) 800)
      (BArray800.init_arr (W8.of_int 255) 800));
      (a, e) <- (swap_ e a);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++
      [(Assert, ((0 <= ((c + 1) * 8)) /\ ((((c + 1) * 8) + 8) <= 192)))]);
      rc <- (VPBROADCAST_4u64 (BArray192.get64 rC (c + 1)));
      b_param_0 <- b_a;
      param_3 <- a;
      b_param <- b_e;
      param_2 <- e;
      param_1 <- rc;
      param_0 <- r8;
      param <- r56;
      (result, b_result, tmp__trace) <@ _keccakf1600_4x_round (param_3,
      b_param_0, param_2, b_param, param_1, param_0, param);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++ tmp__trace);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++ [(Assert, (is_init b_result 0 800))]);
      a <- result;
      (b_a, b_e) <- (swap_ b_e (BArray800.init_arr (W8.of_int 255) 800));
      (a, e) <- (swap_ e a);
      trace___keccakf1600_avx2x4 <-
      (trace___keccakf1600_avx2x4 ++
      [(Assert, ((0 <= (c + 2)) /\ ((c + 2) <= 18446744073709551615)))]);
      c <- (c + 2);
    }
    b_a <- (BArray800.init_arr (W8.of_int 255) 800);
    return (a, b_a, trace___keccakf1600_avx2x4);
  }
  proc _keccakf1600_avx2x4 (a:BArray800.t, b_a:BArray800.t) : BArray800.t *
                                                              BArray800.t *
                                                              trace = {
    var param:BArray800.t;
    var result:BArray800.t;
    var b_result:BArray800.t;
    var trace__keccakf1600_avx2x4:trace;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace__keccakf1600_avx2x4 <- [];
    trace__keccakf1600_avx2x4 <-
    (trace__keccakf1600_avx2x4 ++ [(Assert, (is_init b_a 0 800))]);
    param <- a;
    (result, b_result, tmp__trace) <@ __keccakf1600_avx2x4 (param,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__keccakf1600_avx2x4 <- (trace__keccakf1600_avx2x4 ++ tmp__trace);
    trace__keccakf1600_avx2x4 <-
    (trace__keccakf1600_avx2x4 ++ [(Assert, (is_init b_result 0 800))]);
    a <- result;
    b_a <- (BArray800.init_arr (W8.of_int 255) 800);
    return (a, b_a, trace__keccakf1600_avx2x4);
  }
  proc __state_init_avx2x4 (st:BArray800.t, b_st:BArray800.t) : BArray800.t *
                                                                BArray800.t *
                                                                trace = {
    var z256:W256.t;
    var i:int;
    var trace___state_init_avx2x4:trace;
    trace___state_init_avx2x4 <- [];
    z256 <- (set0_256);
    i <- 0;
    while ((i < 800)) {
      trace___state_init_avx2x4 <-
      (trace___state_init_avx2x4 ++
      [(Assert, ((0 <= i) /\ ((i + 32) <= 800)))]);
      b_st <-
      (BArray800.set256d b_st i
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      st <- (BArray800.set256d st i z256);
      trace___state_init_avx2x4 <-
      (trace___state_init_avx2x4 ++
      [(Assert, ((0 <= (i + 32)) /\ ((i + 32) <= 18446744073709551615)))]);
      i <- (i + 32);
    }
    return (st, b_st, trace___state_init_avx2x4);
  }
  proc __addratebit_avx2x4 (st:BArray800.t, b_st:BArray800.t, rATE8:int) : 
  BArray800.t * BArray800.t * trace = {
    var t64:W64.t;
    var t128:W128.t;
    var t256:W256.t;
    var trace___addratebit_avx2x4:trace;
    trace___addratebit_avx2x4 <- [];
    trace___addratebit_avx2x4 <-
    (trace___addratebit_avx2x4 ++
    [(Assert, (((is_init b_st 0 800) /\ (0 < rATE8)) /\ (rATE8 < 200)))]);
    t64 <- (W64.of_int 1);
    t64 <- (t64 `<<` (W8.of_int (((8 * rATE8) - 1) %% 64)));
    t128 <- (zeroextu128 t64);
    t256 <- (VPBROADCAST_4u64 (truncateu64 t128));
    trace___addratebit_avx2x4 <-
    (trace___addratebit_avx2x4 ++
    [(Assert,
     ((0 <= (((rATE8 - 1) %/ 8) * 32)) /\
     (((((rATE8 - 1) %/ 8) * 32) + 32) <= 800)))]);
    t256 <- (t256 `^` (BArray800.get256 st ((rATE8 - 1) %/ 8)));
    trace___addratebit_avx2x4 <-
    (trace___addratebit_avx2x4 ++
    [(Assert,
     ((0 <= (((rATE8 - 1) %/ 8) * 32)) /\
     (((((rATE8 - 1) %/ 8) * 32) + 32) <= 800)))]);
    st <- (BArray800.set256 st ((rATE8 - 1) %/ 8) t256);
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, trace___addratebit_avx2x4);
  }
  proc __4u64x4_u256x4 (y0:W256.t, y1:W256.t, y2:W256.t, y3:W256.t) : 
  W256.t * W256.t * W256.t * W256.t * trace = {
    var x0:W256.t;
    var x1:W256.t;
    var x2:W256.t;
    var x3:W256.t;
    var trace___4u64x4_u256x4:trace;
    trace___4u64x4_u256x4 <- [];
    x0 <- (VPERM2I128 y0 y2 (W8.of_int 32));
    x1 <- (VPERM2I128 y1 y3 (W8.of_int 32));
    x2 <- (VPERM2I128 y0 y2 (W8.of_int 49));
    x3 <- (VPERM2I128 y1 y3 (W8.of_int 49));
    y0 <- (VPUNPCKL_4u64 x0 x1);
    y1 <- (VPUNPCKH_4u64 x0 x1);
    y2 <- (VPUNPCKL_4u64 x2 x3);
    y3 <- (VPUNPCKH_4u64 x2 x3);
    return (y0, y1, y2, y3, trace___4u64x4_u256x4);
  }
  proc a1____aread_subu64 (buf:BArray1.t, b_buf:BArray1.t, offset:int,
                           dELTA:int, lEN:int, tRAIL:int) : int * int * int *
                                                            W64.t * trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a1____aread_subu64:trace;
    trace_a1____aread_subu64 <- [];
    trace_a1____aread_subu64 <-
    (trace_a1____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 1)) : true))))))))))]);
    trace_a1____aread_subu64 <-
    (trace_a1____aread_subu64 ++ [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1____aread_subu64 <-
    (trace_a1____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a1____aread_subu64 <-
        (trace_a1____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1____aread_subu64 <-
        (trace_a1____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1____aread_subu64 <-
        (trace_a1____aread_subu64 ++
        [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
        trace_a1____aread_subu64 <-
        (trace_a1____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray1.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 1)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray1.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 1)))]);
          trace_a1____aread_subu64 <-
          (trace_a1____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray1.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a1____aread_subu64 <-
            (trace_a1____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a1____aread_subu64 <-
            (trace_a1____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a1____aread_subu64 <-
            (trace_a1____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 1)))]);
            trace_a1____aread_subu64 <-
            (trace_a1____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray1.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1____aread_subu64);
  }
  proc a1____aread_subu128 (buf:BArray1.t, b_buf:BArray1.t, offset:int,
                            dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                             int * W128.t *
                                                             trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var trace_a1____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1____aread_subu128 <- [];
    trace_a1____aread_subu128 <-
    (trace_a1____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 1)) : true))))))))))]);
    trace_a1____aread_subu128 <-
    (trace_a1____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1____aread_subu128 <-
    (trace_a1____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a1____aread_subu128 <-
        (trace_a1____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1____aread_subu128 <-
        (trace_a1____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1____aread_subu128 <-
        (trace_a1____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1)))]);
        trace_a1____aread_subu128 <-
        (trace_a1____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray1.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray1.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++ tmp__trace);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++ tmp__trace);
          trace_a1____aread_subu128 <-
          (trace_a1____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1____aread_subu128);
  }
  proc a1____aread_subu256 (buf:BArray1.t, b_buf:BArray1.t, offset:int,
                            dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                             int * W256.t *
                                                             trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var trace_a1____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1____aread_subu256 <- [];
    trace_a1____aread_subu256 <-
    (trace_a1____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 1)) : true))))))))))]);
    trace_a1____aread_subu256 <-
    (trace_a1____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1____aread_subu256 <-
    (trace_a1____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a1____aread_subu256 <-
        (trace_a1____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1____aread_subu256 <-
        (trace_a1____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1____aread_subu256 <-
        (trace_a1____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 1)))]);
        trace_a1____aread_subu256 <-
        (trace_a1____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray1.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1)))]);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray1.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++ tmp__trace);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++ tmp__trace);
          trace_a1____aread_subu256 <-
          (trace_a1____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1____aread_subu256);
  }
  proc a1____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                  buf:BArray1.t, b_buf:BArray1.t, offset:int,
                                  lEN:int, tRAILB:int) : BArray224.t *
                                                         BArray224.t * int *
                                                         trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray1.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray1.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray1.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray1.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray1.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray1.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray1.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray1.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray1.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var b_param_1:BArray1.t;
    var b_param_2:BArray1.t;
    var b_param_3:BArray1.t;
    var b_param_4:BArray1.t;
    var b_param_5:BArray1.t;
    var b_param_6:BArray1.t;
    var b_param_7:BArray1.t;
    var b_param_8:BArray1.t;
    var trace_a1____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a1____addstate_array_avx2 <- [];
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 1)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a1____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++ tmp__trace);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a1____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++ tmp__trace);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a1____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a1____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a1____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a1____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a1____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a1____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a1____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a1____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++ tmp__trace);
      trace_a1____addstate_array_avx2 <-
      (trace_a1____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a1____addstate_array_avx2 <-
    (trace_a1____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a1____addstate_array_avx2);
  }
  proc a1____pstate_array_avx2 (pst:BArray200.t, b_pst:BArray200.t, aT:int,
                                buf:BArray1.t, b_buf:BArray1.t, offset:int,
                                lEN:int, tRAILB:int) : BArray200.t *
                                                       BArray200.t * int *
                                                       int * trace = {
    var aLL:int;
    var dELTA:int;
    var lO:int;
    var t64:W64.t;
    var t256:W256.t;
    var t128:W128.t;
    var at:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray1.t;
    var result_7:W64.t;
    var result_8:int;
    var result_9:int;
    var result_10:int;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var b_param_1:BArray1.t;
    var trace_a1____pstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    trace_a1____pstate_array_avx2 <- [];
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < 200)) /\
        (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
       ((offset + lEN) <= 1)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_pst 0 200)))))]);
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    aLL <- (aT + lEN);
    lO <- (aT %% 8);
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert, ((0 <= (aT %/ 8)) /\ ((aT %/ 8) <= 18446744073709551615)))]);
    at <- (aT %/ 8);
    if ((0 < lO)) {
      if (((lO + lEN) < 8)) {
        if ((tRAILB <> 0)) {
          aLL <- (aLL + 1);
        } else {
          
        }
        b_param_0 <- b_buf;
        param_8 <- buf;
        param_7 <- offset;
        param_6 <- dELTA;
        param_5 <- lEN;
        param_4 <- tRAILB;
        (result_6, result_5, result_4, result_3, tmp__trace) <@ a1____aread_subu64 (
        param_8, b_param_0, param_7, param_6, param_5, param_4);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++ tmp__trace);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert,
         (((result_6 =
           (param_6 +
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8)))) /\
          (result_5 =
          (param_5 -
          ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                     param_5 : 8))))) /\
         (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
        dELTA <- result_6;
        tRAILB <- result_4;
        t64 <- result_3;
        t64 <- (t64 `<<` (W8.of_int (8 * lO)));
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        pst <- (BArray200.set64 pst at ((BArray200.get64 pst at) `^` t64));
        aT <- 0;
        lEN <- 0;
      } else {
        if ((8 <= lEN)) {
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          t64 <- (BArray1.get64d buf (offset + dELTA));
          dELTA <- (dELTA + (8 - lO));
        } else {
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- (8 - lO);
          param_9 <- 0;
          (result_10, result_9, result_8, result_7, tmp__trace) <@ a1____aread_subu64 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++ tmp__trace);
          trace_a1____pstate_array_avx2 <-
          (trace_a1____pstate_array_avx2 ++
          [(Assert,
           (((result_10 =
             (param_11 +
             ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                          param_10 : 8)))) /\
            (result_9 =
            (param_10 -
            ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                         param_10 : 8))))) /\
           (result_8 = ((8 <= param_10) ? param_9 : 0))))]);
          dELTA <- result_10;
          t64 <- result_7;
        }
        lEN <- (lEN - (8 - lO));
        aT <- (aT + (8 - lO));
        t64 <- (t64 `<<` (W8.of_int (8 * lO)));
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        pst <- (BArray200.set64 pst at ((BArray200.get64 pst at) `^` t64));
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        at <- (at + 1);
      }
    } else {
      
    }
    if ((32 <= lEN)) {
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      dELTA <- 0;
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert,
       ((0 <= ((aT %/ 8) + (4 * (lEN %/ 32)))) /\
       (((aT %/ 8) + (4 * (lEN %/ 32))) <= 18446744073709551615)))]);
      while ((at < ((aT %/ 8) + (4 * (lEN %/ 32))))) {
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 1)))]);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, (is_init b_buf offset 32))]);
        t256 <- (BArray1.get256d buf offset);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert,
         ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
        offset <- (offset + 32);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 200)))]);
        pst <- (BArray200.set256d pst (8 * at) t256);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
        trace_a1____pstate_array_avx2 <-
        (trace_a1____pstate_array_avx2 ++
        [(Assert,
         ((0 <= ((aT %/ 8) + (4 * (lEN %/ 32)))) /\
         (((aT %/ 8) + (4 * (lEN %/ 32))) <= 18446744073709551615)))]);
      }
      lEN <- (lEN %% 32);
    } else {
      
    }
    if ((16 <= lEN)) {
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, (is_init b_buf (offset + dELTA) 16))]);
      t128 <- (BArray1.get128d buf (offset + dELTA));
      dELTA <- (dELTA + 16);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 16) <= 200)))]);
      pst <- (BArray200.set128d pst (8 * at) t128);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      at <- (at + 2);
      lEN <- (lEN - 16);
    } else {
      
    }
    if ((8 <= lEN)) {
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, (is_init b_buf (offset + dELTA) 8))]);
      t64 <- (BArray1.get64d buf (offset + dELTA));
      dELTA <- (dELTA + 8);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 8) <= 200)))]);
      pst <- (BArray200.set64d pst (8 * at) t64);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      lEN <- (lEN - 8);
    } else {
      
    }
    lO <- ((aT + lEN) %% 8);
    if (((0 < lO) \/ (tRAILB <> 0))) {
      if ((tRAILB <> 0)) {
        aLL <- (aLL + 1);
      } else {
        
      }
      b_param <- b_buf;
      param_3 <- buf;
      param_2 <- offset;
      param_1 <- dELTA;
      param_0 <- lO;
      param <- tRAILB;
      (result_2, result_1, result_0, result, tmp__trace) <@ a1____aread_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++ tmp__trace);
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert,
       (((result_2 =
         (param_1 +
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8)))) /\
        (result_1 =
        (param_0 -
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))) /\
       (result_0 = ((8 <= param_0) ? param : 0))))]);
      dELTA <- result_2;
      t64 <- result;
      trace_a1____pstate_array_avx2 <-
      (trace_a1____pstate_array_avx2 ++
      [(Assert, ((0 <= ((aLL %/ 8) * 8)) /\ ((((aLL %/ 8) * 8) + 8) <= 200)))]);
      pst <- (BArray200.set64 pst (aLL %/ 8) t64);
    } else {
      
    }
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a1____pstate_array_avx2 <-
    (trace_a1____pstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_pst <- (BArray200.init_arr (W8.of_int 255) 200);
    return (pst, b_pst, aLL, offset, trace_a1____pstate_array_avx2);
  }
  proc a1____pabsorb_array_avx2 (pst:BArray200.t, b_pst:BArray200.t, aT:int,
                                 st:BArray224.t, b_st:BArray224.t,
                                 buf:BArray1.t, b_buf:BArray1.t, offset:int,
                                 lEN:int, rATE8:int, tRAILB:int) : BArray200.t *
                                                                   BArray200.t *
                                                                   int *
                                                                   BArray224.t *
                                                                   BArray224.t *
                                                                   int *
                                                                   trace = {
    var aLL:int;
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:BArray200.t;
    var param_2:BArray224.t;
    var result_0:BArray224.t;
    var param_3:BArray200.t;
    var param_4:BArray224.t;
    var result_1:BArray224.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var param_9:int;
    var param_10:BArray200.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray200.t;
    var param_11:int;
    var param_12:BArray224.t;
    var result_5:BArray224.t;
    var param_13:int;
    var param_14:int;
    var param_15:int;
    var param_16:BArray1.t;
    var param_17:BArray224.t;
    var result_6:int;
    var result_7:BArray224.t;
    var param_18:int;
    var param_19:int;
    var param_20:int;
    var param_21:BArray1.t;
    var param_22:int;
    var param_23:BArray200.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray200.t;
    var param_24:BArray224.t;
    var result_11:BArray224.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray1.t;
    var param_29:BArray224.t;
    var result_12:int;
    var result_13:BArray224.t;
    var param_30:BArray224.t;
    var result_14:BArray224.t;
    var param_31:BArray200.t;
    var param_32:BArray224.t;
    var result_15:BArray224.t;
    var param_33:int;
    var param_34:int;
    var param_35:int;
    var param_36:BArray1.t;
    var param_37:int;
    var param_38:BArray200.t;
    var result_16:int;
    var result_17:int;
    var result_18:BArray200.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray200.t;
    var b_param:BArray1.t;
    var b_result_3:BArray224.t;
    var b_result_4:BArray224.t;
    var b_param_0:BArray1.t;
    var b_result_5:BArray200.t;
    var b_param_1:BArray1.t;
    var b_result_6:BArray224.t;
    var b_result_7:BArray224.t;
    var b_param_2:BArray1.t;
    var b_result_8:BArray224.t;
    var b_result_9:BArray224.t;
    var b_result_10:BArray200.t;
    var b_param_3:BArray1.t;
    var trace_a1____pabsorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_result_10 <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_8 <- witness;
    param_10 <- witness;
    param_12 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_21 <- witness;
    param_23 <- witness;
    param_24 <- witness;
    param_28 <- witness;
    param_29 <- witness;
    param_30 <- witness;
    param_31 <- witness;
    param_32 <- witness;
    param_36 <- witness;
    param_38 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_13 <- witness;
    result_14 <- witness;
    result_15 <- witness;
    result_18 <- witness;
    trace_a1____pabsorb_array_avx2 <- [];
    trace_a1____pabsorb_array_avx2 <-
    (trace_a1____pabsorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < rATE8)) /\
           ((offset + lEN) <= 1)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (0 < rATE8)) /\
        (rATE8 < 200)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_pst 0 200)) /\
     (is_init b_st 0 224)))))]);
    trace_a1____pabsorb_array_avx2 <-
    (trace_a1____pabsorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1____pabsorb_array_avx2 <-
    (trace_a1____pabsorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    if (((aT + lEN) < rATE8)) {
      param_10 <- pst;
      param_9 <- aT;
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- lEN;
      param_5 <- tRAILB;
      (result_4, b_result_2, result_3, result_2, tmp__trace) <@ a1____pstate_array_avx2 (
      param_10, (BArray200.init_arr (W8.of_int 255) 200), param_9, param_8,
      b_param, param_7, param_6, param_5);
      trace_a1____pabsorb_array_avx2 <-
      (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
      trace_a1____pabsorb_array_avx2 <-
      (trace_a1____pabsorb_array_avx2 ++
      [(Assert,
       (((0 <= param_6) /\ (param_6 <= 18446744073709551615)) /\
       (((0 <= (param_7 + param_6)) /\
        ((param_7 + param_6) <= 18446744073709551615)) /\
       (((is_init b_result_2 0 200) /\
        (result_3 = ((param_9 + param_6) + ((param_5 <> 0) ? 1 : 0)))) /\
       (result_2 = (param_7 + param_6))))))]);
      trace_a1____pabsorb_array_avx2 <-
      (trace_a1____pabsorb_array_avx2 ++
      [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
      pst <- result_4;
      aT <- result_3;
      offset <- result_2;
      if ((tRAILB <> 0)) {
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert,
         ((0 <= ((aT %/ 8) + 1)) /\
         (((aT %/ 8) + 1) <= 18446744073709551615)))]);
        i <- ((aT %/ 8) + 1);
        if ((aT <= 40)) {
          while ((i < 5)) {
            trace_a1____pabsorb_array_avx2 <-
            (trace_a1____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 200)))]);
            pst <- (BArray200.set64 pst i (W64.of_int 0));
            trace_a1____pabsorb_array_avx2 <-
            (trace_a1____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
            i <- (i + 1);
          }
          param_2 <- st;
          param_1 <- pst;
          (result_0, b_result_0, tmp__trace) <@ __addpst01_avx2 (param_2,
          (BArray224.init_arr (W8.of_int 255) 224), param_1,
          (BArray200.init_arr (W8.of_int 255) 200));
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result_0 0 224))]);
          st <- result_0;
          param_0 <- st;
          param <- rATE8;
          (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
          (BArray224.init_arr (W8.of_int 255) 224), param);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result 0 224))]);
          st <- result;
        } else {
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert,
           ((0 <= (rATE8 %/ 8)) /\ ((rATE8 %/ 8) <= 18446744073709551615)))]);
          while ((i < (rATE8 %/ 8))) {
            trace_a1____pabsorb_array_avx2 <-
            (trace_a1____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 200)))]);
            pst <- (BArray200.set64 pst i (W64.of_int 0));
            trace_a1____pabsorb_array_avx2 <-
            (trace_a1____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
            i <- (i + 1);
            trace_a1____pabsorb_array_avx2 <-
            (trace_a1____pabsorb_array_avx2 ++
            [(Assert,
             ((0 <= (rATE8 %/ 8)) /\ ((rATE8 %/ 8) <= 18446744073709551615)))]);
          }
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, ((0 <= (rATE8 - 1)) /\ (((rATE8 - 1) + 1) <= 200)))]);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, ((0 <= (rATE8 - 1)) /\ (((rATE8 - 1) + 1) <= 200)))]);
          pst <-
          (BArray200.set8 pst (rATE8 - 1)
          ((BArray200.get8 pst (rATE8 - 1)) `^` (W8.of_int 128)));
          param_4 <- st;
          param_3 <- pst;
          (result_1, b_result_1, tmp__trace) <@ _addpstate_avx2 (param_4,
          (BArray224.init_arr (W8.of_int 255) 224), param_3,
          (BArray200.init_arr (W8.of_int 255) 200));
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result_1 0 224))]);
          st <- result_1;
        }
      } else {
        
      }
    } else {
      if ((aT <> 0)) {
        param_38 <- pst;
        param_37 <- aT;
        b_param_3 <- b_buf;
        param_36 <- buf;
        param_35 <- offset;
        param_34 <- (rATE8 - aT);
        param_33 <- 0;
        (result_18, b_result_10, result_17, result_16, tmp__trace) <@ 
        a1____pstate_array_avx2 (param_38,
        (BArray200.init_arr (W8.of_int 255) 200), param_37, param_36,
        b_param_3, param_35, param_34, param_33);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_34) /\ (param_34 <= 18446744073709551615)) /\
         (((0 <= (param_35 + param_34)) /\
          ((param_35 + param_34) <= 18446744073709551615)) /\
         (((is_init b_result_10 0 200) /\
          (result_17 = ((param_37 + param_34) + ((param_33 <> 0) ? 1 : 0)))) /\
         (result_16 = (param_35 + param_34))))))]);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_16) /\ (result_16 <= 18446744073709551615)))]);
        pst <- result_18;
        offset <- result_16;
        lEN <- (lEN - (rATE8 - aT));
        param_32 <- st;
        param_31 <- pst;
        (result_15, b_result_9, tmp__trace) <@ _addpstate_avx2 (param_32,
        (BArray224.init_arr (W8.of_int 255) 224), param_31,
        (BArray200.init_arr (W8.of_int 255) 200));
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_9 0 224))]);
        st <- result_15;
        param_30 <- st;
        (result_14, b_result_8, tmp__trace) <@ _keccakf1600_avx2 (param_30,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_8 0 224))]);
        st <- result_14;
        aT <- 0;
      } else {
        
      }
      iTERS <- (lEN %/ rATE8);
      i <- 0;
      trace_a1____pabsorb_array_avx2 <-
      (trace_a1____pabsorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_29 <- st;
        b_param_2 <- b_buf;
        param_28 <- buf;
        param_27 <- offset;
        param_26 <- rATE8;
        param_25 <- 0;
        (result_13, b_result_7, result_12, tmp__trace) <@ a1____addstate_array_avx2 (
        param_29, (BArray224.init_arr (W8.of_int 255) 224), param_28,
        b_param_2, param_27, param_26, param_25);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_26) /\ (param_26 <= 18446744073709551615)) /\
         (((0 <= (param_27 + param_26)) /\
          ((param_27 + param_26) <= 18446744073709551615)) /\
         ((is_init b_result_7 0 224) /\ (result_12 = (param_27 + param_26))))))]);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_12) /\ (result_12 <= 18446744073709551615)))]);
        st <- result_13;
        offset <- result_12;
        param_24 <- st;
        (result_11, b_result_6, tmp__trace) <@ _keccakf1600_avx2 (param_24,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_6 0 224))]);
        st <- result_11;
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
      lEN <- (aLL %% rATE8);
      if ((tRAILB <> 0)) {
        param_17 <- st;
        b_param_0 <- b_buf;
        param_16 <- buf;
        param_15 <- offset;
        param_14 <- lEN;
        param_13 <- tRAILB;
        (result_7, b_result_4, result_6, tmp__trace) <@ a1____addstate_array_avx2 (
        param_17, (BArray224.init_arr (W8.of_int 255) 224), param_16,
        b_param_0, param_15, param_14, param_13);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_14) /\ (param_14 <= 18446744073709551615)) /\
         (((0 <= (param_15 + param_14)) /\
          ((param_15 + param_14) <= 18446744073709551615)) /\
         ((is_init b_result_4 0 224) /\ (result_6 = (param_15 + param_14))))))]);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_6) /\ (result_6 <= 18446744073709551615)))]);
        st <- result_7;
        offset <- result_6;
        param_12 <- st;
        param_11 <- rATE8;
        (result_5, b_result_3, tmp__trace) <@ __addratebit_avx2 (param_12,
        (BArray224.init_arr (W8.of_int 255) 224), param_11);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
        trace_a1____pabsorb_array_avx2 <-
        (trace_a1____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_3 0 224))]);
        st <- result_5;
      } else {
        if ((lEN <> 0)) {
          param_23 <- pst;
          param_22 <- 0;
          b_param_1 <- b_buf;
          param_21 <- buf;
          param_20 <- offset;
          param_19 <- lEN;
          param_18 <- tRAILB;
          (result_10, b_result_5, result_9, result_8, tmp__trace) <@ 
          a1____pstate_array_avx2 (param_23,
          (BArray200.init_arr (W8.of_int 255) 200), param_22, param_21,
          b_param_1, param_20, param_19, param_18);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++ tmp__trace);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert,
           (((0 <= param_19) /\ (param_19 <= 18446744073709551615)) /\
           (((0 <= (param_20 + param_19)) /\
            ((param_20 + param_19) <= 18446744073709551615)) /\
           (((is_init b_result_5 0 200) /\
            (result_9 = ((param_22 + param_19) + ((param_18 <> 0) ? 1 : 0)))) /\
           (result_8 = (param_20 + param_19))))))]);
          trace_a1____pabsorb_array_avx2 <-
          (trace_a1____pabsorb_array_avx2 ++
          [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
          pst <- result_10;
          aT <- result_9;
          offset <- result_8;
        } else {
          
        }
      }
    }
    b_pst <- (BArray200.init_arr (W8.of_int 255) 200);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (pst, b_pst, aT, st, b_st, offset, trace_a1____pabsorb_array_avx2);
  }
  proc a1____addstate_array_avx2x4 (st:BArray800.t, b_st:BArray800.t, aT:int,
                                    buf0:BArray1.t, b_buf0:BArray1.t,
                                    buf1:BArray1.t, b_buf1:BArray1.t,
                                    buf2:BArray1.t, b_buf2:BArray1.t,
                                    buf3:BArray1.t, b_buf3:BArray1.t,
                                    offset:int, lEN:int, tRAILB:int) : 
  BArray800.t * BArray800.t * int * int * trace = {
    var aLL:int;
    var lO:int;
    var dELTA:int;
    var t0:W64.t;
    var t1:W64.t;
    var t2:W64.t;
    var t3:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var at:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray1.t;
    var result_7:W64.t;
    var result_8:int;
    var result_9:int;
    var result_10:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray1.t;
    var result_11:W64.t;
    var result_12:int;
    var result_13:int;
    var result_14:int;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var param_23:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:BArray1.t;
    var result_19:W64.t;
    var result_20:int;
    var result_21:int;
    var result_22:int;
    var param_28:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:BArray1.t;
    var result_23:W64.t;
    var result_24:int;
    var result_25:int;
    var result_26:int;
    var param_33:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:BArray1.t;
    var result_27:W64.t;
    var result_28:int;
    var result_29:int;
    var result_30:int;
    var param_38:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:BArray1.t;
    var result_31:W64.t;
    var result_32:int;
    var result_33:int;
    var result_34:int;
    var param_43:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:BArray1.t;
    var result_35:W64.t;
    var result_36:int;
    var result_37:int;
    var result_38:int;
    var param_48:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:BArray1.t;
    var result_39:W64.t;
    var result_40:int;
    var result_41:int;
    var result_42:int;
    var param_53:int;
    var param_54:int;
    var param_55:int;
    var param_56:int;
    var param_57:BArray1.t;
    var result_43:W64.t;
    var result_44:int;
    var result_45:int;
    var result_46:int;
    var param_58:int;
    var param_59:int;
    var param_60:int;
    var param_61:int;
    var param_62:BArray1.t;
    var result_47:W64.t;
    var result_48:int;
    var result_49:int;
    var result_50:int;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var b_param_1:BArray1.t;
    var b_param_2:BArray1.t;
    var b_param_3:BArray1.t;
    var b_param_4:BArray1.t;
    var b_param_5:BArray1.t;
    var b_param_6:BArray1.t;
    var b_param_7:BArray1.t;
    var b_param_8:BArray1.t;
    var b_param_9:BArray1.t;
    var b_param_10:BArray1.t;
    var trace_a1____addstate_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_27 <- witness;
    param_32 <- witness;
    param_37 <- witness;
    param_42 <- witness;
    param_47 <- witness;
    param_52 <- witness;
    param_57 <- witness;
    param_62 <- witness;
    trace_a1____addstate_array_avx2x4 <- [];
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < 200)) /\
           ((offset + lEN) <= 1)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (is_init b_buf0 offset lEN)) /\
        (is_init b_buf1 offset lEN)) /\
       (is_init b_buf2 offset lEN)) /\
      (is_init b_buf3 offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    lO <- (aT %% 8);
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert,
     ((0 <= (4 * (aT %/ 8))) /\ ((4 * (aT %/ 8)) <= 18446744073709551615)))]);
    at <- (4 * (aT %/ 8));
    dELTA <- 0;
    if ((0 < lO)) {
      if (((lO + lEN) < 8)) {
        if ((tRAILB <> 0)) {
          aLL <- (aLL + 1);
        } else {
          
        }
        b_param_6 <- b_buf0;
        param_42 <- buf0;
        param_41 <- offset;
        param_40 <- dELTA;
        param_39 <- lEN;
        param_38 <- tRAILB;
        (result_34, result_33, result_32, result_31, tmp__trace) <@ a1____aread_subu64 (
        param_42, b_param_6, param_41, param_40, param_39, param_38);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         (((result_34 =
           (param_40 +
           ((((param_39 < 8) ? param_39 : 8) < 0) ? 0 : ((param_39 < 8) ? 
                                                        param_39 : 8)))) /\
          (result_33 =
          (param_39 -
          ((((param_39 < 8) ? param_39 : 8) < 0) ? 0 : ((param_39 < 8) ? 
                                                       param_39 : 8))))) /\
         (result_32 = ((8 <= param_39) ? param_38 : 0))))]);
        t0 <- result_31;
        b_param_5 <- b_buf1;
        param_37 <- buf1;
        param_36 <- offset;
        param_35 <- dELTA;
        param_34 <- lEN;
        param_33 <- tRAILB;
        (result_30, result_29, result_28, result_27, tmp__trace) <@ a1____aread_subu64 (
        param_37, b_param_5, param_36, param_35, param_34, param_33);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         (((result_30 =
           (param_35 +
           ((((param_34 < 8) ? param_34 : 8) < 0) ? 0 : ((param_34 < 8) ? 
                                                        param_34 : 8)))) /\
          (result_29 =
          (param_34 -
          ((((param_34 < 8) ? param_34 : 8) < 0) ? 0 : ((param_34 < 8) ? 
                                                       param_34 : 8))))) /\
         (result_28 = ((8 <= param_34) ? param_33 : 0))))]);
        t1 <- result_27;
        b_param_4 <- b_buf2;
        param_32 <- buf2;
        param_31 <- offset;
        param_30 <- dELTA;
        param_29 <- lEN;
        param_28 <- tRAILB;
        (result_26, result_25, result_24, result_23, tmp__trace) <@ a1____aread_subu64 (
        param_32, b_param_4, param_31, param_30, param_29, param_28);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         (((result_26 =
           (param_30 +
           ((((param_29 < 8) ? param_29 : 8) < 0) ? 0 : ((param_29 < 8) ? 
                                                        param_29 : 8)))) /\
          (result_25 =
          (param_29 -
          ((((param_29 < 8) ? param_29 : 8) < 0) ? 0 : ((param_29 < 8) ? 
                                                       param_29 : 8))))) /\
         (result_24 = ((8 <= param_29) ? param_28 : 0))))]);
        t2 <- result_23;
        b_param_3 <- b_buf3;
        param_27 <- buf3;
        param_26 <- offset;
        param_25 <- dELTA;
        param_24 <- lEN;
        param_23 <- tRAILB;
        (result_22, result_21, result_20, result_19, tmp__trace) <@ a1____aread_subu64 (
        param_27, b_param_3, param_26, param_25, param_24, param_23);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         (((result_22 =
           (param_25 +
           ((((param_24 < 8) ? param_24 : 8) < 0) ? 0 : ((param_24 < 8) ? 
                                                        param_24 : 8)))) /\
          (result_21 =
          (param_24 -
          ((((param_24 < 8) ? param_24 : 8) < 0) ? 0 : ((param_24 < 8) ? 
                                                       param_24 : 8))))) /\
         (result_20 = ((8 <= param_24) ? param_23 : 0))))]);
        dELTA <- result_22;
        t3 <- result_19;
        t0 <- (t0 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        t1 <- (t1 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        t2 <- (t2 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        t3 <- (t3 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        aT <- 0;
        lEN <- 0;
        tRAILB <- 0;
      } else {
        if ((8 <= lEN)) {
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf0 (offset + dELTA) 8))]);
          t0 <- (BArray1.get64d buf0 (offset + dELTA));
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf1 (offset + dELTA) 8))]);
          t1 <- (BArray1.get64d buf1 (offset + dELTA));
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf2 (offset + dELTA) 8))]);
          t2 <- (BArray1.get64d buf2 (offset + dELTA));
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf3 (offset + dELTA) 8))]);
          t3 <- (BArray1.get64d buf3 (offset + dELTA));
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert, ((0 <= (8 - lO)) /\ ((8 - lO) <= 18446744073709551615)))]);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + (8 - lO))) /\
           ((offset + (8 - lO)) <= 18446744073709551615)))]);
          offset <- (offset + (8 - lO));
        } else {
          b_param_10 <- b_buf0;
          param_62 <- buf0;
          param_61 <- offset;
          param_60 <- dELTA;
          param_59 <- (8 - lO);
          param_58 <- tRAILB;
          (result_50, result_49, result_48, result_47, tmp__trace) <@ 
          a1____aread_subu64 (param_62, b_param_10, param_61, param_60,
          param_59, param_58);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           (((result_50 =
             (param_60 +
             ((((param_59 < 8) ? param_59 : 8) < 0) ? 0 : ((param_59 < 8) ? 
                                                          param_59 : 8)))) /\
            (result_49 =
            (param_59 -
            ((((param_59 < 8) ? param_59 : 8) < 0) ? 0 : ((param_59 < 8) ? 
                                                         param_59 : 8))))) /\
           (result_48 = ((8 <= param_59) ? param_58 : 0))))]);
          t0 <- result_47;
          b_param_9 <- b_buf1;
          param_57 <- buf1;
          param_56 <- offset;
          param_55 <- dELTA;
          param_54 <- (8 - lO);
          param_53 <- tRAILB;
          (result_46, result_45, result_44, result_43, tmp__trace) <@ 
          a1____aread_subu64 (param_57, b_param_9, param_56, param_55,
          param_54, param_53);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           (((result_46 =
             (param_55 +
             ((((param_54 < 8) ? param_54 : 8) < 0) ? 0 : ((param_54 < 8) ? 
                                                          param_54 : 8)))) /\
            (result_45 =
            (param_54 -
            ((((param_54 < 8) ? param_54 : 8) < 0) ? 0 : ((param_54 < 8) ? 
                                                         param_54 : 8))))) /\
           (result_44 = ((8 <= param_54) ? param_53 : 0))))]);
          t1 <- result_43;
          b_param_8 <- b_buf2;
          param_52 <- buf2;
          param_51 <- offset;
          param_50 <- dELTA;
          param_49 <- (8 - lO);
          param_48 <- tRAILB;
          (result_42, result_41, result_40, result_39, tmp__trace) <@ 
          a1____aread_subu64 (param_52, b_param_8, param_51, param_50,
          param_49, param_48);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           (((result_42 =
             (param_50 +
             ((((param_49 < 8) ? param_49 : 8) < 0) ? 0 : ((param_49 < 8) ? 
                                                          param_49 : 8)))) /\
            (result_41 =
            (param_49 -
            ((((param_49 < 8) ? param_49 : 8) < 0) ? 0 : ((param_49 < 8) ? 
                                                         param_49 : 8))))) /\
           (result_40 = ((8 <= param_49) ? param_48 : 0))))]);
          t2 <- result_39;
          b_param_7 <- b_buf3;
          param_47 <- buf3;
          param_46 <- offset;
          param_45 <- dELTA;
          param_44 <- (8 - lO);
          param_43 <- tRAILB;
          (result_38, result_37, result_36, result_35, tmp__trace) <@ 
          a1____aread_subu64 (param_47, b_param_7, param_46, param_45,
          param_44, param_43);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
          trace_a1____addstate_array_avx2x4 <-
          (trace_a1____addstate_array_avx2x4 ++
          [(Assert,
           (((result_38 =
             (param_45 +
             ((((param_44 < 8) ? param_44 : 8) < 0) ? 0 : ((param_44 < 8) ? 
                                                          param_44 : 8)))) /\
            (result_37 =
            (param_44 -
            ((((param_44 < 8) ? param_44 : 8) < 0) ? 0 : ((param_44 < 8) ? 
                                                         param_44 : 8))))) /\
           (result_36 = ((8 <= param_44) ? param_43 : 0))))]);
          dELTA <- result_38;
          t3 <- result_35;
        }
        lEN <- (lEN - (8 - lO));
        aT <- (aT + (8 - lO));
        t0 <- (t0 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        t1 <- (t1 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        t2 <- (t2 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        t3 <- (t3 `<<` (W8.of_int (8 * lO)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
      }
    } else {
      
    }
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a1____addstate_array_avx2x4 <-
    (trace_a1____addstate_array_avx2x4 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    dELTA <- 0;
    if ((8 <= lEN)) {
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * (aT %/ 8)) + (16 * (lEN %/ 32)))) /\
       (((4 * (aT %/ 8)) + (16 * (lEN %/ 32))) <= 18446744073709551615)))]);
      while ((at < ((4 * (aT %/ 8)) + (16 * (lEN %/ 32))))) {
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf0 offset 32))]);
        t256_0 <- (BArray1.get256d buf0 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf1 offset 32))]);
        t256_1 <- (BArray1.get256d buf1 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf2 offset 32))]);
        t256_2 <- (BArray1.get256d buf2 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf3 offset 32))]);
        t256_3 <- (BArray1.get256d buf3 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
        offset <- (offset + 32);
        param_22 <- t256_0;
        param_21 <- t256_1;
        param_20 <- t256_2;
        param_19 <- t256_3;
        (result_18, result_17, result_16, result_15, tmp__trace) <@ __4u64x4_u256x4 (
        param_22, param_21, param_20, param_19);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
        t256_0 <- result_18;
        t256_1 <- result_17;
        t256_2 <- result_16;
        t256_3 <- result_15;
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 800)))]);
        t256_0 <- (t256_0 `^` (BArray800.get256d st (8 * at)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 800)))]);
        st <- (BArray800.set256d st (8 * at) t256_0);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\
         (((8 * at) + 32) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\ ((((8 * at) + 32) + 32) <= 800)))]);
        t256_1 <- (t256_1 `^` (BArray800.get256d st ((8 * at) + 32)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\
         (((8 * at) + 32) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\ ((((8 * at) + 32) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 32) t256_1);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\
         (((8 * at) + 64) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\ ((((8 * at) + 64) + 32) <= 800)))]);
        t256_2 <- (t256_2 `^` (BArray800.get256d st ((8 * at) + 64)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\
         (((8 * at) + 64) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\ ((((8 * at) + 64) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 64) t256_2);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\
         (((8 * at) + 96) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\ ((((8 * at) + 96) + 32) <= 800)))]);
        t256_3 <- (t256_3 `^` (BArray800.get256d st ((8 * at) + 96)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\
         (((8 * at) + 96) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\ ((((8 * at) + 96) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 96) t256_3);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 16)) /\ ((at + 16) <= 18446744073709551615)))]);
        at <- (at + 16);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((4 * (aT %/ 8)) + (16 * (lEN %/ 32)))) /\
         (((4 * (aT %/ 8)) + (16 * (lEN %/ 32))) <= 18446744073709551615)))]);
      }
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * (aT %/ 8)) + (4 * (lEN %/ 8)))) /\
       (((4 * (aT %/ 8)) + (4 * (lEN %/ 8))) <= 18446744073709551615)))]);
      while ((at < ((4 * (aT %/ 8)) + (4 * (lEN %/ 8))))) {
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf0 offset 8))]);
        t0 <- (BArray1.get64d buf0 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf1 offset 8))]);
        t1 <- (BArray1.get64d buf1 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf2 offset 8))]);
        t2 <- (BArray1.get64d buf2 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 1)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf3 offset 8))]);
        t3 <- (BArray1.get64d buf3 offset);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= (offset + 8)) /\ ((offset + 8) <= 18446744073709551615)))]);
        offset <- (offset + 8);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
        trace_a1____addstate_array_avx2x4 <-
        (trace_a1____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((4 * (aT %/ 8)) + (4 * (lEN %/ 8)))) /\
         (((4 * (aT %/ 8)) + (4 * (lEN %/ 8))) <= 18446744073709551615)))]);
      }
      lEN <- ((aT + lEN) %% 8);
    } else {
      
    }
    lO <- ((aT + lEN) %% 8);
    if (((0 < lO) \/ (tRAILB <> 0))) {
      b_param_2 <- b_buf0;
      param_18 <- buf0;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lO;
      param_14 <- tRAILB;
      (result_14, result_13, result_12, result_11, tmp__trace) <@ a1____aread_subu64 (
      param_18, b_param_2, param_17, param_16, param_15, param_14);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       (((result_14 =
         (param_16 +
         ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                      param_15 : 8)))) /\
        (result_13 =
        (param_15 -
        ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                     param_15 : 8))))) /\
       (result_12 = ((8 <= param_15) ? param_14 : 0))))]);
      t0 <- result_11;
      b_param_1 <- b_buf1;
      param_13 <- buf1;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lO;
      param_9 <- tRAILB;
      (result_10, result_9, result_8, result_7, tmp__trace) <@ a1____aread_subu64 (
      param_13, b_param_1, param_12, param_11, param_10, param_9);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       (((result_10 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_9 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_8 = ((8 <= param_10) ? param_9 : 0))))]);
      t1 <- result_7;
      b_param_0 <- b_buf2;
      param_8 <- buf2;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lO;
      param_4 <- tRAILB;
      (result_6, result_5, result_4, result_3, tmp__trace) <@ a1____aread_subu64 (
      param_8, b_param_0, param_7, param_6, param_5, param_4);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       (((result_6 =
         (param_6 +
         ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                    param_5 : 8)))) /\
        (result_5 =
        (param_5 -
        ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8))))) /\
       (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
      t2 <- result_3;
      b_param <- b_buf3;
      param_3 <- buf3;
      param_2 <- offset;
      param_1 <- dELTA;
      param_0 <- lO;
      param <- tRAILB;
      (result_2, result_1, result_0, result, tmp__trace) <@ a1____aread_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++ tmp__trace);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       (((result_2 =
         (param_1 +
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8)))) /\
        (result_1 =
        (param_0 -
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))) /\
       (result_0 = ((8 <= param_0) ? param : 0))))]);
      dELTA <- result_2;
      t3 <- result;
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      if ((tRAILB <> 0)) {
        aLL <- (aLL + 1);
      } else {
        
      }
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
      t0 <- (t0 `^` (BArray800.get64 st at));
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st at t0);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
      t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 1) t1);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
      t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 2) t2);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
      t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
      trace_a1____addstate_array_avx2x4 <-
      (trace_a1____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 3) t3);
    } else {
      
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aLL, offset, trace_a1____addstate_array_avx2x4);
  }
  proc a1____absorb_array_avx2x4 (st:BArray800.t, b_st:BArray800.t, aT:int,
                                  buf0:BArray1.t, b_buf0:BArray1.t,
                                  buf1:BArray1.t, b_buf1:BArray1.t,
                                  buf2:BArray1.t, b_buf2:BArray1.t,
                                  buf3:BArray1.t, b_buf3:BArray1.t,
                                  offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray800.t * BArray800.t * int * int * trace = {
    var aLL:int;
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray800.t;
    var result:BArray800.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray1.t;
    var param_5:BArray1.t;
    var param_6:BArray1.t;
    var param_7:BArray1.t;
    var param_8:int;
    var param_9:BArray800.t;
    var result_0:int;
    var result_1:int;
    var result_2:BArray800.t;
    var param_10:int;
    var param_11:BArray800.t;
    var result_3:BArray800.t;
    var param_12:int;
    var param_13:int;
    var param_14:int;
    var param_15:BArray1.t;
    var param_16:BArray1.t;
    var param_17:BArray1.t;
    var param_18:BArray1.t;
    var param_19:int;
    var param_20:BArray800.t;
    var result_4:int;
    var result_5:int;
    var result_6:BArray800.t;
    var param_21:BArray800.t;
    var result_7:BArray800.t;
    var param_22:int;
    var param_23:int;
    var param_24:int;
    var param_25:BArray1.t;
    var param_26:BArray1.t;
    var param_27:BArray1.t;
    var param_28:BArray1.t;
    var param_29:int;
    var param_30:BArray800.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray800.t;
    var param_31:BArray800.t;
    var result_11:BArray800.t;
    var param_32:int;
    var param_33:int;
    var param_34:int;
    var param_35:BArray1.t;
    var param_36:BArray1.t;
    var param_37:BArray1.t;
    var param_38:BArray1.t;
    var param_39:int;
    var param_40:BArray800.t;
    var result_12:int;
    var result_13:int;
    var result_14:BArray800.t;
    var b_result:BArray800.t;
    var b_result_0:BArray800.t;
    var b_param:BArray1.t;
    var b_param_0:BArray1.t;
    var b_param_1:BArray1.t;
    var b_param_2:BArray1.t;
    var b_result_1:BArray800.t;
    var b_result_2:BArray800.t;
    var b_param_3:BArray1.t;
    var b_param_4:BArray1.t;
    var b_param_5:BArray1.t;
    var b_param_6:BArray1.t;
    var b_result_3:BArray800.t;
    var b_result_4:BArray800.t;
    var b_param_7:BArray1.t;
    var b_param_8:BArray1.t;
    var b_param_9:BArray1.t;
    var b_param_10:BArray1.t;
    var b_result_5:BArray800.t;
    var b_result_6:BArray800.t;
    var b_param_11:BArray1.t;
    var b_param_12:BArray1.t;
    var b_param_13:BArray1.t;
    var b_param_14:BArray1.t;
    var trace_a1____absorb_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    b_param_11 <- witness;
    b_param_12 <- witness;
    b_param_13 <- witness;
    b_param_14 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_9 <- witness;
    param_11 <- witness;
    param_15 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_18 <- witness;
    param_20 <- witness;
    param_21 <- witness;
    param_25 <- witness;
    param_26 <- witness;
    param_27 <- witness;
    param_28 <- witness;
    param_30 <- witness;
    param_31 <- witness;
    param_35 <- witness;
    param_36 <- witness;
    param_37 <- witness;
    param_38 <- witness;
    param_40 <- witness;
    result <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_14 <- witness;
    trace_a1____absorb_array_avx2x4 <- [];
    trace_a1____absorb_array_avx2x4 <-
    (trace_a1____absorb_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < rATE8)) /\
             (0 < rATE8)) /\
            (rATE8 < 200)) /\
           ((offset + lEN) <= 1)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (is_init b_buf0 offset lEN)) /\
        (is_init b_buf1 offset lEN)) /\
       (is_init b_buf2 offset lEN)) /\
      (is_init b_buf3 offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a1____absorb_array_avx2x4 <-
    (trace_a1____absorb_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1____absorb_array_avx2x4 <-
    (trace_a1____absorb_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    if (((aT + lEN) < rATE8)) {
      param_9 <- st;
      param_8 <- aT;
      b_param_2 <- b_buf0;
      param_7 <- buf0;
      b_param_1 <- b_buf1;
      param_6 <- buf1;
      b_param_0 <- b_buf2;
      param_5 <- buf2;
      b_param <- b_buf3;
      param_4 <- buf3;
      param_3 <- offset;
      param_2 <- lEN;
      param_1 <- tRAILB;
      (result_2, b_result_0, result_1, result_0, tmp__trace) <@ a1____addstate_array_avx2x4 (
      param_9, (BArray800.init_arr (W8.of_int 255) 800), param_8, param_7,
      b_param_2, param_6, b_param_1, param_5, b_param_0, param_4, b_param,
      param_3, param_2, param_1);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++
      [(Assert,
       (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
       (((0 <= (param_3 + param_2)) /\
        ((param_3 + param_2) <= 18446744073709551615)) /\
       (((is_init b_result_0 0 800) /\
        (result_1 = ((param_8 + param_2) + ((param_1 <> 0) ? 1 : 0)))) /\
       (result_0 = (param_3 + param_2))))))]);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++
      [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
      st <- result_2;
      aT <- result_1;
      offset <- result_0;
      if ((tRAILB <> 0)) {
        param_0 <- st;
        param <- rATE8;
        (result, b_result, tmp__trace) <@ __addratebit_avx2x4 (param_0,
        (BArray800.init_arr (W8.of_int 255) 800), param);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result 0 800))]);
        st <- result;
      } else {
        
      }
    } else {
      if ((aT <> 0)) {
        param_40 <- st;
        param_39 <- aT;
        b_param_14 <- b_buf0;
        param_38 <- buf0;
        b_param_13 <- b_buf1;
        param_37 <- buf1;
        b_param_12 <- b_buf2;
        param_36 <- buf2;
        b_param_11 <- b_buf3;
        param_35 <- buf3;
        param_34 <- offset;
        param_33 <- (rATE8 - aT);
        param_32 <- 0;
        (result_14, b_result_6, result_13, result_12, tmp__trace) <@ 
        a1____addstate_array_avx2x4 (param_40,
        (BArray800.init_arr (W8.of_int 255) 800), param_39, param_38,
        b_param_14, param_37, b_param_13, param_36, b_param_12, param_35,
        b_param_11, param_34, param_33, param_32);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert,
         (((0 <= param_33) /\ (param_33 <= 18446744073709551615)) /\
         (((0 <= (param_34 + param_33)) /\
          ((param_34 + param_33) <= 18446744073709551615)) /\
         (((is_init b_result_6 0 800) /\
          (result_13 = ((param_39 + param_33) + ((param_32 <> 0) ? 1 : 0)))) /\
         (result_12 = (param_34 + param_33))))))]);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, ((0 <= result_12) /\ (result_12 <= 18446744073709551615)))]);
        st <- result_14;
        offset <- result_12;
        lEN <- (lEN - (rATE8 - aT));
        param_31 <- st;
        (result_11, b_result_5, tmp__trace) <@ _keccakf1600_avx2x4 (param_31,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_5 0 800))]);
        st <- result_11;
      } else {
        
      }
      iTERS <- (lEN %/ rATE8);
      i <- 0;
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_30 <- st;
        param_29 <- 0;
        b_param_10 <- b_buf0;
        param_28 <- buf0;
        b_param_9 <- b_buf1;
        param_27 <- buf1;
        b_param_8 <- b_buf2;
        param_26 <- buf2;
        b_param_7 <- b_buf3;
        param_25 <- buf3;
        param_24 <- offset;
        param_23 <- rATE8;
        param_22 <- 0;
        (result_10, b_result_4, result_9, result_8, tmp__trace) <@ a1____addstate_array_avx2x4 (
        param_30, (BArray800.init_arr (W8.of_int 255) 800), param_29,
        param_28, b_param_10, param_27, b_param_9, param_26, b_param_8,
        param_25, b_param_7, param_24, param_23, param_22);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert,
         (((0 <= param_23) /\ (param_23 <= 18446744073709551615)) /\
         (((0 <= (param_24 + param_23)) /\
          ((param_24 + param_23) <= 18446744073709551615)) /\
         (((is_init b_result_4 0 800) /\
          (result_9 = ((param_29 + param_23) + ((param_22 <> 0) ? 1 : 0)))) /\
         (result_8 = (param_24 + param_23))))))]);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
        st <- result_10;
        offset <- result_8;
        param_21 <- st;
        (result_7, b_result_3, tmp__trace) <@ _keccakf1600_avx2x4 (param_21,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_3 0 800))]);
        st <- result_7;
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
      lEN <- (aLL %% rATE8);
      param_20 <- st;
      param_19 <- 0;
      b_param_6 <- b_buf0;
      param_18 <- buf0;
      b_param_5 <- b_buf1;
      param_17 <- buf1;
      b_param_4 <- b_buf2;
      param_16 <- buf2;
      b_param_3 <- b_buf3;
      param_15 <- buf3;
      param_14 <- offset;
      param_13 <- lEN;
      param_12 <- tRAILB;
      (result_6, b_result_2, result_5, result_4, tmp__trace) <@ a1____addstate_array_avx2x4 (
      param_20, (BArray800.init_arr (W8.of_int 255) 800), param_19, param_18,
      b_param_6, param_17, b_param_5, param_16, b_param_4, param_15,
      b_param_3, param_14, param_13, param_12);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++
      [(Assert,
       (((0 <= param_13) /\ (param_13 <= 18446744073709551615)) /\
       (((0 <= (param_14 + param_13)) /\
        ((param_14 + param_13) <= 18446744073709551615)) /\
       (((is_init b_result_2 0 800) /\
        (result_5 = ((param_19 + param_13) + ((param_12 <> 0) ? 1 : 0)))) /\
       (result_4 = (param_14 + param_13))))))]);
      trace_a1____absorb_array_avx2x4 <-
      (trace_a1____absorb_array_avx2x4 ++
      [(Assert, ((0 <= result_4) /\ (result_4 <= 18446744073709551615)))]);
      st <- result_6;
      aT <- result_5;
      offset <- result_4;
      if ((tRAILB <> 0)) {
        param_11 <- st;
        param_10 <- rATE8;
        (result_3, b_result_1, tmp__trace) <@ __addratebit_avx2x4 (param_11,
        (BArray800.init_arr (W8.of_int 255) 800), param_10);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++ tmp__trace);
        trace_a1____absorb_array_avx2x4 <-
        (trace_a1____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_1 0 800))]);
        st <- result_3;
      } else {
        
      }
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aT, offset, trace_a1____absorb_array_avx2x4);
  }
  proc a2____aread_subu64 (buf:BArray2.t, b_buf:BArray2.t, offset:int,
                           dELTA:int, lEN:int, tRAIL:int) : int * int * int *
                                                            W64.t * trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a2____aread_subu64:trace;
    trace_a2____aread_subu64 <- [];
    trace_a2____aread_subu64 <-
    (trace_a2____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 2)) : true))))))))))]);
    trace_a2____aread_subu64 <-
    (trace_a2____aread_subu64 ++ [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a2____aread_subu64 <-
    (trace_a2____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a2____aread_subu64 <-
        (trace_a2____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a2____aread_subu64 <-
        (trace_a2____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a2____aread_subu64 <-
        (trace_a2____aread_subu64 ++
        [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 2)))]);
        trace_a2____aread_subu64 <-
        (trace_a2____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray2.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 2)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray2.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 2)))]);
          trace_a2____aread_subu64 <-
          (trace_a2____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray2.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a2____aread_subu64 <-
            (trace_a2____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a2____aread_subu64 <-
            (trace_a2____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a2____aread_subu64 <-
            (trace_a2____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 2)))]);
            trace_a2____aread_subu64 <-
            (trace_a2____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray2.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a2____aread_subu64);
  }
  proc a2____addstate_array_avx2x4 (st:BArray800.t, b_st:BArray800.t, aT:int,
                                    buf0:BArray2.t, b_buf0:BArray2.t,
                                    buf1:BArray2.t, b_buf1:BArray2.t,
                                    buf2:BArray2.t, b_buf2:BArray2.t,
                                    buf3:BArray2.t, b_buf3:BArray2.t,
                                    offset:int, lEN:int, tRAILB:int) : 
  BArray800.t * BArray800.t * int * int * trace = {
    var aLL:int;
    var lO:int;
    var dELTA:int;
    var t0:W64.t;
    var t1:W64.t;
    var t2:W64.t;
    var t3:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var at:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray2.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray2.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray2.t;
    var result_7:W64.t;
    var result_8:int;
    var result_9:int;
    var result_10:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray2.t;
    var result_11:W64.t;
    var result_12:int;
    var result_13:int;
    var result_14:int;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var param_23:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:BArray2.t;
    var result_19:W64.t;
    var result_20:int;
    var result_21:int;
    var result_22:int;
    var param_28:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:BArray2.t;
    var result_23:W64.t;
    var result_24:int;
    var result_25:int;
    var result_26:int;
    var param_33:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:BArray2.t;
    var result_27:W64.t;
    var result_28:int;
    var result_29:int;
    var result_30:int;
    var param_38:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:BArray2.t;
    var result_31:W64.t;
    var result_32:int;
    var result_33:int;
    var result_34:int;
    var param_43:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:BArray2.t;
    var result_35:W64.t;
    var result_36:int;
    var result_37:int;
    var result_38:int;
    var param_48:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:BArray2.t;
    var result_39:W64.t;
    var result_40:int;
    var result_41:int;
    var result_42:int;
    var param_53:int;
    var param_54:int;
    var param_55:int;
    var param_56:int;
    var param_57:BArray2.t;
    var result_43:W64.t;
    var result_44:int;
    var result_45:int;
    var result_46:int;
    var param_58:int;
    var param_59:int;
    var param_60:int;
    var param_61:int;
    var param_62:BArray2.t;
    var result_47:W64.t;
    var result_48:int;
    var result_49:int;
    var result_50:int;
    var b_param:BArray2.t;
    var b_param_0:BArray2.t;
    var b_param_1:BArray2.t;
    var b_param_2:BArray2.t;
    var b_param_3:BArray2.t;
    var b_param_4:BArray2.t;
    var b_param_5:BArray2.t;
    var b_param_6:BArray2.t;
    var b_param_7:BArray2.t;
    var b_param_8:BArray2.t;
    var b_param_9:BArray2.t;
    var b_param_10:BArray2.t;
    var trace_a2____addstate_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_27 <- witness;
    param_32 <- witness;
    param_37 <- witness;
    param_42 <- witness;
    param_47 <- witness;
    param_52 <- witness;
    param_57 <- witness;
    param_62 <- witness;
    trace_a2____addstate_array_avx2x4 <- [];
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < 200)) /\
           ((offset + lEN) <= 2)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (is_init b_buf0 offset lEN)) /\
        (is_init b_buf1 offset lEN)) /\
       (is_init b_buf2 offset lEN)) /\
      (is_init b_buf3 offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    lO <- (aT %% 8);
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert,
     ((0 <= (4 * (aT %/ 8))) /\ ((4 * (aT %/ 8)) <= 18446744073709551615)))]);
    at <- (4 * (aT %/ 8));
    dELTA <- 0;
    if ((0 < lO)) {
      if (((lO + lEN) < 8)) {
        if ((tRAILB <> 0)) {
          aLL <- (aLL + 1);
        } else {
          
        }
        b_param_6 <- b_buf0;
        param_42 <- buf0;
        param_41 <- offset;
        param_40 <- dELTA;
        param_39 <- lEN;
        param_38 <- tRAILB;
        (result_34, result_33, result_32, result_31, tmp__trace) <@ a2____aread_subu64 (
        param_42, b_param_6, param_41, param_40, param_39, param_38);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         (((result_34 =
           (param_40 +
           ((((param_39 < 8) ? param_39 : 8) < 0) ? 0 : ((param_39 < 8) ? 
                                                        param_39 : 8)))) /\
          (result_33 =
          (param_39 -
          ((((param_39 < 8) ? param_39 : 8) < 0) ? 0 : ((param_39 < 8) ? 
                                                       param_39 : 8))))) /\
         (result_32 = ((8 <= param_39) ? param_38 : 0))))]);
        t0 <- result_31;
        b_param_5 <- b_buf1;
        param_37 <- buf1;
        param_36 <- offset;
        param_35 <- dELTA;
        param_34 <- lEN;
        param_33 <- tRAILB;
        (result_30, result_29, result_28, result_27, tmp__trace) <@ a2____aread_subu64 (
        param_37, b_param_5, param_36, param_35, param_34, param_33);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         (((result_30 =
           (param_35 +
           ((((param_34 < 8) ? param_34 : 8) < 0) ? 0 : ((param_34 < 8) ? 
                                                        param_34 : 8)))) /\
          (result_29 =
          (param_34 -
          ((((param_34 < 8) ? param_34 : 8) < 0) ? 0 : ((param_34 < 8) ? 
                                                       param_34 : 8))))) /\
         (result_28 = ((8 <= param_34) ? param_33 : 0))))]);
        t1 <- result_27;
        b_param_4 <- b_buf2;
        param_32 <- buf2;
        param_31 <- offset;
        param_30 <- dELTA;
        param_29 <- lEN;
        param_28 <- tRAILB;
        (result_26, result_25, result_24, result_23, tmp__trace) <@ a2____aread_subu64 (
        param_32, b_param_4, param_31, param_30, param_29, param_28);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         (((result_26 =
           (param_30 +
           ((((param_29 < 8) ? param_29 : 8) < 0) ? 0 : ((param_29 < 8) ? 
                                                        param_29 : 8)))) /\
          (result_25 =
          (param_29 -
          ((((param_29 < 8) ? param_29 : 8) < 0) ? 0 : ((param_29 < 8) ? 
                                                       param_29 : 8))))) /\
         (result_24 = ((8 <= param_29) ? param_28 : 0))))]);
        t2 <- result_23;
        b_param_3 <- b_buf3;
        param_27 <- buf3;
        param_26 <- offset;
        param_25 <- dELTA;
        param_24 <- lEN;
        param_23 <- tRAILB;
        (result_22, result_21, result_20, result_19, tmp__trace) <@ a2____aread_subu64 (
        param_27, b_param_3, param_26, param_25, param_24, param_23);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         (((result_22 =
           (param_25 +
           ((((param_24 < 8) ? param_24 : 8) < 0) ? 0 : ((param_24 < 8) ? 
                                                        param_24 : 8)))) /\
          (result_21 =
          (param_24 -
          ((((param_24 < 8) ? param_24 : 8) < 0) ? 0 : ((param_24 < 8) ? 
                                                       param_24 : 8))))) /\
         (result_20 = ((8 <= param_24) ? param_23 : 0))))]);
        dELTA <- result_22;
        t3 <- result_19;
        t0 <- (t0 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        t1 <- (t1 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        t2 <- (t2 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        t3 <- (t3 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        aT <- 0;
        lEN <- 0;
        tRAILB <- 0;
      } else {
        if ((8 <= lEN)) {
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 2)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf0 (offset + dELTA) 8))]);
          t0 <- (BArray2.get64d buf0 (offset + dELTA));
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 2)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf1 (offset + dELTA) 8))]);
          t1 <- (BArray2.get64d buf1 (offset + dELTA));
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 2)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf2 (offset + dELTA) 8))]);
          t2 <- (BArray2.get64d buf2 (offset + dELTA));
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 2)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, (is_init b_buf3 (offset + dELTA) 8))]);
          t3 <- (BArray2.get64d buf3 (offset + dELTA));
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert, ((0 <= (8 - lO)) /\ ((8 - lO) <= 18446744073709551615)))]);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + (8 - lO))) /\
           ((offset + (8 - lO)) <= 18446744073709551615)))]);
          offset <- (offset + (8 - lO));
        } else {
          b_param_10 <- b_buf0;
          param_62 <- buf0;
          param_61 <- offset;
          param_60 <- dELTA;
          param_59 <- (8 - lO);
          param_58 <- tRAILB;
          (result_50, result_49, result_48, result_47, tmp__trace) <@ 
          a2____aread_subu64 (param_62, b_param_10, param_61, param_60,
          param_59, param_58);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           (((result_50 =
             (param_60 +
             ((((param_59 < 8) ? param_59 : 8) < 0) ? 0 : ((param_59 < 8) ? 
                                                          param_59 : 8)))) /\
            (result_49 =
            (param_59 -
            ((((param_59 < 8) ? param_59 : 8) < 0) ? 0 : ((param_59 < 8) ? 
                                                         param_59 : 8))))) /\
           (result_48 = ((8 <= param_59) ? param_58 : 0))))]);
          t0 <- result_47;
          b_param_9 <- b_buf1;
          param_57 <- buf1;
          param_56 <- offset;
          param_55 <- dELTA;
          param_54 <- (8 - lO);
          param_53 <- tRAILB;
          (result_46, result_45, result_44, result_43, tmp__trace) <@ 
          a2____aread_subu64 (param_57, b_param_9, param_56, param_55,
          param_54, param_53);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           (((result_46 =
             (param_55 +
             ((((param_54 < 8) ? param_54 : 8) < 0) ? 0 : ((param_54 < 8) ? 
                                                          param_54 : 8)))) /\
            (result_45 =
            (param_54 -
            ((((param_54 < 8) ? param_54 : 8) < 0) ? 0 : ((param_54 < 8) ? 
                                                         param_54 : 8))))) /\
           (result_44 = ((8 <= param_54) ? param_53 : 0))))]);
          t1 <- result_43;
          b_param_8 <- b_buf2;
          param_52 <- buf2;
          param_51 <- offset;
          param_50 <- dELTA;
          param_49 <- (8 - lO);
          param_48 <- tRAILB;
          (result_42, result_41, result_40, result_39, tmp__trace) <@ 
          a2____aread_subu64 (param_52, b_param_8, param_51, param_50,
          param_49, param_48);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           (((result_42 =
             (param_50 +
             ((((param_49 < 8) ? param_49 : 8) < 0) ? 0 : ((param_49 < 8) ? 
                                                          param_49 : 8)))) /\
            (result_41 =
            (param_49 -
            ((((param_49 < 8) ? param_49 : 8) < 0) ? 0 : ((param_49 < 8) ? 
                                                         param_49 : 8))))) /\
           (result_40 = ((8 <= param_49) ? param_48 : 0))))]);
          t2 <- result_39;
          b_param_7 <- b_buf3;
          param_47 <- buf3;
          param_46 <- offset;
          param_45 <- dELTA;
          param_44 <- (8 - lO);
          param_43 <- tRAILB;
          (result_38, result_37, result_36, result_35, tmp__trace) <@ 
          a2____aread_subu64 (param_47, b_param_7, param_46, param_45,
          param_44, param_43);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
          trace_a2____addstate_array_avx2x4 <-
          (trace_a2____addstate_array_avx2x4 ++
          [(Assert,
           (((result_38 =
             (param_45 +
             ((((param_44 < 8) ? param_44 : 8) < 0) ? 0 : ((param_44 < 8) ? 
                                                          param_44 : 8)))) /\
            (result_37 =
            (param_44 -
            ((((param_44 < 8) ? param_44 : 8) < 0) ? 0 : ((param_44 < 8) ? 
                                                         param_44 : 8))))) /\
           (result_36 = ((8 <= param_44) ? param_43 : 0))))]);
          dELTA <- result_38;
          t3 <- result_35;
        }
        lEN <- (lEN - (8 - lO));
        aT <- (aT + (8 - lO));
        t0 <- (t0 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        t1 <- (t1 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        t2 <- (t2 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        t3 <- (t3 `<<` (W8.of_int (8 * lO)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
      }
    } else {
      
    }
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a2____addstate_array_avx2x4 <-
    (trace_a2____addstate_array_avx2x4 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    dELTA <- 0;
    if ((8 <= lEN)) {
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * (aT %/ 8)) + (16 * (lEN %/ 32)))) /\
       (((4 * (aT %/ 8)) + (16 * (lEN %/ 32))) <= 18446744073709551615)))]);
      while ((at < ((4 * (aT %/ 8)) + (16 * (lEN %/ 32))))) {
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf0 offset 32))]);
        t256_0 <- (BArray2.get256d buf0 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf1 offset 32))]);
        t256_1 <- (BArray2.get256d buf1 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf2 offset 32))]);
        t256_2 <- (BArray2.get256d buf2 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf3 offset 32))]);
        t256_3 <- (BArray2.get256d buf3 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
        offset <- (offset + 32);
        param_22 <- t256_0;
        param_21 <- t256_1;
        param_20 <- t256_2;
        param_19 <- t256_3;
        (result_18, result_17, result_16, result_15, tmp__trace) <@ __4u64x4_u256x4 (
        param_22, param_21, param_20, param_19);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
        t256_0 <- result_18;
        t256_1 <- result_17;
        t256_2 <- result_16;
        t256_3 <- result_15;
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 800)))]);
        t256_0 <- (t256_0 `^` (BArray800.get256d st (8 * at)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 800)))]);
        st <- (BArray800.set256d st (8 * at) t256_0);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\
         (((8 * at) + 32) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\ ((((8 * at) + 32) + 32) <= 800)))]);
        t256_1 <- (t256_1 `^` (BArray800.get256d st ((8 * at) + 32)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\
         (((8 * at) + 32) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 32)) /\ ((((8 * at) + 32) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 32) t256_1);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\
         (((8 * at) + 64) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\ ((((8 * at) + 64) + 32) <= 800)))]);
        t256_2 <- (t256_2 `^` (BArray800.get256d st ((8 * at) + 64)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\
         (((8 * at) + 64) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 64)) /\ ((((8 * at) + 64) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 64) t256_2);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\
         (((8 * at) + 96) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\ ((((8 * at) + 96) + 32) <= 800)))]);
        t256_3 <- (t256_3 `^` (BArray800.get256d st ((8 * at) + 96)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\
         (((8 * at) + 96) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((8 * at) + 96)) /\ ((((8 * at) + 96) + 32) <= 800)))]);
        st <- (BArray800.set256d st ((8 * at) + 96) t256_3);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 16)) /\ ((at + 16) <= 18446744073709551615)))]);
        at <- (at + 16);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((4 * (aT %/ 8)) + (16 * (lEN %/ 32)))) /\
         (((4 * (aT %/ 8)) + (16 * (lEN %/ 32))) <= 18446744073709551615)))]);
      }
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * (aT %/ 8)) + (4 * (lEN %/ 8)))) /\
       (((4 * (aT %/ 8)) + (4 * (lEN %/ 8))) <= 18446744073709551615)))]);
      while ((at < ((4 * (aT %/ 8)) + (4 * (lEN %/ 8))))) {
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf0 offset 8))]);
        t0 <- (BArray2.get64d buf0 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        t0 <- (t0 `^` (BArray800.get64 st at));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st at t0);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf1 offset 8))]);
        t1 <- (BArray2.get64d buf1 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 1) t1);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf2 offset 8))]);
        t2 <- (BArray2.get64d buf2 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 2) t2);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 2)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, (is_init b_buf3 offset 8))]);
        t3 <- (BArray2.get64d buf3 offset);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= (offset + 8)) /\ ((offset + 8) <= 18446744073709551615)))]);
        offset <- (offset + 8);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
        st <- (BArray800.set64 st (at + 3) t3);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
        trace_a2____addstate_array_avx2x4 <-
        (trace_a2____addstate_array_avx2x4 ++
        [(Assert,
         ((0 <= ((4 * (aT %/ 8)) + (4 * (lEN %/ 8)))) /\
         (((4 * (aT %/ 8)) + (4 * (lEN %/ 8))) <= 18446744073709551615)))]);
      }
      lEN <- ((aT + lEN) %% 8);
    } else {
      
    }
    lO <- ((aT + lEN) %% 8);
    if (((0 < lO) \/ (tRAILB <> 0))) {
      b_param_2 <- b_buf0;
      param_18 <- buf0;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lO;
      param_14 <- tRAILB;
      (result_14, result_13, result_12, result_11, tmp__trace) <@ a2____aread_subu64 (
      param_18, b_param_2, param_17, param_16, param_15, param_14);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       (((result_14 =
         (param_16 +
         ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                      param_15 : 8)))) /\
        (result_13 =
        (param_15 -
        ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                     param_15 : 8))))) /\
       (result_12 = ((8 <= param_15) ? param_14 : 0))))]);
      t0 <- result_11;
      b_param_1 <- b_buf1;
      param_13 <- buf1;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lO;
      param_9 <- tRAILB;
      (result_10, result_9, result_8, result_7, tmp__trace) <@ a2____aread_subu64 (
      param_13, b_param_1, param_12, param_11, param_10, param_9);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       (((result_10 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_9 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_8 = ((8 <= param_10) ? param_9 : 0))))]);
      t1 <- result_7;
      b_param_0 <- b_buf2;
      param_8 <- buf2;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lO;
      param_4 <- tRAILB;
      (result_6, result_5, result_4, result_3, tmp__trace) <@ a2____aread_subu64 (
      param_8, b_param_0, param_7, param_6, param_5, param_4);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       (((result_6 =
         (param_6 +
         ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                    param_5 : 8)))) /\
        (result_5 =
        (param_5 -
        ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8))))) /\
       (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
      t2 <- result_3;
      b_param <- b_buf3;
      param_3 <- buf3;
      param_2 <- offset;
      param_1 <- dELTA;
      param_0 <- lO;
      param <- tRAILB;
      (result_2, result_1, result_0, result, tmp__trace) <@ a2____aread_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++ tmp__trace);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       (((result_2 =
         (param_1 +
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8)))) /\
        (result_1 =
        (param_0 -
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))) /\
       (result_0 = ((8 <= param_0) ? param : 0))))]);
      dELTA <- result_2;
      t3 <- result;
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      if ((tRAILB <> 0)) {
        aLL <- (aLL + 1);
      } else {
        
      }
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
      t0 <- (t0 `^` (BArray800.get64 st at));
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ (at <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st at t0);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
      t1 <- (t1 `^` (BArray800.get64 st (at + 1)));
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 1) * 8)) /\ ((((at + 1) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 1) t1);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
      t2 <- (t2 `^` (BArray800.get64 st (at + 2)));
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 2) * 8)) /\ ((((at + 2) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 2) t2);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
      t3 <- (t3 `^` (BArray800.get64 st (at + 3)));
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= (at + 3)) /\ ((at + 3) <= 18446744073709551615)))]);
      trace_a2____addstate_array_avx2x4 <-
      (trace_a2____addstate_array_avx2x4 ++
      [(Assert, ((0 <= ((at + 3) * 8)) /\ ((((at + 3) * 8) + 8) <= 800)))]);
      st <- (BArray800.set64 st (at + 3) t3);
    } else {
      
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aLL, offset, trace_a2____addstate_array_avx2x4);
  }
  proc a2____absorb_array_avx2x4 (st:BArray800.t, b_st:BArray800.t, aT:int,
                                  buf0:BArray2.t, b_buf0:BArray2.t,
                                  buf1:BArray2.t, b_buf1:BArray2.t,
                                  buf2:BArray2.t, b_buf2:BArray2.t,
                                  buf3:BArray2.t, b_buf3:BArray2.t,
                                  offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray800.t * BArray800.t * int * int * trace = {
    var aLL:int;
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray800.t;
    var result:BArray800.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray2.t;
    var param_5:BArray2.t;
    var param_6:BArray2.t;
    var param_7:BArray2.t;
    var param_8:int;
    var param_9:BArray800.t;
    var result_0:int;
    var result_1:int;
    var result_2:BArray800.t;
    var param_10:int;
    var param_11:BArray800.t;
    var result_3:BArray800.t;
    var param_12:int;
    var param_13:int;
    var param_14:int;
    var param_15:BArray2.t;
    var param_16:BArray2.t;
    var param_17:BArray2.t;
    var param_18:BArray2.t;
    var param_19:int;
    var param_20:BArray800.t;
    var result_4:int;
    var result_5:int;
    var result_6:BArray800.t;
    var param_21:BArray800.t;
    var result_7:BArray800.t;
    var param_22:int;
    var param_23:int;
    var param_24:int;
    var param_25:BArray2.t;
    var param_26:BArray2.t;
    var param_27:BArray2.t;
    var param_28:BArray2.t;
    var param_29:int;
    var param_30:BArray800.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray800.t;
    var param_31:BArray800.t;
    var result_11:BArray800.t;
    var param_32:int;
    var param_33:int;
    var param_34:int;
    var param_35:BArray2.t;
    var param_36:BArray2.t;
    var param_37:BArray2.t;
    var param_38:BArray2.t;
    var param_39:int;
    var param_40:BArray800.t;
    var result_12:int;
    var result_13:int;
    var result_14:BArray800.t;
    var b_result:BArray800.t;
    var b_result_0:BArray800.t;
    var b_param:BArray2.t;
    var b_param_0:BArray2.t;
    var b_param_1:BArray2.t;
    var b_param_2:BArray2.t;
    var b_result_1:BArray800.t;
    var b_result_2:BArray800.t;
    var b_param_3:BArray2.t;
    var b_param_4:BArray2.t;
    var b_param_5:BArray2.t;
    var b_param_6:BArray2.t;
    var b_result_3:BArray800.t;
    var b_result_4:BArray800.t;
    var b_param_7:BArray2.t;
    var b_param_8:BArray2.t;
    var b_param_9:BArray2.t;
    var b_param_10:BArray2.t;
    var b_result_5:BArray800.t;
    var b_result_6:BArray800.t;
    var b_param_11:BArray2.t;
    var b_param_12:BArray2.t;
    var b_param_13:BArray2.t;
    var b_param_14:BArray2.t;
    var trace_a2____absorb_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    b_param_11 <- witness;
    b_param_12 <- witness;
    b_param_13 <- witness;
    b_param_14 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_9 <- witness;
    param_11 <- witness;
    param_15 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_18 <- witness;
    param_20 <- witness;
    param_21 <- witness;
    param_25 <- witness;
    param_26 <- witness;
    param_27 <- witness;
    param_28 <- witness;
    param_30 <- witness;
    param_31 <- witness;
    param_35 <- witness;
    param_36 <- witness;
    param_37 <- witness;
    param_38 <- witness;
    param_40 <- witness;
    result <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_14 <- witness;
    trace_a2____absorb_array_avx2x4 <- [];
    trace_a2____absorb_array_avx2x4 <-
    (trace_a2____absorb_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < rATE8)) /\
             (0 < rATE8)) /\
            (rATE8 < 200)) /\
           ((offset + lEN) <= 2)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (is_init b_buf0 offset lEN)) /\
        (is_init b_buf1 offset lEN)) /\
       (is_init b_buf2 offset lEN)) /\
      (is_init b_buf3 offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a2____absorb_array_avx2x4 <-
    (trace_a2____absorb_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a2____absorb_array_avx2x4 <-
    (trace_a2____absorb_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    if (((aT + lEN) < rATE8)) {
      param_9 <- st;
      param_8 <- aT;
      b_param_2 <- b_buf0;
      param_7 <- buf0;
      b_param_1 <- b_buf1;
      param_6 <- buf1;
      b_param_0 <- b_buf2;
      param_5 <- buf2;
      b_param <- b_buf3;
      param_4 <- buf3;
      param_3 <- offset;
      param_2 <- lEN;
      param_1 <- tRAILB;
      (result_2, b_result_0, result_1, result_0, tmp__trace) <@ a2____addstate_array_avx2x4 (
      param_9, (BArray800.init_arr (W8.of_int 255) 800), param_8, param_7,
      b_param_2, param_6, b_param_1, param_5, b_param_0, param_4, b_param,
      param_3, param_2, param_1);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++
      [(Assert,
       (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
       (((0 <= (param_3 + param_2)) /\
        ((param_3 + param_2) <= 18446744073709551615)) /\
       (((is_init b_result_0 0 800) /\
        (result_1 = ((param_8 + param_2) + ((param_1 <> 0) ? 1 : 0)))) /\
       (result_0 = (param_3 + param_2))))))]);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++
      [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
      st <- result_2;
      aT <- result_1;
      offset <- result_0;
      if ((tRAILB <> 0)) {
        param_0 <- st;
        param <- rATE8;
        (result, b_result, tmp__trace) <@ __addratebit_avx2x4 (param_0,
        (BArray800.init_arr (W8.of_int 255) 800), param);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result 0 800))]);
        st <- result;
      } else {
        
      }
    } else {
      if ((aT <> 0)) {
        param_40 <- st;
        param_39 <- aT;
        b_param_14 <- b_buf0;
        param_38 <- buf0;
        b_param_13 <- b_buf1;
        param_37 <- buf1;
        b_param_12 <- b_buf2;
        param_36 <- buf2;
        b_param_11 <- b_buf3;
        param_35 <- buf3;
        param_34 <- offset;
        param_33 <- (rATE8 - aT);
        param_32 <- 0;
        (result_14, b_result_6, result_13, result_12, tmp__trace) <@ 
        a2____addstate_array_avx2x4 (param_40,
        (BArray800.init_arr (W8.of_int 255) 800), param_39, param_38,
        b_param_14, param_37, b_param_13, param_36, b_param_12, param_35,
        b_param_11, param_34, param_33, param_32);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert,
         (((0 <= param_33) /\ (param_33 <= 18446744073709551615)) /\
         (((0 <= (param_34 + param_33)) /\
          ((param_34 + param_33) <= 18446744073709551615)) /\
         (((is_init b_result_6 0 800) /\
          (result_13 = ((param_39 + param_33) + ((param_32 <> 0) ? 1 : 0)))) /\
         (result_12 = (param_34 + param_33))))))]);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, ((0 <= result_12) /\ (result_12 <= 18446744073709551615)))]);
        st <- result_14;
        offset <- result_12;
        lEN <- (lEN - (rATE8 - aT));
        param_31 <- st;
        (result_11, b_result_5, tmp__trace) <@ _keccakf1600_avx2x4 (param_31,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_5 0 800))]);
        st <- result_11;
      } else {
        
      }
      iTERS <- (lEN %/ rATE8);
      i <- 0;
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_30 <- st;
        param_29 <- 0;
        b_param_10 <- b_buf0;
        param_28 <- buf0;
        b_param_9 <- b_buf1;
        param_27 <- buf1;
        b_param_8 <- b_buf2;
        param_26 <- buf2;
        b_param_7 <- b_buf3;
        param_25 <- buf3;
        param_24 <- offset;
        param_23 <- rATE8;
        param_22 <- 0;
        (result_10, b_result_4, result_9, result_8, tmp__trace) <@ a2____addstate_array_avx2x4 (
        param_30, (BArray800.init_arr (W8.of_int 255) 800), param_29,
        param_28, b_param_10, param_27, b_param_9, param_26, b_param_8,
        param_25, b_param_7, param_24, param_23, param_22);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert,
         (((0 <= param_23) /\ (param_23 <= 18446744073709551615)) /\
         (((0 <= (param_24 + param_23)) /\
          ((param_24 + param_23) <= 18446744073709551615)) /\
         (((is_init b_result_4 0 800) /\
          (result_9 = ((param_29 + param_23) + ((param_22 <> 0) ? 1 : 0)))) /\
         (result_8 = (param_24 + param_23))))))]);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
        st <- result_10;
        offset <- result_8;
        param_21 <- st;
        (result_7, b_result_3, tmp__trace) <@ _keccakf1600_avx2x4 (param_21,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_3 0 800))]);
        st <- result_7;
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
      lEN <- (aLL %% rATE8);
      param_20 <- st;
      param_19 <- 0;
      b_param_6 <- b_buf0;
      param_18 <- buf0;
      b_param_5 <- b_buf1;
      param_17 <- buf1;
      b_param_4 <- b_buf2;
      param_16 <- buf2;
      b_param_3 <- b_buf3;
      param_15 <- buf3;
      param_14 <- offset;
      param_13 <- lEN;
      param_12 <- tRAILB;
      (result_6, b_result_2, result_5, result_4, tmp__trace) <@ a2____addstate_array_avx2x4 (
      param_20, (BArray800.init_arr (W8.of_int 255) 800), param_19, param_18,
      b_param_6, param_17, b_param_5, param_16, b_param_4, param_15,
      b_param_3, param_14, param_13, param_12);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++
      [(Assert,
       (((0 <= param_13) /\ (param_13 <= 18446744073709551615)) /\
       (((0 <= (param_14 + param_13)) /\
        ((param_14 + param_13) <= 18446744073709551615)) /\
       (((is_init b_result_2 0 800) /\
        (result_5 = ((param_19 + param_13) + ((param_12 <> 0) ? 1 : 0)))) /\
       (result_4 = (param_14 + param_13))))))]);
      trace_a2____absorb_array_avx2x4 <-
      (trace_a2____absorb_array_avx2x4 ++
      [(Assert, ((0 <= result_4) /\ (result_4 <= 18446744073709551615)))]);
      st <- result_6;
      aT <- result_5;
      offset <- result_4;
      if ((tRAILB <> 0)) {
        param_11 <- st;
        param_10 <- rATE8;
        (result_3, b_result_1, tmp__trace) <@ __addratebit_avx2x4 (param_11,
        (BArray800.init_arr (W8.of_int 255) 800), param_10);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++ tmp__trace);
        trace_a2____absorb_array_avx2x4 <-
        (trace_a2____absorb_array_avx2x4 ++
        [(Assert, (is_init b_result_1 0 800))]);
        st <- result_3;
      } else {
        
      }
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aT, offset, trace_a2____absorb_array_avx2x4);
  }
  proc a32____aread_subu64 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                            dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                             int * W64.t *
                                                             trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a32____aread_subu64:trace;
    trace_a32____aread_subu64 <- [];
    trace_a32____aread_subu64 <-
    (trace_a32____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 32)) : true))))))))))]);
    trace_a32____aread_subu64 <-
    (trace_a32____aread_subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a32____aread_subu64 <-
    (trace_a32____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a32____aread_subu64 <-
        (trace_a32____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____aread_subu64 <-
        (trace_a32____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____aread_subu64 <-
        (trace_a32____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
        trace_a32____aread_subu64 <-
        (trace_a32____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray32.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 32)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray32.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 32)))]);
          trace_a32____aread_subu64 <-
          (trace_a32____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray32.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a32____aread_subu64 <-
            (trace_a32____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a32____aread_subu64 <-
            (trace_a32____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a32____aread_subu64 <-
            (trace_a32____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 32)))]);
            trace_a32____aread_subu64 <-
            (trace_a32____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray32.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a32____aread_subu64);
  }
  proc a32____aread_bcast_4subu64 (buf:BArray32.t, b_buf:BArray32.t,
                                   offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W256.t * trace = {
    var w:W256.t;
    var t64:W64.t;
    var t128:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var b_param:BArray32.t;
    var trace_a32____aread_bcast_4subu64:trace;
    b_param <- witness;
    param_3 <- witness;
    trace_a32____aread_bcast_4subu64 <- [];
    trace_a32____aread_bcast_4subu64 <-
    (trace_a32____aread_bcast_4subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 32)) : true))))))))))]);
    trace_a32____aread_bcast_4subu64 <-
    (trace_a32____aread_bcast_4subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a32____aread_bcast_4subu64 <-
    (trace_a32____aread_bcast_4subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((8 <= lEN)) {
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (VPBROADCAST_4u64 (BArray32.get64d buf (offset + dELTA)));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- tRAIL;
        (result_2, result_1, result_0, result, tmp__trace) <@ a32____aread_subu64 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++ tmp__trace);
        trace_a32____aread_bcast_4subu64 <-
        (trace_a32____aread_bcast_4subu64 ++
        [(Assert,
         (((result_2 =
           (param_1 +
           ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                      param_0 : 8)))) /\
          (result_1 =
          (param_0 -
          ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                     param_0 : 8))))) /\
         (result_0 = ((8 <= param_0) ? param : 0))))]);
        dELTA <- result_2;
        lEN <- result_1;
        tRAIL <- result_0;
        t64 <- result;
        t128 <- (zeroextu128 t64);
        w <- (VPBROADCAST_4u64 (truncateu64 t128));
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a32____aread_bcast_4subu64);
  }
  proc a32____aread_subu128 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W128.t *
                                                              trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var trace_a32____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a32____aread_subu128 <- [];
    trace_a32____aread_subu128 <-
    (trace_a32____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 32)) : true))))))))))]);
    trace_a32____aread_subu128 <-
    (trace_a32____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a32____aread_subu128 <-
    (trace_a32____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a32____aread_subu128 <-
        (trace_a32____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____aread_subu128 <-
        (trace_a32____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____aread_subu128 <-
        (trace_a32____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 32)))]);
        trace_a32____aread_subu128 <-
        (trace_a32____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray32.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray32.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a32____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++ tmp__trace);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a32____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++ tmp__trace);
          trace_a32____aread_subu128 <-
          (trace_a32____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a32____aread_subu128);
  }
  proc a32____aread_subu256 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W256.t *
                                                              trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var trace_a32____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a32____aread_subu256 <- [];
    trace_a32____aread_subu256 <-
    (trace_a32____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 32)) : true))))))))))]);
    trace_a32____aread_subu256 <-
    (trace_a32____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a32____aread_subu256 <-
    (trace_a32____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a32____aread_subu256 <-
        (trace_a32____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____aread_subu256 <-
        (trace_a32____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____aread_subu256 <-
        (trace_a32____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 32)))]);
        trace_a32____aread_subu256 <-
        (trace_a32____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray32.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 32)))]);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray32.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a32____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++ tmp__trace);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a32____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++ tmp__trace);
          trace_a32____aread_subu256 <-
          (trace_a32____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a32____aread_subu256);
  }
  proc a32____awrite_subu64 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                             dELTA:int, lEN:int, w:W64.t) : BArray32.t *
                                                            BArray32.t *
                                                            int * int * trace = {
    var trace_a32____awrite_subu64:trace;
    trace_a32____awrite_subu64 <- [];
    trace_a32____awrite_subu64 <-
    (trace_a32____awrite_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 32)) : true))))))))]);
    trace_a32____awrite_subu64 <-
    (trace_a32____awrite_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((8 <= lEN)) {
        trace_a32____awrite_subu64 <-
        (trace_a32____awrite_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____awrite_subu64 <-
        (trace_a32____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____awrite_subu64 <-
        (trace_a32____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
        b_buf <-
        (BArray32.set64d b_buf (offset + dELTA)
        (W64.of_int 18446744073709551615));
        buf <- (BArray32.set64d buf (offset + dELTA) w);
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 32)))]);
          b_buf <-
          (BArray32.set32d b_buf (offset + dELTA) (W32.of_int 4294967295));
          buf <- (BArray32.set32d buf (offset + dELTA) (truncateu32 w));
          w <- (w `>>` (W8.of_int 32));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          
        }
        if ((2 <= lEN)) {
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 32)))]);
          b_buf <-
          (BArray32.set16d b_buf (offset + dELTA) (W16.of_int 65535));
          buf <- (BArray32.set16d buf (offset + dELTA) (truncateu16 w));
          w <- (w `>>` (W8.of_int 16));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          
        }
        if ((1 <= lEN)) {
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____awrite_subu64 <-
          (trace_a32____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 32)))]);
          b_buf <- (BArray32.set8d b_buf (offset + dELTA) (W8.of_int 255));
          buf <- (BArray32.set8d buf (offset + dELTA) (truncateu8 w));
          dELTA <- (dELTA + 1);
          lEN <- (lEN - 1);
        } else {
          
        }
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a32____awrite_subu64);
  }
  proc a32____awrite_subu128 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                              dELTA:int, lEN:int, w:W128.t) : BArray32.t *
                                                              BArray32.t *
                                                              int * int *
                                                              trace = {
    var t64:W64.t;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:int;
    var result_0:int;
    var result_1:BArray32.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var trace_a32____awrite_subu128:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a32____awrite_subu128 <- [];
    trace_a32____awrite_subu128 <-
    (trace_a32____awrite_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 32)) : true))))))))]);
    trace_a32____awrite_subu128 <-
    (trace_a32____awrite_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((16 <= lEN)) {
        trace_a32____awrite_subu128 <-
        (trace_a32____awrite_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____awrite_subu128 <-
        (trace_a32____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____awrite_subu128 <-
        (trace_a32____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 32)))]);
        b_buf <-
        (BArray32.set128d b_buf (offset + dELTA)
        (W128.of_int 340282366920938463463374607431768211455));
        buf <- (BArray32.set128d buf (offset + dELTA) w);
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a32____awrite_subu128 <-
          (trace_a32____awrite_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____awrite_subu128 <-
          (trace_a32____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____awrite_subu128 <-
          (trace_a32____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
          b_buf <-
          (BArray32.set64d b_buf (offset + dELTA)
          (W64.of_int 18446744073709551615));
          buf <-
          (BArray32.set64d buf (offset + dELTA) (MOVV_64 (truncateu64 w)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          w <- (VPUNPCKH_2u64 w w);
        } else {
          
        }
        t64 <- (truncateu64 w);
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t64;
        (result_1, b_result, result_0, result, tmp__trace) <@ a32____awrite_subu64 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a32____awrite_subu128 <-
        (trace_a32____awrite_subu128 ++ tmp__trace);
        trace_a32____awrite_subu128 <-
        (trace_a32____awrite_subu128 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                     param_0 : 8)))) /\
         (result =
         (param_0 -
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a32____awrite_subu128);
  }
  proc a32____awrite_subu256 (buf:BArray32.t, b_buf:BArray32.t, offset:int,
                              dELTA:int, lEN:int, w:W256.t) : BArray32.t *
                                                              BArray32.t *
                                                              int * int *
                                                              trace = {
    var t128:W128.t;
    var param:W128.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:int;
    var result_0:int;
    var result_1:BArray32.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var trace_a32____awrite_subu256:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a32____awrite_subu256 <- [];
    trace_a32____awrite_subu256 <-
    (trace_a32____awrite_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 32)) : true))))))))]);
    trace_a32____awrite_subu256 <-
    (trace_a32____awrite_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((32 <= lEN)) {
        trace_a32____awrite_subu256 <-
        (trace_a32____awrite_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a32____awrite_subu256 <-
        (trace_a32____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a32____awrite_subu256 <-
        (trace_a32____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 32)))]);
        b_buf <-
        (BArray32.set256d b_buf (offset + dELTA)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        buf <- (BArray32.set256d buf (offset + dELTA) w);
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        t128 <- (truncateu128 w);
        if ((16 <= lEN)) {
          trace_a32____awrite_subu256 <-
          (trace_a32____awrite_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____awrite_subu256 <-
          (trace_a32____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____awrite_subu256 <-
          (trace_a32____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 32)))]);
          b_buf <-
          (BArray32.set128d b_buf (offset + dELTA)
          (W128.of_int 340282366920938463463374607431768211455));
          buf <- (BArray32.set128d buf (offset + dELTA) t128);
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          t128 <- (VEXTRACTI128 w (W8.of_int 1));
        } else {
          
        }
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t128;
        (result_1, b_result, result_0, result, tmp__trace) <@ a32____awrite_subu128 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a32____awrite_subu256 <-
        (trace_a32____awrite_subu256 ++ tmp__trace);
        trace_a32____awrite_subu256 <-
        (trace_a32____awrite_subu256 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                       param_0 : 16)))) /\
         (result =
         (param_0 -
         ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                      param_0 : 16))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a32____awrite_subu256);
  }
  proc a32____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                   buf:BArray32.t, b_buf:BArray32.t,
                                   offset:int, lEN:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray32.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray32.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray32.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray32.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray32.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray32.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray32.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray32.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray32.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var b_param_1:BArray32.t;
    var b_param_2:BArray32.t;
    var b_param_3:BArray32.t;
    var b_param_4:BArray32.t;
    var b_param_5:BArray32.t;
    var b_param_6:BArray32.t;
    var b_param_7:BArray32.t;
    var b_param_8:BArray32.t;
    var trace_a32____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a32____addstate_array_avx2 <- [];
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 32)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a32____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++ tmp__trace);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a32____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++ tmp__trace);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a32____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a32____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a32____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a32____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a32____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a32____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a32____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a32____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++ tmp__trace);
      trace_a32____addstate_array_avx2 <-
      (trace_a32____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a32____addstate_array_avx2 <-
    (trace_a32____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a32____addstate_array_avx2);
  }
  proc a32____pstate_array_avx2 (pst:BArray200.t, b_pst:BArray200.t, aT:int,
                                 buf:BArray32.t, b_buf:BArray32.t,
                                 offset:int, lEN:int, tRAILB:int) : BArray200.t *
                                                                    BArray200.t *
                                                                    int *
                                                                    int *
                                                                    trace = {
    var aLL:int;
    var dELTA:int;
    var lO:int;
    var t64:W64.t;
    var t256:W256.t;
    var t128:W128.t;
    var at:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray32.t;
    var result_7:W64.t;
    var result_8:int;
    var result_9:int;
    var result_10:int;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var b_param_1:BArray32.t;
    var trace_a32____pstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    trace_a32____pstate_array_avx2 <- [];
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < 200)) /\
        (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
       ((offset + lEN) <= 32)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_pst 0 200)))))]);
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    aLL <- (aT + lEN);
    lO <- (aT %% 8);
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert, ((0 <= (aT %/ 8)) /\ ((aT %/ 8) <= 18446744073709551615)))]);
    at <- (aT %/ 8);
    if ((0 < lO)) {
      if (((lO + lEN) < 8)) {
        if ((tRAILB <> 0)) {
          aLL <- (aLL + 1);
        } else {
          
        }
        b_param_0 <- b_buf;
        param_8 <- buf;
        param_7 <- offset;
        param_6 <- dELTA;
        param_5 <- lEN;
        param_4 <- tRAILB;
        (result_6, result_5, result_4, result_3, tmp__trace) <@ a32____aread_subu64 (
        param_8, b_param_0, param_7, param_6, param_5, param_4);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++ tmp__trace);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert,
         (((result_6 =
           (param_6 +
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8)))) /\
          (result_5 =
          (param_5 -
          ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                     param_5 : 8))))) /\
         (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
        dELTA <- result_6;
        tRAILB <- result_4;
        t64 <- result_3;
        t64 <- (t64 `<<` (W8.of_int (8 * lO)));
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        pst <- (BArray200.set64 pst at ((BArray200.get64 pst at) `^` t64));
        aT <- 0;
        lEN <- 0;
      } else {
        if ((8 <= lEN)) {
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          t64 <- (BArray32.get64d buf (offset + dELTA));
          dELTA <- (dELTA + (8 - lO));
        } else {
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- (8 - lO);
          param_9 <- 0;
          (result_10, result_9, result_8, result_7, tmp__trace) <@ a32____aread_subu64 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++ tmp__trace);
          trace_a32____pstate_array_avx2 <-
          (trace_a32____pstate_array_avx2 ++
          [(Assert,
           (((result_10 =
             (param_11 +
             ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                          param_10 : 8)))) /\
            (result_9 =
            (param_10 -
            ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                         param_10 : 8))))) /\
           (result_8 = ((8 <= param_10) ? param_9 : 0))))]);
          dELTA <- result_10;
          t64 <- result_7;
        }
        lEN <- (lEN - (8 - lO));
        aT <- (aT + (8 - lO));
        t64 <- (t64 `<<` (W8.of_int (8 * lO)));
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at * 8)) /\ (((at * 8) + 8) <= 200)))]);
        pst <- (BArray200.set64 pst at ((BArray200.get64 pst at) `^` t64));
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
        at <- (at + 1);
      }
    } else {
      
    }
    if ((32 <= lEN)) {
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      dELTA <- 0;
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert,
       ((0 <= ((aT %/ 8) + (4 * (lEN %/ 32)))) /\
       (((aT %/ 8) + (4 * (lEN %/ 32))) <= 18446744073709551615)))]);
      while ((at < ((aT %/ 8) + (4 * (lEN %/ 32))))) {
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= offset) /\ ((offset + 32) <= 32)))]);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, (is_init b_buf offset 32))]);
        t256 <- (BArray32.get256d buf offset);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert,
         ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
        offset <- (offset + 32);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 32) <= 200)))]);
        pst <- (BArray200.set256d pst (8 * at) t256);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert, ((0 <= (at + 4)) /\ ((at + 4) <= 18446744073709551615)))]);
        at <- (at + 4);
        trace_a32____pstate_array_avx2 <-
        (trace_a32____pstate_array_avx2 ++
        [(Assert,
         ((0 <= ((aT %/ 8) + (4 * (lEN %/ 32)))) /\
         (((aT %/ 8) + (4 * (lEN %/ 32))) <= 18446744073709551615)))]);
      }
      lEN <- (lEN %% 32);
    } else {
      
    }
    if ((16 <= lEN)) {
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 32)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, (is_init b_buf (offset + dELTA) 16))]);
      t128 <- (BArray32.get128d buf (offset + dELTA));
      dELTA <- (dELTA + 16);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 16) <= 200)))]);
      pst <- (BArray200.set128d pst (8 * at) t128);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (at + 2)) /\ ((at + 2) <= 18446744073709551615)))]);
      at <- (at + 2);
      lEN <- (lEN - 16);
    } else {
      
    }
    if ((8 <= lEN)) {
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, (is_init b_buf (offset + dELTA) 8))]);
      t64 <- (BArray32.get64d buf (offset + dELTA));
      dELTA <- (dELTA + 8);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ ((8 * at) <= 18446744073709551615)))]);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (8 * at)) /\ (((8 * at) + 8) <= 200)))]);
      pst <- (BArray200.set64d pst (8 * at) t64);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= (at + 1)) /\ ((at + 1) <= 18446744073709551615)))]);
      lEN <- (lEN - 8);
    } else {
      
    }
    lO <- ((aT + lEN) %% 8);
    if (((0 < lO) \/ (tRAILB <> 0))) {
      if ((tRAILB <> 0)) {
        aLL <- (aLL + 1);
      } else {
        
      }
      b_param <- b_buf;
      param_3 <- buf;
      param_2 <- offset;
      param_1 <- dELTA;
      param_0 <- lO;
      param <- tRAILB;
      (result_2, result_1, result_0, result, tmp__trace) <@ a32____aread_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++ tmp__trace);
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert,
       (((result_2 =
         (param_1 +
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8)))) /\
        (result_1 =
        (param_0 -
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))) /\
       (result_0 = ((8 <= param_0) ? param : 0))))]);
      dELTA <- result_2;
      t64 <- result;
      trace_a32____pstate_array_avx2 <-
      (trace_a32____pstate_array_avx2 ++
      [(Assert, ((0 <= ((aLL %/ 8) * 8)) /\ ((((aLL %/ 8) * 8) + 8) <= 200)))]);
      pst <- (BArray200.set64 pst (aLL %/ 8) t64);
    } else {
      
    }
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a32____pstate_array_avx2 <-
    (trace_a32____pstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_pst <- (BArray200.init_arr (W8.of_int 255) 200);
    return (pst, b_pst, aLL, offset, trace_a32____pstate_array_avx2);
  }
  proc a32____pabsorb_array_avx2 (pst:BArray200.t, b_pst:BArray200.t, aT:int,
                                  st:BArray224.t, b_st:BArray224.t,
                                  buf:BArray32.t, b_buf:BArray32.t,
                                  offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray200.t * BArray200.t * int * BArray224.t * BArray224.t * int * trace = {
    var aLL:int;
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:BArray200.t;
    var param_2:BArray224.t;
    var result_0:BArray224.t;
    var param_3:BArray200.t;
    var param_4:BArray224.t;
    var result_1:BArray224.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var param_9:int;
    var param_10:BArray200.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray200.t;
    var param_11:int;
    var param_12:BArray224.t;
    var result_5:BArray224.t;
    var param_13:int;
    var param_14:int;
    var param_15:int;
    var param_16:BArray32.t;
    var param_17:BArray224.t;
    var result_6:int;
    var result_7:BArray224.t;
    var param_18:int;
    var param_19:int;
    var param_20:int;
    var param_21:BArray32.t;
    var param_22:int;
    var param_23:BArray200.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray200.t;
    var param_24:BArray224.t;
    var result_11:BArray224.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray32.t;
    var param_29:BArray224.t;
    var result_12:int;
    var result_13:BArray224.t;
    var param_30:BArray224.t;
    var result_14:BArray224.t;
    var param_31:BArray200.t;
    var param_32:BArray224.t;
    var result_15:BArray224.t;
    var param_33:int;
    var param_34:int;
    var param_35:int;
    var param_36:BArray32.t;
    var param_37:int;
    var param_38:BArray200.t;
    var result_16:int;
    var result_17:int;
    var result_18:BArray200.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray200.t;
    var b_param:BArray32.t;
    var b_result_3:BArray224.t;
    var b_result_4:BArray224.t;
    var b_param_0:BArray32.t;
    var b_result_5:BArray200.t;
    var b_param_1:BArray32.t;
    var b_result_6:BArray224.t;
    var b_result_7:BArray224.t;
    var b_param_2:BArray32.t;
    var b_result_8:BArray224.t;
    var b_result_9:BArray224.t;
    var b_result_10:BArray200.t;
    var b_param_3:BArray32.t;
    var trace_a32____pabsorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_result_10 <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_8 <- witness;
    param_10 <- witness;
    param_12 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_21 <- witness;
    param_23 <- witness;
    param_24 <- witness;
    param_28 <- witness;
    param_29 <- witness;
    param_30 <- witness;
    param_31 <- witness;
    param_32 <- witness;
    param_36 <- witness;
    param_38 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_13 <- witness;
    result_14 <- witness;
    result_15 <- witness;
    result_18 <- witness;
    trace_a32____pabsorb_array_avx2 <- [];
    trace_a32____pabsorb_array_avx2 <-
    (trace_a32____pabsorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < rATE8)) /\
           ((offset + lEN) <= 32)) /\
          (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (0 < rATE8)) /\
        (rATE8 < 200)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_pst 0 200)) /\
     (is_init b_st 0 224)))))]);
    trace_a32____pabsorb_array_avx2 <-
    (trace_a32____pabsorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a32____pabsorb_array_avx2 <-
    (trace_a32____pabsorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    if (((aT + lEN) < rATE8)) {
      param_10 <- pst;
      param_9 <- aT;
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- lEN;
      param_5 <- tRAILB;
      (result_4, b_result_2, result_3, result_2, tmp__trace) <@ a32____pstate_array_avx2 (
      param_10, (BArray200.init_arr (W8.of_int 255) 200), param_9, param_8,
      b_param, param_7, param_6, param_5);
      trace_a32____pabsorb_array_avx2 <-
      (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
      trace_a32____pabsorb_array_avx2 <-
      (trace_a32____pabsorb_array_avx2 ++
      [(Assert,
       (((0 <= param_6) /\ (param_6 <= 18446744073709551615)) /\
       (((0 <= (param_7 + param_6)) /\
        ((param_7 + param_6) <= 18446744073709551615)) /\
       (((is_init b_result_2 0 200) /\
        (result_3 = ((param_9 + param_6) + ((param_5 <> 0) ? 1 : 0)))) /\
       (result_2 = (param_7 + param_6))))))]);
      trace_a32____pabsorb_array_avx2 <-
      (trace_a32____pabsorb_array_avx2 ++
      [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
      pst <- result_4;
      aT <- result_3;
      offset <- result_2;
      if ((tRAILB <> 0)) {
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert,
         ((0 <= ((aT %/ 8) + 1)) /\
         (((aT %/ 8) + 1) <= 18446744073709551615)))]);
        i <- ((aT %/ 8) + 1);
        if ((aT <= 40)) {
          while ((i < 5)) {
            trace_a32____pabsorb_array_avx2 <-
            (trace_a32____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 200)))]);
            pst <- (BArray200.set64 pst i (W64.of_int 0));
            trace_a32____pabsorb_array_avx2 <-
            (trace_a32____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
            i <- (i + 1);
          }
          param_2 <- st;
          param_1 <- pst;
          (result_0, b_result_0, tmp__trace) <@ __addpst01_avx2 (param_2,
          (BArray224.init_arr (W8.of_int 255) 224), param_1,
          (BArray200.init_arr (W8.of_int 255) 200));
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result_0 0 224))]);
          st <- result_0;
          param_0 <- st;
          param <- rATE8;
          (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
          (BArray224.init_arr (W8.of_int 255) 224), param);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result 0 224))]);
          st <- result;
        } else {
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert,
           ((0 <= (rATE8 %/ 8)) /\ ((rATE8 %/ 8) <= 18446744073709551615)))]);
          while ((i < (rATE8 %/ 8))) {
            trace_a32____pabsorb_array_avx2 <-
            (trace_a32____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 200)))]);
            pst <- (BArray200.set64 pst i (W64.of_int 0));
            trace_a32____pabsorb_array_avx2 <-
            (trace_a32____pabsorb_array_avx2 ++
            [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
            i <- (i + 1);
            trace_a32____pabsorb_array_avx2 <-
            (trace_a32____pabsorb_array_avx2 ++
            [(Assert,
             ((0 <= (rATE8 %/ 8)) /\ ((rATE8 %/ 8) <= 18446744073709551615)))]);
          }
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, ((0 <= (rATE8 - 1)) /\ (((rATE8 - 1) + 1) <= 200)))]);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, ((0 <= (rATE8 - 1)) /\ (((rATE8 - 1) + 1) <= 200)))]);
          pst <-
          (BArray200.set8 pst (rATE8 - 1)
          ((BArray200.get8 pst (rATE8 - 1)) `^` (W8.of_int 128)));
          param_4 <- st;
          param_3 <- pst;
          (result_1, b_result_1, tmp__trace) <@ _addpstate_avx2 (param_4,
          (BArray224.init_arr (W8.of_int 255) 224), param_3,
          (BArray200.init_arr (W8.of_int 255) 200));
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, (is_init b_result_1 0 224))]);
          st <- result_1;
        }
      } else {
        
      }
    } else {
      if ((aT <> 0)) {
        param_38 <- pst;
        param_37 <- aT;
        b_param_3 <- b_buf;
        param_36 <- buf;
        param_35 <- offset;
        param_34 <- (rATE8 - aT);
        param_33 <- 0;
        (result_18, b_result_10, result_17, result_16, tmp__trace) <@ 
        a32____pstate_array_avx2 (param_38,
        (BArray200.init_arr (W8.of_int 255) 200), param_37, param_36,
        b_param_3, param_35, param_34, param_33);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_34) /\ (param_34 <= 18446744073709551615)) /\
         (((0 <= (param_35 + param_34)) /\
          ((param_35 + param_34) <= 18446744073709551615)) /\
         (((is_init b_result_10 0 200) /\
          (result_17 = ((param_37 + param_34) + ((param_33 <> 0) ? 1 : 0)))) /\
         (result_16 = (param_35 + param_34))))))]);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_16) /\ (result_16 <= 18446744073709551615)))]);
        pst <- result_18;
        offset <- result_16;
        lEN <- (lEN - (rATE8 - aT));
        param_32 <- st;
        param_31 <- pst;
        (result_15, b_result_9, tmp__trace) <@ _addpstate_avx2 (param_32,
        (BArray224.init_arr (W8.of_int 255) 224), param_31,
        (BArray200.init_arr (W8.of_int 255) 200));
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_9 0 224))]);
        st <- result_15;
        param_30 <- st;
        (result_14, b_result_8, tmp__trace) <@ _keccakf1600_avx2 (param_30,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_8 0 224))]);
        st <- result_14;
        aT <- 0;
      } else {
        
      }
      iTERS <- (lEN %/ rATE8);
      i <- 0;
      trace_a32____pabsorb_array_avx2 <-
      (trace_a32____pabsorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_29 <- st;
        b_param_2 <- b_buf;
        param_28 <- buf;
        param_27 <- offset;
        param_26 <- rATE8;
        param_25 <- 0;
        (result_13, b_result_7, result_12, tmp__trace) <@ a32____addstate_array_avx2 (
        param_29, (BArray224.init_arr (W8.of_int 255) 224), param_28,
        b_param_2, param_27, param_26, param_25);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_26) /\ (param_26 <= 18446744073709551615)) /\
         (((0 <= (param_27 + param_26)) /\
          ((param_27 + param_26) <= 18446744073709551615)) /\
         ((is_init b_result_7 0 224) /\ (result_12 = (param_27 + param_26))))))]);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_12) /\ (result_12 <= 18446744073709551615)))]);
        st <- result_13;
        offset <- result_12;
        param_24 <- st;
        (result_11, b_result_6, tmp__trace) <@ _keccakf1600_avx2 (param_24,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_6 0 224))]);
        st <- result_11;
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
      lEN <- (aLL %% rATE8);
      if ((tRAILB <> 0)) {
        param_17 <- st;
        b_param_0 <- b_buf;
        param_16 <- buf;
        param_15 <- offset;
        param_14 <- lEN;
        param_13 <- tRAILB;
        (result_7, b_result_4, result_6, tmp__trace) <@ a32____addstate_array_avx2 (
        param_17, (BArray224.init_arr (W8.of_int 255) 224), param_16,
        b_param_0, param_15, param_14, param_13);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert,
         (((0 <= param_14) /\ (param_14 <= 18446744073709551615)) /\
         (((0 <= (param_15 + param_14)) /\
          ((param_15 + param_14) <= 18446744073709551615)) /\
         ((is_init b_result_4 0 224) /\ (result_6 = (param_15 + param_14))))))]);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, ((0 <= result_6) /\ (result_6 <= 18446744073709551615)))]);
        st <- result_7;
        offset <- result_6;
        param_12 <- st;
        param_11 <- rATE8;
        (result_5, b_result_3, tmp__trace) <@ __addratebit_avx2 (param_12,
        (BArray224.init_arr (W8.of_int 255) 224), param_11);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
        trace_a32____pabsorb_array_avx2 <-
        (trace_a32____pabsorb_array_avx2 ++
        [(Assert, (is_init b_result_3 0 224))]);
        st <- result_5;
      } else {
        if ((lEN <> 0)) {
          param_23 <- pst;
          param_22 <- 0;
          b_param_1 <- b_buf;
          param_21 <- buf;
          param_20 <- offset;
          param_19 <- lEN;
          param_18 <- tRAILB;
          (result_10, b_result_5, result_9, result_8, tmp__trace) <@ 
          a32____pstate_array_avx2 (param_23,
          (BArray200.init_arr (W8.of_int 255) 200), param_22, param_21,
          b_param_1, param_20, param_19, param_18);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++ tmp__trace);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert,
           (((0 <= param_19) /\ (param_19 <= 18446744073709551615)) /\
           (((0 <= (param_20 + param_19)) /\
            ((param_20 + param_19) <= 18446744073709551615)) /\
           (((is_init b_result_5 0 200) /\
            (result_9 = ((param_22 + param_19) + ((param_18 <> 0) ? 1 : 0)))) /\
           (result_8 = (param_20 + param_19))))))]);
          trace_a32____pabsorb_array_avx2 <-
          (trace_a32____pabsorb_array_avx2 ++
          [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
          pst <- result_10;
          aT <- result_9;
          offset <- result_8;
        } else {
          
        }
      }
    }
    b_pst <- (BArray200.init_arr (W8.of_int 255) 200);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (pst, b_pst, aT, st, b_st, offset,
           trace_a32____pabsorb_array_avx2);
  }
  proc a32____dumpstate_array_avx2 (buf:BArray32.t, b_buf:BArray32.t,
                                    offset:int, lEN:int, st:BArray224.t,
                                    b_st:BArray224.t) : BArray32.t *
                                                        BArray32.t * int *
                                                        trace = {
    var dELTA:int;
    var t128_0:W128.t;
    var t128_1:W128.t;
    var t:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var t256_4:W256.t;
    var param:W256.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:int;
    var result_0:int;
    var result_1:BArray32.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray32.t;
    var param_9:W256.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray32.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray32.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray32.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray32.t;
    var param_19:W256.t;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray32.t;
    var result_11:int;
    var result_12:int;
    var result_13:BArray32.t;
    var param_24:W64.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray32.t;
    var result_14:int;
    var result_15:int;
    var result_16:BArray32.t;
    var param_29:W256.t;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray32.t;
    var result_17:int;
    var result_18:int;
    var result_19:BArray32.t;
    var param_34:W64.t;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray32.t;
    var result_20:int;
    var result_21:int;
    var result_22:BArray32.t;
    var param_39:W256.t;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray32.t;
    var result_23:int;
    var result_24:int;
    var result_25:BArray32.t;
    var param_44:W256.t;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray32.t;
    var result_26:int;
    var result_27:int;
    var result_28:BArray32.t;
    var param_49:W256.t;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray32.t;
    var result_29:int;
    var result_30:int;
    var result_31:BArray32.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var b_result_0:BArray32.t;
    var b_param_0:BArray32.t;
    var b_result_1:BArray32.t;
    var b_param_1:BArray32.t;
    var b_result_2:BArray32.t;
    var b_param_2:BArray32.t;
    var b_result_3:BArray32.t;
    var b_param_3:BArray32.t;
    var b_result_4:BArray32.t;
    var b_param_4:BArray32.t;
    var b_result_5:BArray32.t;
    var b_param_5:BArray32.t;
    var b_result_6:BArray32.t;
    var b_param_6:BArray32.t;
    var b_result_7:BArray32.t;
    var b_param_7:BArray32.t;
    var b_result_8:BArray32.t;
    var b_param_8:BArray32.t;
    var b_result_9:BArray32.t;
    var b_param_9:BArray32.t;
    var trace_a32____dumpstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_13 <- witness;
    result_16 <- witness;
    result_19 <- witness;
    result_22 <- witness;
    result_25 <- witness;
    result_28 <- witness;
    result_31 <- witness;
    trace_a32____dumpstate_array_avx2 <- [];
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 32)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    if ((8 <= lEN)) {
      b_param_8 <- b_buf;
      param_48 <- buf;
      param_47 <- offset;
      param_46 <- dELTA;
      param_45 <- 8;
      param_44 <- (BArray224.get256 st 0);
      (result_28, b_result_8, result_27, result_26, tmp__trace) <@ a32____awrite_subu256 (
      param_48, b_param_8, param_47, param_46, param_45, param_44);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++
      [(Assert,
       ((result_27 =
        (param_46 +
        ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                       param_45 : 32)))) /\
       (result_26 =
       (param_45 -
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32))))))]);
      b_buf <- b_result_8;
      buf <- result_28;
      dELTA <- result_27;
      lEN <- (lEN - 8);
    } else {
      b_param_9 <- b_buf;
      param_53 <- buf;
      param_52 <- offset;
      param_51 <- dELTA;
      param_50 <- lEN;
      param_49 <- (BArray224.get256 st 0);
      (result_31, b_result_9, result_30, result_29, tmp__trace) <@ a32____awrite_subu256 (
      param_53, b_param_9, param_52, param_51, param_50, param_49);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++
      [(Assert,
       ((result_30 =
        (param_51 +
        ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                       param_50 : 32)))) /\
       (result_29 =
       (param_50 -
       ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                      param_50 : 32))))))]);
      b_buf <- b_result_9;
      buf <- result_31;
      dELTA <- result_30;
      lEN <- result_29;
    }
    b_param_7 <- b_buf;
    param_43 <- buf;
    param_42 <- offset;
    param_41 <- dELTA;
    param_40 <- lEN;
    param_39 <- (BArray224.get256 st 1);
    (result_25, b_result_7, result_24, result_23, tmp__trace) <@ a32____awrite_subu256 (
    param_43, b_param_7, param_42, param_41, param_40, param_39);
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++
    [(Assert,
     ((result_24 =
      (param_41 +
      ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                     param_40 : 32)))) /\
     (result_23 =
     (param_40 -
     ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                    param_40 : 32))))))]);
    b_buf <- b_result_7;
    buf <- result_25;
    dELTA <- result_24;
    lEN <- result_23;
    if ((0 < lEN)) {
      t128_0 <- (truncateu128 (BArray224.get256 st 2));
      t128_1 <- (VEXTRACTI128 (BArray224.get256 st 2) (W8.of_int 1));
      t <- (truncateu64 t128_1);
      b_param_6 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- t;
      (result_22, b_result_6, result_21, result_20, tmp__trace) <@ a32____awrite_subu64 (
      param_38, b_param_6, param_37, param_36, param_35, param_34);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
      trace_a32____dumpstate_array_avx2 <-
      (trace_a32____dumpstate_array_avx2 ++
      [(Assert,
       ((result_21 =
        (param_36 +
        ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                     param_35 : 8)))) /\
       (result_20 =
       (param_35 -
       ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                    param_35 : 8))))))]);
      b_buf <- b_result_6;
      buf <- result_22;
      dELTA <- result_21;
      lEN <- result_20;
      t128_1 <- (VPUNPCKH_2u64 t128_1 t128_1);
      if ((0 < lEN)) {
        t256_0 <-
        (VPBLEND_8u32 (BArray224.get256 st 3) (BArray224.get256 st 4)
        (W8.of_int 240));
        t256_1 <-
        (VPBLEND_8u32 (BArray224.get256 st 4) (BArray224.get256 st 3)
        (W8.of_int 240));
        t256_2 <-
        (VPBLEND_8u32 (BArray224.get256 st 5) (BArray224.get256 st 6)
        (W8.of_int 240));
        t256_3 <-
        (VPBLEND_8u32 (BArray224.get256 st 6) (BArray224.get256 st 5)
        (W8.of_int 240));
        t256_4 <- (VPBLEND_8u32 t256_0 t256_3 (W8.of_int 195));
        b_param_5 <- b_buf;
        param_33 <- buf;
        param_32 <- offset;
        param_31 <- dELTA;
        param_30 <- lEN;
        param_29 <- t256_4;
        (result_19, b_result_5, result_18, result_17, tmp__trace) <@ 
        a32____awrite_subu256 (param_33, b_param_5, param_32, param_31,
        param_30, param_29);
        trace_a32____dumpstate_array_avx2 <-
        (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
        trace_a32____dumpstate_array_avx2 <-
        (trace_a32____dumpstate_array_avx2 ++
        [(Assert,
         ((result_18 =
          (param_31 +
          ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                         param_30 : 32)))) /\
         (result_17 =
         (param_30 -
         ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                        param_30 : 32))))))]);
        b_buf <- b_result_5;
        buf <- result_19;
        dELTA <- result_18;
        lEN <- result_17;
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_4 <- b_buf;
          param_28 <- buf;
          param_27 <- offset;
          param_26 <- dELTA;
          param_25 <- lEN;
          param_24 <- t;
          (result_16, b_result_4, result_15, result_14, tmp__trace) <@ 
          a32____awrite_subu64 (param_28, b_param_4, param_27, param_26,
          param_25, param_24);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_15 =
            (param_26 +
            ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                         param_25 : 8)))) /\
           (result_14 =
           (param_25 -
           ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                        param_25 : 8))))))]);
          b_buf <- b_result_4;
          buf <- result_16;
          dELTA <- result_15;
          lEN <- result_14;
          t128_0 <- (VPUNPCKH_2u64 t128_0 t128_0);
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_3 t256_1 (W8.of_int 195));
          b_param_3 <- b_buf;
          param_23 <- buf;
          param_22 <- offset;
          param_21 <- dELTA;
          param_20 <- lEN;
          param_19 <- t256_4;
          (result_13, b_result_3, result_12, result_11, tmp__trace) <@ 
          a32____awrite_subu256 (param_23, b_param_3, param_22, param_21,
          param_20, param_19);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_12 =
            (param_21 +
            ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                           param_20 : 32)))) /\
           (result_11 =
           (param_20 -
           ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                          param_20 : 32))))))]);
          b_buf <- b_result_3;
          buf <- result_13;
          dELTA <- result_12;
          lEN <- result_11;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_1);
          b_param_2 <- b_buf;
          param_18 <- buf;
          param_17 <- offset;
          param_16 <- dELTA;
          param_15 <- lEN;
          param_14 <- t;
          (result_10, b_result_2, result_9, result_8, tmp__trace) <@ 
          a32____awrite_subu64 (param_18, b_param_2, param_17, param_16,
          param_15, param_14);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_9 =
            (param_16 +
            ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                         param_15 : 8)))) /\
           (result_8 =
           (param_15 -
           ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                        param_15 : 8))))))]);
          b_buf <- b_result_2;
          buf <- result_10;
          dELTA <- result_9;
          lEN <- result_8;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_2 t256_0 (W8.of_int 195));
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- lEN;
          param_9 <- t256_4;
          (result_7, b_result_1, result_6, result_5, tmp__trace) <@ a32____awrite_subu256 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_6 =
            (param_11 +
            ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                           param_10 : 32)))) /\
           (result_5 =
           (param_10 -
           ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                          param_10 : 32))))))]);
          b_buf <- b_result_1;
          buf <- result_7;
          dELTA <- result_6;
          lEN <- result_5;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- t;
          (result_4, b_result_0, result_3, result_2, tmp__trace) <@ a32____awrite_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_3 =
            (param_6 +
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8)))) /\
           (result_2 =
           (param_5 -
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8))))))]);
          b_buf <- b_result_0;
          buf <- result_4;
          dELTA <- result_3;
          lEN <- result_2;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_1 t256_2 (W8.of_int 195));
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- t256_4;
          (result_1, b_result, result_0, result, tmp__trace) <@ a32____awrite_subu256 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++ tmp__trace);
          trace_a32____dumpstate_array_avx2 <-
          (trace_a32____dumpstate_array_avx2 ++
          [(Assert,
           ((result_0 =
            (param_1 +
            ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                         param_0 : 32)))) /\
           (result =
           (param_0 -
           ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                        param_0 : 32))))))]);
          b_buf <- b_result;
          buf <- result_1;
          dELTA <- result_0;
        } else {
          
        }
      } else {
        
      }
    } else {
      
    }
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a32____dumpstate_array_avx2 <-
    (trace_a32____dumpstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    return (buf, b_buf, offset, trace_a32____dumpstate_array_avx2);
  }
  proc a32____squeeze_array_avx2 (buf:BArray32.t, b_buf:BArray32.t,
                                  offset:int, lEN:int, st:BArray224.t,
                                  b_st:BArray224.t, rATE8:int) : BArray32.t *
                                                                 BArray32.t *
                                                                 BArray224.t *
                                                                 BArray224.t *
                                                                 trace = {
    var iTERS:int;
    var lO:int;
    var i:int;
    var param:BArray224.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray32.t;
    var result:int;
    var result_0:BArray32.t;
    var param_3:BArray224.t;
    var result_1:BArray224.t;
    var param_4:BArray224.t;
    var param_5:int;
    var param_6:int;
    var param_7:BArray32.t;
    var result_2:int;
    var result_3:BArray32.t;
    var param_8:BArray224.t;
    var result_4:BArray224.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray32.t;
    var b_param_0:BArray32.t;
    var b_result_2:BArray224.t;
    var trace_a32____squeeze_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    trace_a32____squeeze_array_avx2 <- [];
    trace_a32____squeeze_array_avx2 <-
    (trace_a32____squeeze_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ (0 < rATE8)) /\ (rATE8 < 200)) /\
      ((offset + lEN) <= 32)) /\
     (is_init b_st 0 224)))))]);
    trace_a32____squeeze_array_avx2 <-
    (trace_a32____squeeze_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    lO <- (lEN %% rATE8);
    if ((0 < lEN)) {
      if ((0 < iTERS)) {
        i <- 0;
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        while ((i < iTERS)) {
          param_8 <- st;
          (result_4, b_result_2, tmp__trace) <@ _keccakf1600_avx2 (param_8,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++ tmp__trace);
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++
          [(Assert, (is_init b_result_2 0 224))]);
          st <- result_4;
          b_param_0 <- b_buf;
          param_7 <- buf;
          param_6 <- offset;
          param_5 <- rATE8;
          param_4 <- st;
          (result_3, b_result_1, result_2, tmp__trace) <@ a32____dumpstate_array_avx2 (
          param_7, b_param_0, param_6, param_5, param_4,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++ tmp__trace);
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++
          [(Assert,
           (((0 <= param_5) /\ (param_5 <= 18446744073709551615)) /\
           (((0 <= (param_6 + param_5)) /\
            ((param_6 + param_5) <= 18446744073709551615)) /\
           (result_2 = (param_6 + param_5)))))]);
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++
          [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
          b_buf <- b_result_1;
          buf <- result_3;
          offset <- result_2;
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++
          [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
          i <- (i + 1);
          trace_a32____squeeze_array_avx2 <-
          (trace_a32____squeeze_array_avx2 ++
          [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        }
      } else {
        
      }
      if ((0 < lO)) {
        param_3 <- st;
        (result_1, b_result_0, tmp__trace) <@ _keccakf1600_avx2 (param_3,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++ tmp__trace);
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++
        [(Assert, (is_init b_result_0 0 224))]);
        st <- result_1;
        b_param <- b_buf;
        param_2 <- buf;
        param_1 <- offset;
        param_0 <- lO;
        param <- st;
        (result_0, b_result, result, tmp__trace) <@ a32____dumpstate_array_avx2 (
        param_2, b_param, param_1, param_0, param,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++ tmp__trace);
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++
        [(Assert,
         (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
         (((0 <= (param_1 + param_0)) /\
          ((param_1 + param_0) <= 18446744073709551615)) /\
         (result = (param_1 + param_0)))))]);
        trace_a32____squeeze_array_avx2 <-
        (trace_a32____squeeze_array_avx2 ++
        [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
        b_buf <- b_result;
        buf <- result_0;
      } else {
        
      }
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (buf, b_buf, st, b_st, trace_a32____squeeze_array_avx2);
  }
  proc a32____addstate_bcast_array_avx2x4 (st:BArray800.t, b_st:BArray800.t,
                                           aT:int, buf:BArray32.t,
                                           b_buf:BArray32.t, offset:int,
                                           lEN:int, tRAILB:int) : BArray800.t *
                                                                  BArray800.t *
                                                                  int * int *
                                                                  trace = {
    var aLL:int;
    var lO:int;
    var dELTA:int;
    var t256:W256.t;
    var at:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:W256.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray32.t;
    var result_3:W256.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray32.t;
    var result_7:W256.t;
    var result_8:int;
    var result_9:int;
    var result_10:int;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var b_param_1:BArray32.t;
    var trace_a32____addstate_bcast_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    trace_a32____addstate_bcast_array_avx2x4 <- [];
    trace_a32____addstate_bcast_array_avx2x4 <-
    (trace_a32____addstate_bcast_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < 200)) /\
        ((offset + lEN) <= 32)) /\
       (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a32____addstate_bcast_array_avx2x4 <-
    (trace_a32____addstate_bcast_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a32____addstate_bcast_array_avx2x4 <-
    (trace_a32____addstate_bcast_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    lO <- (aT %% 8);
    trace_a32____addstate_bcast_array_avx2x4 <-
    (trace_a32____addstate_bcast_array_avx2x4 ++
    [(Assert,
     ((0 <= (32 * (aT %/ 8))) /\ ((32 * (aT %/ 8)) <= 18446744073709551615)))]);
    at <- (32 * (aT %/ 8));
    dELTA <- 0;
    if ((0 < lO)) {
      if (((lO + lEN) < 8)) {
        if ((tRAILB <> 0)) {
          aLL <- (aLL + 1);
        } else {
          
        }
        b_param_0 <- b_buf;
        param_8 <- buf;
        param_7 <- offset;
        param_6 <- dELTA;
        param_5 <- lEN;
        param_4 <- tRAILB;
        (result_6, result_5, result_4, result_3, tmp__trace) <@ a32____aread_bcast_4subu64 (
        param_8, b_param_0, param_7, param_6, param_5, param_4);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert,
         (((result_6 =
           (param_6 +
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8)))) /\
          (result_5 =
          (param_5 -
          ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                     param_5 : 8))))) /\
         (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
        dELTA <- result_6;
        tRAILB <- result_4;
        t256 <- result_3;
        t256 <- (VPSLL_4u64 t256 (W128.of_int (8 * lO)));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        t256 <- (t256 `^` (BArray800.get256d st at));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        st <- (BArray800.set256d st at t256);
        aT <- 0;
        lEN <- 0;
      } else {
        if ((8 <= lEN)) {
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 32)))]);
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          t256 <- (VPBROADCAST_4u64 (BArray32.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + (8 - lO));
        } else {
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- (8 - lO);
          param_9 <- 0;
          (result_10, result_9, result_8, result_7, tmp__trace) <@ a32____aread_bcast_4subu64 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++ tmp__trace);
          trace_a32____addstate_bcast_array_avx2x4 <-
          (trace_a32____addstate_bcast_array_avx2x4 ++
          [(Assert,
           (((result_10 =
             (param_11 +
             ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                          param_10 : 8)))) /\
            (result_9 =
            (param_10 -
            ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                         param_10 : 8))))) /\
           (result_8 = ((8 <= param_10) ? param_9 : 0))))]);
          dELTA <- result_10;
          t256 <- result_7;
        }
        lEN <- (lEN - (8 - lO));
        aT <- (aT + (8 - lO));
        t256 <- (VPSLL_4u64 t256 (W128.of_int (8 * lO)));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        t256 <- (t256 `^` (BArray800.get256d st at));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        st <- (BArray800.set256d st at t256);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= (at + 32)) /\ ((at + 32) <= 18446744073709551615)))]);
        at <- (at + 32);
      }
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      dELTA <- 0;
    } else {
      
    }
    if ((8 <= lEN)) {
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert,
       ((0 <= ((32 * (aT %/ 8)) + (32 * (lEN %/ 8)))) /\
       (((32 * (aT %/ 8)) + (32 * (lEN %/ 8))) <= 18446744073709551615)))]);
      while ((at < ((32 * (aT %/ 8)) + (32 * (lEN %/ 8))))) {
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= offset) /\ ((offset + 8) <= 32)))]);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, (is_init b_buf offset 8))]);
        t256 <- (VPBROADCAST_4u64 (BArray32.get64d buf offset));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert,
         ((0 <= (offset + 8)) /\ ((offset + 8) <= 18446744073709551615)))]);
        offset <- (offset + 8);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        t256 <- (t256 `^` (BArray800.get256d st at));
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
        st <- (BArray800.set256d st at t256);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert, ((0 <= (at + 32)) /\ ((at + 32) <= 18446744073709551615)))]);
        at <- (at + 32);
        trace_a32____addstate_bcast_array_avx2x4 <-
        (trace_a32____addstate_bcast_array_avx2x4 ++
        [(Assert,
         ((0 <= ((32 * (aT %/ 8)) + (32 * (lEN %/ 8)))) /\
         (((32 * (aT %/ 8)) + (32 * (lEN %/ 8))) <= 18446744073709551615)))]);
      }
      lEN <- ((aT + lEN) %% 8);
    } else {
      
    }
    lO <- ((aT + lEN) %% 8);
    if (((0 < lO) \/ (tRAILB <> 0))) {
      if ((tRAILB <> 0)) {
        aLL <- (aLL + 1);
      } else {
        
      }
      b_param <- b_buf;
      param_3 <- buf;
      param_2 <- offset;
      param_1 <- dELTA;
      param_0 <- lO;
      param <- tRAILB;
      (result_2, result_1, result_0, result, tmp__trace) <@ a32____aread_bcast_4subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++ tmp__trace);
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert,
       (((result_2 =
         (param_1 +
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8)))) /\
        (result_1 =
        (param_0 -
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))) /\
       (result_0 = ((8 <= param_0) ? param : 0))))]);
      dELTA <- result_2;
      t256 <- result;
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + dELTA)) /\
       ((offset + dELTA) <= 18446744073709551615)))]);
      offset <- (offset + dELTA);
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
      t256 <- (t256 `^` (BArray800.get256d st at));
      trace_a32____addstate_bcast_array_avx2x4 <-
      (trace_a32____addstate_bcast_array_avx2x4 ++
      [(Assert, ((0 <= at) /\ ((at + 32) <= 800)))]);
      st <- (BArray800.set256d st at t256);
    } else {
      
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aLL, offset, trace_a32____addstate_bcast_array_avx2x4);
  }
  proc a32____absorb_bcast_array_avx2x4 (st:BArray800.t, b_st:BArray800.t,
                                         aT:int, buf:BArray32.t,
                                         b_buf:BArray32.t, offset:int,
                                         lEN:int, rATE8:int, tRAILB:int) : 
  BArray800.t * BArray800.t * int * int * trace = {
    var aLL:int;
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray800.t;
    var result:BArray800.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray32.t;
    var param_5:int;
    var param_6:BArray800.t;
    var result_0:int;
    var result_1:int;
    var result_2:BArray800.t;
    var param_7:int;
    var param_8:BArray800.t;
    var result_3:BArray800.t;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:BArray32.t;
    var param_13:int;
    var param_14:BArray800.t;
    var result_4:int;
    var result_5:int;
    var result_6:BArray800.t;
    var param_15:BArray800.t;
    var result_7:BArray800.t;
    var param_16:int;
    var param_17:int;
    var param_18:int;
    var param_19:BArray32.t;
    var param_20:int;
    var param_21:BArray800.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray800.t;
    var param_22:BArray800.t;
    var result_11:BArray800.t;
    var param_23:int;
    var param_24:int;
    var param_25:int;
    var param_26:BArray32.t;
    var param_27:int;
    var param_28:BArray800.t;
    var result_12:int;
    var result_13:int;
    var result_14:BArray800.t;
    var b_result:BArray800.t;
    var b_result_0:BArray800.t;
    var b_param:BArray32.t;
    var b_result_1:BArray800.t;
    var b_result_2:BArray800.t;
    var b_param_0:BArray32.t;
    var b_result_3:BArray800.t;
    var b_result_4:BArray800.t;
    var b_param_1:BArray32.t;
    var b_result_5:BArray800.t;
    var b_result_6:BArray800.t;
    var b_param_2:BArray32.t;
    var trace_a32____absorb_bcast_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_6 <- witness;
    param_8 <- witness;
    param_12 <- witness;
    param_14 <- witness;
    param_15 <- witness;
    param_19 <- witness;
    param_21 <- witness;
    param_22 <- witness;
    param_26 <- witness;
    param_28 <- witness;
    result <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_14 <- witness;
    trace_a32____absorb_bcast_array_avx2x4 <- [];
    trace_a32____absorb_bcast_array_avx2x4 <-
    (trace_a32____absorb_bcast_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((((((0 <= offset) /\ (0 <= lEN)) /\ (0 <= aT)) /\ (aT < rATE8)) /\
          ((offset + lEN) <= 32)) /\
         (((aT + lEN) + ((tRAILB <> 0) ? 1 : 0)) < 200)) /\
        (0 < rATE8)) /\
       (rATE8 < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 800)))))]);
    trace_a32____absorb_bcast_array_avx2x4 <-
    (trace_a32____absorb_bcast_array_avx2x4 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a32____absorb_bcast_array_avx2x4 <-
    (trace_a32____absorb_bcast_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    aLL <- (aT + lEN);
    if (((aT + lEN) < rATE8)) {
      param_6 <- st;
      param_5 <- aT;
      b_param <- b_buf;
      param_4 <- buf;
      param_3 <- offset;
      param_2 <- lEN;
      param_1 <- tRAILB;
      (result_2, b_result_0, result_1, result_0, tmp__trace) <@ a32____addstate_bcast_array_avx2x4 (
      param_6, (BArray800.init_arr (W8.of_int 255) 800), param_5, param_4,
      b_param, param_3, param_2, param_1);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++
      [(Assert,
       (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
       (((0 <= (param_3 + param_2)) /\
        ((param_3 + param_2) <= 18446744073709551615)) /\
       (((is_init b_result_0 0 800) /\
        (result_1 = ((param_5 + param_2) + ((param_1 <> 0) ? 1 : 0)))) /\
       (result_0 = (param_3 + param_2))))))]);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++
      [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
      st <- result_2;
      aT <- result_1;
      offset <- result_0;
      if ((tRAILB <> 0)) {
        param_0 <- st;
        param <- rATE8;
        (result, b_result, tmp__trace) <@ __addratebit_avx2x4 (param_0,
        (BArray800.init_arr (W8.of_int 255) 800), param);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, (is_init b_result 0 800))]);
        st <- result;
      } else {
        
      }
    } else {
      if ((aT <> 0)) {
        param_28 <- st;
        param_27 <- aT;
        b_param_2 <- b_buf;
        param_26 <- buf;
        param_25 <- offset;
        param_24 <- (rATE8 - aT);
        param_23 <- 0;
        (result_14, b_result_6, result_13, result_12, tmp__trace) <@ 
        a32____addstate_bcast_array_avx2x4 (param_28,
        (BArray800.init_arr (W8.of_int 255) 800), param_27, param_26,
        b_param_2, param_25, param_24, param_23);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert,
         (((0 <= param_24) /\ (param_24 <= 18446744073709551615)) /\
         (((0 <= (param_25 + param_24)) /\
          ((param_25 + param_24) <= 18446744073709551615)) /\
         (((is_init b_result_6 0 800) /\
          (result_13 = ((param_27 + param_24) + ((param_23 <> 0) ? 1 : 0)))) /\
         (result_12 = (param_25 + param_24))))))]);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, ((0 <= result_12) /\ (result_12 <= 18446744073709551615)))]);
        st <- result_14;
        offset <- result_12;
        lEN <- (lEN - (rATE8 - aT));
        param_22 <- st;
        (result_11, b_result_5, tmp__trace) <@ _keccakf1600_avx2x4 (param_22,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, (is_init b_result_5 0 800))]);
        st <- result_11;
      } else {
        
      }
      iTERS <- (lEN %/ rATE8);
      i <- 0;
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_21 <- st;
        param_20 <- 0;
        b_param_1 <- b_buf;
        param_19 <- buf;
        param_18 <- offset;
        param_17 <- rATE8;
        param_16 <- 0;
        (result_10, b_result_4, result_9, result_8, tmp__trace) <@ a32____addstate_bcast_array_avx2x4 (
        param_21, (BArray800.init_arr (W8.of_int 255) 800), param_20,
        param_19, b_param_1, param_18, param_17, param_16);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert,
         (((0 <= param_17) /\ (param_17 <= 18446744073709551615)) /\
         (((0 <= (param_18 + param_17)) /\
          ((param_18 + param_17) <= 18446744073709551615)) /\
         (((is_init b_result_4 0 800) /\
          (result_9 = ((param_20 + param_17) + ((param_16 <> 0) ? 1 : 0)))) /\
         (result_8 = (param_18 + param_17))))))]);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
        st <- result_10;
        offset <- result_8;
        param_15 <- st;
        (result_7, b_result_3, tmp__trace) <@ _keccakf1600_avx2x4 (param_15,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, (is_init b_result_3 0 800))]);
        st <- result_7;
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
      lEN <- (aLL %% rATE8);
      param_14 <- st;
      param_13 <- 0;
      b_param_0 <- b_buf;
      param_12 <- buf;
      param_11 <- offset;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_6, b_result_2, result_5, result_4, tmp__trace) <@ a32____addstate_bcast_array_avx2x4 (
      param_14, (BArray800.init_arr (W8.of_int 255) 800), param_13, param_12,
      b_param_0, param_11, param_10, param_9);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++
      [(Assert,
       (((0 <= param_10) /\ (param_10 <= 18446744073709551615)) /\
       (((0 <= (param_11 + param_10)) /\
        ((param_11 + param_10) <= 18446744073709551615)) /\
       (((is_init b_result_2 0 800) /\
        (result_5 = ((param_13 + param_10) + ((param_9 <> 0) ? 1 : 0)))) /\
       (result_4 = (param_11 + param_10))))))]);
      trace_a32____absorb_bcast_array_avx2x4 <-
      (trace_a32____absorb_bcast_array_avx2x4 ++
      [(Assert, ((0 <= result_4) /\ (result_4 <= 18446744073709551615)))]);
      st <- result_6;
      aT <- result_5;
      offset <- result_4;
      if ((tRAILB <> 0)) {
        param_8 <- st;
        param_7 <- rATE8;
        (result_3, b_result_1, tmp__trace) <@ __addratebit_avx2x4 (param_8,
        (BArray800.init_arr (W8.of_int 255) 800), param_7);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++ tmp__trace);
        trace_a32____absorb_bcast_array_avx2x4 <-
        (trace_a32____absorb_bcast_array_avx2x4 ++
        [(Assert, (is_init b_result_1 0 800))]);
        st <- result_3;
      } else {
        
      }
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, aT, offset, trace_a32____absorb_bcast_array_avx2x4);
  }
  proc a33____aread_subu64 (buf:BArray33.t, b_buf:BArray33.t, offset:int,
                            dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                             int * W64.t *
                                                             trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a33____aread_subu64:trace;
    trace_a33____aread_subu64 <- [];
    trace_a33____aread_subu64 <-
    (trace_a33____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 33)) : true))))))))))]);
    trace_a33____aread_subu64 <-
    (trace_a33____aread_subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a33____aread_subu64 <-
    (trace_a33____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a33____aread_subu64 <-
        (trace_a33____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a33____aread_subu64 <-
        (trace_a33____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a33____aread_subu64 <-
        (trace_a33____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 33)))]);
        trace_a33____aread_subu64 <-
        (trace_a33____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray33.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 33)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray33.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 33)))]);
          trace_a33____aread_subu64 <-
          (trace_a33____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray33.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a33____aread_subu64 <-
            (trace_a33____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a33____aread_subu64 <-
            (trace_a33____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a33____aread_subu64 <-
            (trace_a33____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 33)))]);
            trace_a33____aread_subu64 <-
            (trace_a33____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray33.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a33____aread_subu64);
  }
  proc a33____aread_subu128 (buf:BArray33.t, b_buf:BArray33.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W128.t *
                                                              trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray33.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray33.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray33.t;
    var b_param_0:BArray33.t;
    var trace_a33____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a33____aread_subu128 <- [];
    trace_a33____aread_subu128 <-
    (trace_a33____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 33)) : true))))))))))]);
    trace_a33____aread_subu128 <-
    (trace_a33____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a33____aread_subu128 <-
    (trace_a33____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a33____aread_subu128 <-
        (trace_a33____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a33____aread_subu128 <-
        (trace_a33____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a33____aread_subu128 <-
        (trace_a33____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 33)))]);
        trace_a33____aread_subu128 <-
        (trace_a33____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray33.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 33)))]);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray33.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a33____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++ tmp__trace);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a33____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++ tmp__trace);
          trace_a33____aread_subu128 <-
          (trace_a33____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a33____aread_subu128);
  }
  proc a33____aread_subu256 (buf:BArray33.t, b_buf:BArray33.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W256.t *
                                                              trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray33.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray33.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray33.t;
    var b_param_0:BArray33.t;
    var trace_a33____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a33____aread_subu256 <- [];
    trace_a33____aread_subu256 <-
    (trace_a33____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 33)) : true))))))))))]);
    trace_a33____aread_subu256 <-
    (trace_a33____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a33____aread_subu256 <-
    (trace_a33____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a33____aread_subu256 <-
        (trace_a33____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a33____aread_subu256 <-
        (trace_a33____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a33____aread_subu256 <-
        (trace_a33____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 33)))]);
        trace_a33____aread_subu256 <-
        (trace_a33____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray33.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 33)))]);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray33.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a33____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++ tmp__trace);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a33____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++ tmp__trace);
          trace_a33____aread_subu256 <-
          (trace_a33____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a33____aread_subu256);
  }
  proc a33____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                   buf:BArray33.t, b_buf:BArray33.t,
                                   offset:int, lEN:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray33.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray33.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray33.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray33.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray33.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray33.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray33.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray33.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray33.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray33.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray33.t;
    var b_param_0:BArray33.t;
    var b_param_1:BArray33.t;
    var b_param_2:BArray33.t;
    var b_param_3:BArray33.t;
    var b_param_4:BArray33.t;
    var b_param_5:BArray33.t;
    var b_param_6:BArray33.t;
    var b_param_7:BArray33.t;
    var b_param_8:BArray33.t;
    var trace_a33____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a33____addstate_array_avx2 <- [];
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 33)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a33____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++ tmp__trace);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a33____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++ tmp__trace);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a33____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a33____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a33____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a33____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a33____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a33____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a33____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a33____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++ tmp__trace);
      trace_a33____addstate_array_avx2 <-
      (trace_a33____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a33____addstate_array_avx2 <-
    (trace_a33____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a33____addstate_array_avx2);
  }
  proc a33____absorb_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                 buf:BArray33.t, b_buf:BArray33.t,
                                 offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray33.t;
    var param_5:BArray224.t;
    var result_0:int;
    var result_1:BArray224.t;
    var param_6:BArray224.t;
    var result_2:BArray224.t;
    var param_7:int;
    var param_8:int;
    var param_9:int;
    var param_10:BArray33.t;
    var param_11:BArray224.t;
    var result_3:int;
    var result_4:BArray224.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_param:BArray33.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var b_param_0:BArray33.t;
    var trace_a33____absorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    result <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_4 <- witness;
    trace_a33____absorb_array_avx2 <- [];
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 33)) /\
        (0 < rATE8)) /\
       (rATE8 < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 224)))))]);
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    if ((0 < iTERS)) {
      i <- 0;
      trace_a33____absorb_array_avx2 <-
      (trace_a33____absorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_11 <- st;
        b_param_0 <- b_buf;
        param_10 <- buf;
        param_9 <- offset;
        param_8 <- rATE8;
        param_7 <- 0;
        (result_4, b_result_2, result_3, tmp__trace) <@ a33____addstate_array_avx2 (
        param_11, (BArray224.init_arr (W8.of_int 255) 224), param_10,
        b_param_0, param_9, param_8, param_7);
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++ tmp__trace);
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++
        [(Assert,
         (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
         (((0 <= (param_9 + param_8)) /\
          ((param_9 + param_8) <= 18446744073709551615)) /\
         ((is_init b_result_2 0 224) /\ (result_3 = (param_9 + param_8))))))]);
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++
        [(Assert, ((0 <= result_3) /\ (result_3 <= 18446744073709551615)))]);
        st <- result_4;
        offset <- result_3;
        param_6 <- st;
        (result_2, b_result_1, tmp__trace) <@ _keccakf1600_avx2 (param_6,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++ tmp__trace);
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++
        [(Assert, (is_init b_result_1 0 224))]);
        st <- result_2;
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a33____absorb_array_avx2 <-
        (trace_a33____absorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
    } else {
      
    }
    lEN <- (lEN %% rATE8);
    param_5 <- st;
    b_param <- b_buf;
    param_4 <- buf;
    param_3 <- offset;
    param_2 <- lEN;
    param_1 <- tRAILB;
    (result_1, b_result_0, result_0, tmp__trace) <@ a33____addstate_array_avx2 (
    param_5, (BArray224.init_arr (W8.of_int 255) 224), param_4, b_param,
    param_3, param_2, param_1);
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++ tmp__trace);
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++
    [(Assert,
     (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
     (((0 <= (param_3 + param_2)) /\
      ((param_3 + param_2) <= 18446744073709551615)) /\
     ((is_init b_result_0 0 224) /\ (result_0 = (param_3 + param_2))))))]);
    trace_a33____absorb_array_avx2 <-
    (trace_a33____absorb_array_avx2 ++
    [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
    st <- result_1;
    offset <- result_0;
    if ((tRAILB <> 0)) {
      param_0 <- st;
      param <- rATE8;
      (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
      (BArray224.init_arr (W8.of_int 255) 224), param);
      trace_a33____absorb_array_avx2 <-
      (trace_a33____absorb_array_avx2 ++ tmp__trace);
      trace_a33____absorb_array_avx2 <-
      (trace_a33____absorb_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a33____absorb_array_avx2);
  }
  proc a64____aread_subu64 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                            dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                             int * W64.t *
                                                             trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a64____aread_subu64:trace;
    trace_a64____aread_subu64 <- [];
    trace_a64____aread_subu64 <-
    (trace_a64____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 64)) : true))))))))))]);
    trace_a64____aread_subu64 <-
    (trace_a64____aread_subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a64____aread_subu64 <-
    (trace_a64____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a64____aread_subu64 <-
        (trace_a64____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____aread_subu64 <-
        (trace_a64____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____aread_subu64 <-
        (trace_a64____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 64)))]);
        trace_a64____aread_subu64 <-
        (trace_a64____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray64.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 64)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray64.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 64)))]);
          trace_a64____aread_subu64 <-
          (trace_a64____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray64.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a64____aread_subu64 <-
            (trace_a64____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a64____aread_subu64 <-
            (trace_a64____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a64____aread_subu64 <-
            (trace_a64____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 64)))]);
            trace_a64____aread_subu64 <-
            (trace_a64____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray64.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a64____aread_subu64);
  }
  proc a64____aread_subu128 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W128.t *
                                                              trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray64.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray64.t;
    var b_param_0:BArray64.t;
    var trace_a64____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a64____aread_subu128 <- [];
    trace_a64____aread_subu128 <-
    (trace_a64____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 64)) : true))))))))))]);
    trace_a64____aread_subu128 <-
    (trace_a64____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a64____aread_subu128 <-
    (trace_a64____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a64____aread_subu128 <-
        (trace_a64____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____aread_subu128 <-
        (trace_a64____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____aread_subu128 <-
        (trace_a64____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 64)))]);
        trace_a64____aread_subu128 <-
        (trace_a64____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray64.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 64)))]);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray64.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a64____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++ tmp__trace);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a64____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++ tmp__trace);
          trace_a64____aread_subu128 <-
          (trace_a64____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a64____aread_subu128);
  }
  proc a64____aread_subu256 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                             dELTA:int, lEN:int, tRAIL:int) : int * int *
                                                              int * W256.t *
                                                              trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray64.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray64.t;
    var b_param_0:BArray64.t;
    var trace_a64____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a64____aread_subu256 <- [];
    trace_a64____aread_subu256 <-
    (trace_a64____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 64)) : true))))))))))]);
    trace_a64____aread_subu256 <-
    (trace_a64____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a64____aread_subu256 <-
    (trace_a64____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a64____aread_subu256 <-
        (trace_a64____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____aread_subu256 <-
        (trace_a64____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____aread_subu256 <-
        (trace_a64____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 64)))]);
        trace_a64____aread_subu256 <-
        (trace_a64____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray64.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 64)))]);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray64.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a64____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++ tmp__trace);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a64____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++ tmp__trace);
          trace_a64____aread_subu256 <-
          (trace_a64____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a64____aread_subu256);
  }
  proc a64____awrite_subu64 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                             dELTA:int, lEN:int, w:W64.t) : BArray64.t *
                                                            BArray64.t *
                                                            int * int * trace = {
    var trace_a64____awrite_subu64:trace;
    trace_a64____awrite_subu64 <- [];
    trace_a64____awrite_subu64 <-
    (trace_a64____awrite_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 64)) : true))))))))]);
    trace_a64____awrite_subu64 <-
    (trace_a64____awrite_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((8 <= lEN)) {
        trace_a64____awrite_subu64 <-
        (trace_a64____awrite_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____awrite_subu64 <-
        (trace_a64____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____awrite_subu64 <-
        (trace_a64____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 64)))]);
        b_buf <-
        (BArray64.set64d b_buf (offset + dELTA)
        (W64.of_int 18446744073709551615));
        buf <- (BArray64.set64d buf (offset + dELTA) w);
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 64)))]);
          b_buf <-
          (BArray64.set32d b_buf (offset + dELTA) (W32.of_int 4294967295));
          buf <- (BArray64.set32d buf (offset + dELTA) (truncateu32 w));
          w <- (w `>>` (W8.of_int 32));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          
        }
        if ((2 <= lEN)) {
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 64)))]);
          b_buf <-
          (BArray64.set16d b_buf (offset + dELTA) (W16.of_int 65535));
          buf <- (BArray64.set16d buf (offset + dELTA) (truncateu16 w));
          w <- (w `>>` (W8.of_int 16));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          
        }
        if ((1 <= lEN)) {
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____awrite_subu64 <-
          (trace_a64____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 64)))]);
          b_buf <- (BArray64.set8d b_buf (offset + dELTA) (W8.of_int 255));
          buf <- (BArray64.set8d buf (offset + dELTA) (truncateu8 w));
          dELTA <- (dELTA + 1);
          lEN <- (lEN - 1);
        } else {
          
        }
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a64____awrite_subu64);
  }
  proc a64____awrite_subu128 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                              dELTA:int, lEN:int, w:W128.t) : BArray64.t *
                                                              BArray64.t *
                                                              int * int *
                                                              trace = {
    var t64:W64.t;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:int;
    var result_0:int;
    var result_1:BArray64.t;
    var b_result:BArray64.t;
    var b_param:BArray64.t;
    var trace_a64____awrite_subu128:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a64____awrite_subu128 <- [];
    trace_a64____awrite_subu128 <-
    (trace_a64____awrite_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 64)) : true))))))))]);
    trace_a64____awrite_subu128 <-
    (trace_a64____awrite_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((16 <= lEN)) {
        trace_a64____awrite_subu128 <-
        (trace_a64____awrite_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____awrite_subu128 <-
        (trace_a64____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____awrite_subu128 <-
        (trace_a64____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 64)))]);
        b_buf <-
        (BArray64.set128d b_buf (offset + dELTA)
        (W128.of_int 340282366920938463463374607431768211455));
        buf <- (BArray64.set128d buf (offset + dELTA) w);
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a64____awrite_subu128 <-
          (trace_a64____awrite_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____awrite_subu128 <-
          (trace_a64____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____awrite_subu128 <-
          (trace_a64____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 64)))]);
          b_buf <-
          (BArray64.set64d b_buf (offset + dELTA)
          (W64.of_int 18446744073709551615));
          buf <-
          (BArray64.set64d buf (offset + dELTA) (MOVV_64 (truncateu64 w)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          w <- (VPUNPCKH_2u64 w w);
        } else {
          
        }
        t64 <- (truncateu64 w);
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t64;
        (result_1, b_result, result_0, result, tmp__trace) <@ a64____awrite_subu64 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a64____awrite_subu128 <-
        (trace_a64____awrite_subu128 ++ tmp__trace);
        trace_a64____awrite_subu128 <-
        (trace_a64____awrite_subu128 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                     param_0 : 8)))) /\
         (result =
         (param_0 -
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a64____awrite_subu128);
  }
  proc a64____awrite_subu256 (buf:BArray64.t, b_buf:BArray64.t, offset:int,
                              dELTA:int, lEN:int, w:W256.t) : BArray64.t *
                                                              BArray64.t *
                                                              int * int *
                                                              trace = {
    var t128:W128.t;
    var param:W128.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:int;
    var result_0:int;
    var result_1:BArray64.t;
    var b_result:BArray64.t;
    var b_param:BArray64.t;
    var trace_a64____awrite_subu256:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a64____awrite_subu256 <- [];
    trace_a64____awrite_subu256 <-
    (trace_a64____awrite_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 64)) : true))))))))]);
    trace_a64____awrite_subu256 <-
    (trace_a64____awrite_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((32 <= lEN)) {
        trace_a64____awrite_subu256 <-
        (trace_a64____awrite_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a64____awrite_subu256 <-
        (trace_a64____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a64____awrite_subu256 <-
        (trace_a64____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 64)))]);
        b_buf <-
        (BArray64.set256d b_buf (offset + dELTA)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        buf <- (BArray64.set256d buf (offset + dELTA) w);
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        t128 <- (truncateu128 w);
        if ((16 <= lEN)) {
          trace_a64____awrite_subu256 <-
          (trace_a64____awrite_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a64____awrite_subu256 <-
          (trace_a64____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a64____awrite_subu256 <-
          (trace_a64____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 64)))]);
          b_buf <-
          (BArray64.set128d b_buf (offset + dELTA)
          (W128.of_int 340282366920938463463374607431768211455));
          buf <- (BArray64.set128d buf (offset + dELTA) t128);
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          t128 <- (VEXTRACTI128 w (W8.of_int 1));
        } else {
          
        }
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t128;
        (result_1, b_result, result_0, result, tmp__trace) <@ a64____awrite_subu128 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a64____awrite_subu256 <-
        (trace_a64____awrite_subu256 ++ tmp__trace);
        trace_a64____awrite_subu256 <-
        (trace_a64____awrite_subu256 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                       param_0 : 16)))) /\
         (result =
         (param_0 -
         ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                      param_0 : 16))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a64____awrite_subu256);
  }
  proc a64____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                   buf:BArray64.t, b_buf:BArray64.t,
                                   offset:int, lEN:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray64.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray64.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray64.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray64.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray64.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray64.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray64.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray64.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray64.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray64.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray64.t;
    var b_param_0:BArray64.t;
    var b_param_1:BArray64.t;
    var b_param_2:BArray64.t;
    var b_param_3:BArray64.t;
    var b_param_4:BArray64.t;
    var b_param_5:BArray64.t;
    var b_param_6:BArray64.t;
    var b_param_7:BArray64.t;
    var b_param_8:BArray64.t;
    var trace_a64____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a64____addstate_array_avx2 <- [];
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 64)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a64____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++ tmp__trace);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a64____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++ tmp__trace);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a64____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a64____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a64____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a64____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a64____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a64____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a64____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a64____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++ tmp__trace);
      trace_a64____addstate_array_avx2 <-
      (trace_a64____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a64____addstate_array_avx2 <-
    (trace_a64____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a64____addstate_array_avx2);
  }
  proc a64____absorb_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                 buf:BArray64.t, b_buf:BArray64.t,
                                 offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray64.t;
    var param_5:BArray224.t;
    var result_0:int;
    var result_1:BArray224.t;
    var param_6:BArray224.t;
    var result_2:BArray224.t;
    var param_7:int;
    var param_8:int;
    var param_9:int;
    var param_10:BArray64.t;
    var param_11:BArray224.t;
    var result_3:int;
    var result_4:BArray224.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_param:BArray64.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var b_param_0:BArray64.t;
    var trace_a64____absorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    result <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_4 <- witness;
    trace_a64____absorb_array_avx2 <- [];
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 64)) /\
        (0 < rATE8)) /\
       (rATE8 < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 224)))))]);
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    if ((0 < iTERS)) {
      i <- 0;
      trace_a64____absorb_array_avx2 <-
      (trace_a64____absorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_11 <- st;
        b_param_0 <- b_buf;
        param_10 <- buf;
        param_9 <- offset;
        param_8 <- rATE8;
        param_7 <- 0;
        (result_4, b_result_2, result_3, tmp__trace) <@ a64____addstate_array_avx2 (
        param_11, (BArray224.init_arr (W8.of_int 255) 224), param_10,
        b_param_0, param_9, param_8, param_7);
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++ tmp__trace);
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++
        [(Assert,
         (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
         (((0 <= (param_9 + param_8)) /\
          ((param_9 + param_8) <= 18446744073709551615)) /\
         ((is_init b_result_2 0 224) /\ (result_3 = (param_9 + param_8))))))]);
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++
        [(Assert, ((0 <= result_3) /\ (result_3 <= 18446744073709551615)))]);
        st <- result_4;
        offset <- result_3;
        param_6 <- st;
        (result_2, b_result_1, tmp__trace) <@ _keccakf1600_avx2 (param_6,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++ tmp__trace);
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++
        [(Assert, (is_init b_result_1 0 224))]);
        st <- result_2;
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a64____absorb_array_avx2 <-
        (trace_a64____absorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
    } else {
      
    }
    lEN <- (lEN %% rATE8);
    param_5 <- st;
    b_param <- b_buf;
    param_4 <- buf;
    param_3 <- offset;
    param_2 <- lEN;
    param_1 <- tRAILB;
    (result_1, b_result_0, result_0, tmp__trace) <@ a64____addstate_array_avx2 (
    param_5, (BArray224.init_arr (W8.of_int 255) 224), param_4, b_param,
    param_3, param_2, param_1);
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++ tmp__trace);
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++
    [(Assert,
     (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
     (((0 <= (param_3 + param_2)) /\
      ((param_3 + param_2) <= 18446744073709551615)) /\
     ((is_init b_result_0 0 224) /\ (result_0 = (param_3 + param_2))))))]);
    trace_a64____absorb_array_avx2 <-
    (trace_a64____absorb_array_avx2 ++
    [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
    st <- result_1;
    offset <- result_0;
    if ((tRAILB <> 0)) {
      param_0 <- st;
      param <- rATE8;
      (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
      (BArray224.init_arr (W8.of_int 255) 224), param);
      trace_a64____absorb_array_avx2 <-
      (trace_a64____absorb_array_avx2 ++ tmp__trace);
      trace_a64____absorb_array_avx2 <-
      (trace_a64____absorb_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a64____absorb_array_avx2);
  }
  proc a64____dumpstate_array_avx2 (buf:BArray64.t, b_buf:BArray64.t,
                                    offset:int, lEN:int, st:BArray224.t,
                                    b_st:BArray224.t) : BArray64.t *
                                                        BArray64.t * int *
                                                        trace = {
    var dELTA:int;
    var t128_0:W128.t;
    var t128_1:W128.t;
    var t:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var t256_4:W256.t;
    var param:W256.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:int;
    var result_0:int;
    var result_1:BArray64.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray64.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray64.t;
    var param_9:W256.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray64.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray64.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray64.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray64.t;
    var param_19:W256.t;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray64.t;
    var result_11:int;
    var result_12:int;
    var result_13:BArray64.t;
    var param_24:W64.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray64.t;
    var result_14:int;
    var result_15:int;
    var result_16:BArray64.t;
    var param_29:W256.t;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray64.t;
    var result_17:int;
    var result_18:int;
    var result_19:BArray64.t;
    var param_34:W64.t;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray64.t;
    var result_20:int;
    var result_21:int;
    var result_22:BArray64.t;
    var param_39:W256.t;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray64.t;
    var result_23:int;
    var result_24:int;
    var result_25:BArray64.t;
    var param_44:W256.t;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray64.t;
    var result_26:int;
    var result_27:int;
    var result_28:BArray64.t;
    var param_49:W256.t;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray64.t;
    var result_29:int;
    var result_30:int;
    var result_31:BArray64.t;
    var b_result:BArray64.t;
    var b_param:BArray64.t;
    var b_result_0:BArray64.t;
    var b_param_0:BArray64.t;
    var b_result_1:BArray64.t;
    var b_param_1:BArray64.t;
    var b_result_2:BArray64.t;
    var b_param_2:BArray64.t;
    var b_result_3:BArray64.t;
    var b_param_3:BArray64.t;
    var b_result_4:BArray64.t;
    var b_param_4:BArray64.t;
    var b_result_5:BArray64.t;
    var b_param_5:BArray64.t;
    var b_result_6:BArray64.t;
    var b_param_6:BArray64.t;
    var b_result_7:BArray64.t;
    var b_param_7:BArray64.t;
    var b_result_8:BArray64.t;
    var b_param_8:BArray64.t;
    var b_result_9:BArray64.t;
    var b_param_9:BArray64.t;
    var trace_a64____dumpstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_13 <- witness;
    result_16 <- witness;
    result_19 <- witness;
    result_22 <- witness;
    result_25 <- witness;
    result_28 <- witness;
    result_31 <- witness;
    trace_a64____dumpstate_array_avx2 <- [];
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 64)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    if ((8 <= lEN)) {
      b_param_8 <- b_buf;
      param_48 <- buf;
      param_47 <- offset;
      param_46 <- dELTA;
      param_45 <- 8;
      param_44 <- (BArray224.get256 st 0);
      (result_28, b_result_8, result_27, result_26, tmp__trace) <@ a64____awrite_subu256 (
      param_48, b_param_8, param_47, param_46, param_45, param_44);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++
      [(Assert,
       ((result_27 =
        (param_46 +
        ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                       param_45 : 32)))) /\
       (result_26 =
       (param_45 -
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32))))))]);
      b_buf <- b_result_8;
      buf <- result_28;
      dELTA <- result_27;
      lEN <- (lEN - 8);
    } else {
      b_param_9 <- b_buf;
      param_53 <- buf;
      param_52 <- offset;
      param_51 <- dELTA;
      param_50 <- lEN;
      param_49 <- (BArray224.get256 st 0);
      (result_31, b_result_9, result_30, result_29, tmp__trace) <@ a64____awrite_subu256 (
      param_53, b_param_9, param_52, param_51, param_50, param_49);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++
      [(Assert,
       ((result_30 =
        (param_51 +
        ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                       param_50 : 32)))) /\
       (result_29 =
       (param_50 -
       ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                      param_50 : 32))))))]);
      b_buf <- b_result_9;
      buf <- result_31;
      dELTA <- result_30;
      lEN <- result_29;
    }
    b_param_7 <- b_buf;
    param_43 <- buf;
    param_42 <- offset;
    param_41 <- dELTA;
    param_40 <- lEN;
    param_39 <- (BArray224.get256 st 1);
    (result_25, b_result_7, result_24, result_23, tmp__trace) <@ a64____awrite_subu256 (
    param_43, b_param_7, param_42, param_41, param_40, param_39);
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++
    [(Assert,
     ((result_24 =
      (param_41 +
      ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                     param_40 : 32)))) /\
     (result_23 =
     (param_40 -
     ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                    param_40 : 32))))))]);
    b_buf <- b_result_7;
    buf <- result_25;
    dELTA <- result_24;
    lEN <- result_23;
    if ((0 < lEN)) {
      t128_0 <- (truncateu128 (BArray224.get256 st 2));
      t128_1 <- (VEXTRACTI128 (BArray224.get256 st 2) (W8.of_int 1));
      t <- (truncateu64 t128_1);
      b_param_6 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- t;
      (result_22, b_result_6, result_21, result_20, tmp__trace) <@ a64____awrite_subu64 (
      param_38, b_param_6, param_37, param_36, param_35, param_34);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
      trace_a64____dumpstate_array_avx2 <-
      (trace_a64____dumpstate_array_avx2 ++
      [(Assert,
       ((result_21 =
        (param_36 +
        ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                     param_35 : 8)))) /\
       (result_20 =
       (param_35 -
       ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                    param_35 : 8))))))]);
      b_buf <- b_result_6;
      buf <- result_22;
      dELTA <- result_21;
      lEN <- result_20;
      t128_1 <- (VPUNPCKH_2u64 t128_1 t128_1);
      if ((0 < lEN)) {
        t256_0 <-
        (VPBLEND_8u32 (BArray224.get256 st 3) (BArray224.get256 st 4)
        (W8.of_int 240));
        t256_1 <-
        (VPBLEND_8u32 (BArray224.get256 st 4) (BArray224.get256 st 3)
        (W8.of_int 240));
        t256_2 <-
        (VPBLEND_8u32 (BArray224.get256 st 5) (BArray224.get256 st 6)
        (W8.of_int 240));
        t256_3 <-
        (VPBLEND_8u32 (BArray224.get256 st 6) (BArray224.get256 st 5)
        (W8.of_int 240));
        t256_4 <- (VPBLEND_8u32 t256_0 t256_3 (W8.of_int 195));
        b_param_5 <- b_buf;
        param_33 <- buf;
        param_32 <- offset;
        param_31 <- dELTA;
        param_30 <- lEN;
        param_29 <- t256_4;
        (result_19, b_result_5, result_18, result_17, tmp__trace) <@ 
        a64____awrite_subu256 (param_33, b_param_5, param_32, param_31,
        param_30, param_29);
        trace_a64____dumpstate_array_avx2 <-
        (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
        trace_a64____dumpstate_array_avx2 <-
        (trace_a64____dumpstate_array_avx2 ++
        [(Assert,
         ((result_18 =
          (param_31 +
          ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                         param_30 : 32)))) /\
         (result_17 =
         (param_30 -
         ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                        param_30 : 32))))))]);
        b_buf <- b_result_5;
        buf <- result_19;
        dELTA <- result_18;
        lEN <- result_17;
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_4 <- b_buf;
          param_28 <- buf;
          param_27 <- offset;
          param_26 <- dELTA;
          param_25 <- lEN;
          param_24 <- t;
          (result_16, b_result_4, result_15, result_14, tmp__trace) <@ 
          a64____awrite_subu64 (param_28, b_param_4, param_27, param_26,
          param_25, param_24);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_15 =
            (param_26 +
            ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                         param_25 : 8)))) /\
           (result_14 =
           (param_25 -
           ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                        param_25 : 8))))))]);
          b_buf <- b_result_4;
          buf <- result_16;
          dELTA <- result_15;
          lEN <- result_14;
          t128_0 <- (VPUNPCKH_2u64 t128_0 t128_0);
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_3 t256_1 (W8.of_int 195));
          b_param_3 <- b_buf;
          param_23 <- buf;
          param_22 <- offset;
          param_21 <- dELTA;
          param_20 <- lEN;
          param_19 <- t256_4;
          (result_13, b_result_3, result_12, result_11, tmp__trace) <@ 
          a64____awrite_subu256 (param_23, b_param_3, param_22, param_21,
          param_20, param_19);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_12 =
            (param_21 +
            ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                           param_20 : 32)))) /\
           (result_11 =
           (param_20 -
           ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                          param_20 : 32))))))]);
          b_buf <- b_result_3;
          buf <- result_13;
          dELTA <- result_12;
          lEN <- result_11;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_1);
          b_param_2 <- b_buf;
          param_18 <- buf;
          param_17 <- offset;
          param_16 <- dELTA;
          param_15 <- lEN;
          param_14 <- t;
          (result_10, b_result_2, result_9, result_8, tmp__trace) <@ 
          a64____awrite_subu64 (param_18, b_param_2, param_17, param_16,
          param_15, param_14);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_9 =
            (param_16 +
            ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                         param_15 : 8)))) /\
           (result_8 =
           (param_15 -
           ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                        param_15 : 8))))))]);
          b_buf <- b_result_2;
          buf <- result_10;
          dELTA <- result_9;
          lEN <- result_8;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_2 t256_0 (W8.of_int 195));
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- lEN;
          param_9 <- t256_4;
          (result_7, b_result_1, result_6, result_5, tmp__trace) <@ a64____awrite_subu256 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_6 =
            (param_11 +
            ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                           param_10 : 32)))) /\
           (result_5 =
           (param_10 -
           ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                          param_10 : 32))))))]);
          b_buf <- b_result_1;
          buf <- result_7;
          dELTA <- result_6;
          lEN <- result_5;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- t;
          (result_4, b_result_0, result_3, result_2, tmp__trace) <@ a64____awrite_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_3 =
            (param_6 +
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8)))) /\
           (result_2 =
           (param_5 -
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8))))))]);
          b_buf <- b_result_0;
          buf <- result_4;
          dELTA <- result_3;
          lEN <- result_2;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_1 t256_2 (W8.of_int 195));
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- t256_4;
          (result_1, b_result, result_0, result, tmp__trace) <@ a64____awrite_subu256 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++ tmp__trace);
          trace_a64____dumpstate_array_avx2 <-
          (trace_a64____dumpstate_array_avx2 ++
          [(Assert,
           ((result_0 =
            (param_1 +
            ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                         param_0 : 32)))) /\
           (result =
           (param_0 -
           ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                        param_0 : 32))))))]);
          b_buf <- b_result;
          buf <- result_1;
          dELTA <- result_0;
        } else {
          
        }
      } else {
        
      }
    } else {
      
    }
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a64____dumpstate_array_avx2 <-
    (trace_a64____dumpstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    return (buf, b_buf, offset, trace_a64____dumpstate_array_avx2);
  }
  proc a64____squeeze_array_avx2 (buf:BArray64.t, b_buf:BArray64.t,
                                  offset:int, lEN:int, st:BArray224.t,
                                  b_st:BArray224.t, rATE8:int) : BArray64.t *
                                                                 BArray64.t *
                                                                 BArray224.t *
                                                                 BArray224.t *
                                                                 trace = {
    var iTERS:int;
    var lO:int;
    var i:int;
    var param:BArray224.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray64.t;
    var result:int;
    var result_0:BArray64.t;
    var param_3:BArray224.t;
    var result_1:BArray224.t;
    var param_4:BArray224.t;
    var param_5:int;
    var param_6:int;
    var param_7:BArray64.t;
    var result_2:int;
    var result_3:BArray64.t;
    var param_8:BArray224.t;
    var result_4:BArray224.t;
    var b_result:BArray64.t;
    var b_param:BArray64.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray64.t;
    var b_param_0:BArray64.t;
    var b_result_2:BArray224.t;
    var trace_a64____squeeze_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    trace_a64____squeeze_array_avx2 <- [];
    trace_a64____squeeze_array_avx2 <-
    (trace_a64____squeeze_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ (0 < rATE8)) /\ (rATE8 < 200)) /\
      ((offset + lEN) <= 64)) /\
     (is_init b_st 0 224)))))]);
    trace_a64____squeeze_array_avx2 <-
    (trace_a64____squeeze_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    lO <- (lEN %% rATE8);
    if ((0 < lEN)) {
      if ((0 < iTERS)) {
        i <- 0;
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        while ((i < iTERS)) {
          param_8 <- st;
          (result_4, b_result_2, tmp__trace) <@ _keccakf1600_avx2 (param_8,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++ tmp__trace);
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++
          [(Assert, (is_init b_result_2 0 224))]);
          st <- result_4;
          b_param_0 <- b_buf;
          param_7 <- buf;
          param_6 <- offset;
          param_5 <- rATE8;
          param_4 <- st;
          (result_3, b_result_1, result_2, tmp__trace) <@ a64____dumpstate_array_avx2 (
          param_7, b_param_0, param_6, param_5, param_4,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++ tmp__trace);
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++
          [(Assert,
           (((0 <= param_5) /\ (param_5 <= 18446744073709551615)) /\
           (((0 <= (param_6 + param_5)) /\
            ((param_6 + param_5) <= 18446744073709551615)) /\
           (result_2 = (param_6 + param_5)))))]);
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++
          [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
          b_buf <- b_result_1;
          buf <- result_3;
          offset <- result_2;
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++
          [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
          i <- (i + 1);
          trace_a64____squeeze_array_avx2 <-
          (trace_a64____squeeze_array_avx2 ++
          [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        }
      } else {
        
      }
      if ((0 < lO)) {
        param_3 <- st;
        (result_1, b_result_0, tmp__trace) <@ _keccakf1600_avx2 (param_3,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++ tmp__trace);
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++
        [(Assert, (is_init b_result_0 0 224))]);
        st <- result_1;
        b_param <- b_buf;
        param_2 <- buf;
        param_1 <- offset;
        param_0 <- lO;
        param <- st;
        (result_0, b_result, result, tmp__trace) <@ a64____dumpstate_array_avx2 (
        param_2, b_param, param_1, param_0, param,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++ tmp__trace);
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++
        [(Assert,
         (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
         (((0 <= (param_1 + param_0)) /\
          ((param_1 + param_0) <= 18446744073709551615)) /\
         (result = (param_1 + param_0)))))]);
        trace_a64____squeeze_array_avx2 <-
        (trace_a64____squeeze_array_avx2 ++
        [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
        b_buf <- b_result;
        buf <- result_0;
      } else {
        
      }
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (buf, b_buf, st, b_st, trace_a64____squeeze_array_avx2);
  }
  proc a128____awrite_subu64 (buf:BArray128.t, b_buf:BArray128.t, offset:int,
                              dELTA:int, lEN:int, w:W64.t) : BArray128.t *
                                                             BArray128.t *
                                                             int * int *
                                                             trace = {
    var trace_a128____awrite_subu64:trace;
    trace_a128____awrite_subu64 <- [];
    trace_a128____awrite_subu64 <-
    (trace_a128____awrite_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 128)) : true))))))))]);
    trace_a128____awrite_subu64 <-
    (trace_a128____awrite_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((8 <= lEN)) {
        trace_a128____awrite_subu64 <-
        (trace_a128____awrite_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a128____awrite_subu64 <-
        (trace_a128____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a128____awrite_subu64 <-
        (trace_a128____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 128)))]);
        b_buf <-
        (BArray128.set64d b_buf (offset + dELTA)
        (W64.of_int 18446744073709551615));
        buf <- (BArray128.set64d buf (offset + dELTA) w);
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 128)))]);
          b_buf <-
          (BArray128.set32d b_buf (offset + dELTA) (W32.of_int 4294967295));
          buf <- (BArray128.set32d buf (offset + dELTA) (truncateu32 w));
          w <- (w `>>` (W8.of_int 32));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          
        }
        if ((2 <= lEN)) {
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 128)))]);
          b_buf <-
          (BArray128.set16d b_buf (offset + dELTA) (W16.of_int 65535));
          buf <- (BArray128.set16d buf (offset + dELTA) (truncateu16 w));
          w <- (w `>>` (W8.of_int 16));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          
        }
        if ((1 <= lEN)) {
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a128____awrite_subu64 <-
          (trace_a128____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 128)))]);
          b_buf <- (BArray128.set8d b_buf (offset + dELTA) (W8.of_int 255));
          buf <- (BArray128.set8d buf (offset + dELTA) (truncateu8 w));
          dELTA <- (dELTA + 1);
          lEN <- (lEN - 1);
        } else {
          
        }
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a128____awrite_subu64);
  }
  proc a128____awrite_subu128 (buf:BArray128.t, b_buf:BArray128.t,
                               offset:int, dELTA:int, lEN:int, w:W128.t) : 
  BArray128.t * BArray128.t * int * int * trace = {
    var t64:W64.t;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var result:int;
    var result_0:int;
    var result_1:BArray128.t;
    var b_result:BArray128.t;
    var b_param:BArray128.t;
    var trace_a128____awrite_subu128:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a128____awrite_subu128 <- [];
    trace_a128____awrite_subu128 <-
    (trace_a128____awrite_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 128)) : true))))))))]);
    trace_a128____awrite_subu128 <-
    (trace_a128____awrite_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((16 <= lEN)) {
        trace_a128____awrite_subu128 <-
        (trace_a128____awrite_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a128____awrite_subu128 <-
        (trace_a128____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a128____awrite_subu128 <-
        (trace_a128____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 128)))]);
        b_buf <-
        (BArray128.set128d b_buf (offset + dELTA)
        (W128.of_int 340282366920938463463374607431768211455));
        buf <- (BArray128.set128d buf (offset + dELTA) w);
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a128____awrite_subu128 <-
          (trace_a128____awrite_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a128____awrite_subu128 <-
          (trace_a128____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a128____awrite_subu128 <-
          (trace_a128____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 128)))]);
          b_buf <-
          (BArray128.set64d b_buf (offset + dELTA)
          (W64.of_int 18446744073709551615));
          buf <-
          (BArray128.set64d buf (offset + dELTA) (MOVV_64 (truncateu64 w)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          w <- (VPUNPCKH_2u64 w w);
        } else {
          
        }
        t64 <- (truncateu64 w);
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t64;
        (result_1, b_result, result_0, result, tmp__trace) <@ a128____awrite_subu64 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a128____awrite_subu128 <-
        (trace_a128____awrite_subu128 ++ tmp__trace);
        trace_a128____awrite_subu128 <-
        (trace_a128____awrite_subu128 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                     param_0 : 8)))) /\
         (result =
         (param_0 -
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a128____awrite_subu128);
  }
  proc a128____awrite_subu256 (buf:BArray128.t, b_buf:BArray128.t,
                               offset:int, dELTA:int, lEN:int, w:W256.t) : 
  BArray128.t * BArray128.t * int * int * trace = {
    var t128:W128.t;
    var param:W128.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var result:int;
    var result_0:int;
    var result_1:BArray128.t;
    var b_result:BArray128.t;
    var b_param:BArray128.t;
    var trace_a128____awrite_subu256:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_a128____awrite_subu256 <- [];
    trace_a128____awrite_subu256 <-
    (trace_a128____awrite_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 128)) : true))))))))]);
    trace_a128____awrite_subu256 <-
    (trace_a128____awrite_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((32 <= lEN)) {
        trace_a128____awrite_subu256 <-
        (trace_a128____awrite_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a128____awrite_subu256 <-
        (trace_a128____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a128____awrite_subu256 <-
        (trace_a128____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 128)))]);
        b_buf <-
        (BArray128.set256d b_buf (offset + dELTA)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        buf <- (BArray128.set256d buf (offset + dELTA) w);
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        t128 <- (truncateu128 w);
        if ((16 <= lEN)) {
          trace_a128____awrite_subu256 <-
          (trace_a128____awrite_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a128____awrite_subu256 <-
          (trace_a128____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a128____awrite_subu256 <-
          (trace_a128____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 128)))]);
          b_buf <-
          (BArray128.set128d b_buf (offset + dELTA)
          (W128.of_int 340282366920938463463374607431768211455));
          buf <- (BArray128.set128d buf (offset + dELTA) t128);
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          t128 <- (VEXTRACTI128 w (W8.of_int 1));
        } else {
          
        }
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t128;
        (result_1, b_result, result_0, result, tmp__trace) <@ a128____awrite_subu128 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_a128____awrite_subu256 <-
        (trace_a128____awrite_subu256 ++ tmp__trace);
        trace_a128____awrite_subu256 <-
        (trace_a128____awrite_subu256 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                       param_0 : 16)))) /\
         (result =
         (param_0 -
         ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                      param_0 : 16))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_a128____awrite_subu256);
  }
  proc a128____dumpstate_array_avx2 (buf:BArray128.t, b_buf:BArray128.t,
                                     offset:int, lEN:int, st:BArray224.t,
                                     b_st:BArray224.t) : BArray128.t *
                                                         BArray128.t * int *
                                                         trace = {
    var dELTA:int;
    var t128_0:W128.t;
    var t128_1:W128.t;
    var t:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var t256_4:W256.t;
    var param:W256.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var result:int;
    var result_0:int;
    var result_1:BArray128.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray128.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray128.t;
    var param_9:W256.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray128.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray128.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray128.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray128.t;
    var param_19:W256.t;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray128.t;
    var result_11:int;
    var result_12:int;
    var result_13:BArray128.t;
    var param_24:W64.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray128.t;
    var result_14:int;
    var result_15:int;
    var result_16:BArray128.t;
    var param_29:W256.t;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray128.t;
    var result_17:int;
    var result_18:int;
    var result_19:BArray128.t;
    var param_34:W64.t;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray128.t;
    var result_20:int;
    var result_21:int;
    var result_22:BArray128.t;
    var param_39:W256.t;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray128.t;
    var result_23:int;
    var result_24:int;
    var result_25:BArray128.t;
    var param_44:W256.t;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray128.t;
    var result_26:int;
    var result_27:int;
    var result_28:BArray128.t;
    var param_49:W256.t;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray128.t;
    var result_29:int;
    var result_30:int;
    var result_31:BArray128.t;
    var b_result:BArray128.t;
    var b_param:BArray128.t;
    var b_result_0:BArray128.t;
    var b_param_0:BArray128.t;
    var b_result_1:BArray128.t;
    var b_param_1:BArray128.t;
    var b_result_2:BArray128.t;
    var b_param_2:BArray128.t;
    var b_result_3:BArray128.t;
    var b_param_3:BArray128.t;
    var b_result_4:BArray128.t;
    var b_param_4:BArray128.t;
    var b_result_5:BArray128.t;
    var b_param_5:BArray128.t;
    var b_result_6:BArray128.t;
    var b_param_6:BArray128.t;
    var b_result_7:BArray128.t;
    var b_param_7:BArray128.t;
    var b_result_8:BArray128.t;
    var b_param_8:BArray128.t;
    var b_result_9:BArray128.t;
    var b_param_9:BArray128.t;
    var trace_a128____dumpstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_13 <- witness;
    result_16 <- witness;
    result_19 <- witness;
    result_22 <- witness;
    result_25 <- witness;
    result_28 <- witness;
    result_31 <- witness;
    trace_a128____dumpstate_array_avx2 <- [];
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 128)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    if ((8 <= lEN)) {
      b_param_8 <- b_buf;
      param_48 <- buf;
      param_47 <- offset;
      param_46 <- dELTA;
      param_45 <- 8;
      param_44 <- (BArray224.get256 st 0);
      (result_28, b_result_8, result_27, result_26, tmp__trace) <@ a128____awrite_subu256 (
      param_48, b_param_8, param_47, param_46, param_45, param_44);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++
      [(Assert,
       ((result_27 =
        (param_46 +
        ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                       param_45 : 32)))) /\
       (result_26 =
       (param_45 -
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32))))))]);
      b_buf <- b_result_8;
      buf <- result_28;
      dELTA <- result_27;
      lEN <- (lEN - 8);
    } else {
      b_param_9 <- b_buf;
      param_53 <- buf;
      param_52 <- offset;
      param_51 <- dELTA;
      param_50 <- lEN;
      param_49 <- (BArray224.get256 st 0);
      (result_31, b_result_9, result_30, result_29, tmp__trace) <@ a128____awrite_subu256 (
      param_53, b_param_9, param_52, param_51, param_50, param_49);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++
      [(Assert,
       ((result_30 =
        (param_51 +
        ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                       param_50 : 32)))) /\
       (result_29 =
       (param_50 -
       ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                      param_50 : 32))))))]);
      b_buf <- b_result_9;
      buf <- result_31;
      dELTA <- result_30;
      lEN <- result_29;
    }
    b_param_7 <- b_buf;
    param_43 <- buf;
    param_42 <- offset;
    param_41 <- dELTA;
    param_40 <- lEN;
    param_39 <- (BArray224.get256 st 1);
    (result_25, b_result_7, result_24, result_23, tmp__trace) <@ a128____awrite_subu256 (
    param_43, b_param_7, param_42, param_41, param_40, param_39);
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++
    [(Assert,
     ((result_24 =
      (param_41 +
      ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                     param_40 : 32)))) /\
     (result_23 =
     (param_40 -
     ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                    param_40 : 32))))))]);
    b_buf <- b_result_7;
    buf <- result_25;
    dELTA <- result_24;
    lEN <- result_23;
    if ((0 < lEN)) {
      t128_0 <- (truncateu128 (BArray224.get256 st 2));
      t128_1 <- (VEXTRACTI128 (BArray224.get256 st 2) (W8.of_int 1));
      t <- (truncateu64 t128_1);
      b_param_6 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- t;
      (result_22, b_result_6, result_21, result_20, tmp__trace) <@ a128____awrite_subu64 (
      param_38, b_param_6, param_37, param_36, param_35, param_34);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2 <-
      (trace_a128____dumpstate_array_avx2 ++
      [(Assert,
       ((result_21 =
        (param_36 +
        ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                     param_35 : 8)))) /\
       (result_20 =
       (param_35 -
       ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                    param_35 : 8))))))]);
      b_buf <- b_result_6;
      buf <- result_22;
      dELTA <- result_21;
      lEN <- result_20;
      t128_1 <- (VPUNPCKH_2u64 t128_1 t128_1);
      if ((0 < lEN)) {
        t256_0 <-
        (VPBLEND_8u32 (BArray224.get256 st 3) (BArray224.get256 st 4)
        (W8.of_int 240));
        t256_1 <-
        (VPBLEND_8u32 (BArray224.get256 st 4) (BArray224.get256 st 3)
        (W8.of_int 240));
        t256_2 <-
        (VPBLEND_8u32 (BArray224.get256 st 5) (BArray224.get256 st 6)
        (W8.of_int 240));
        t256_3 <-
        (VPBLEND_8u32 (BArray224.get256 st 6) (BArray224.get256 st 5)
        (W8.of_int 240));
        t256_4 <- (VPBLEND_8u32 t256_0 t256_3 (W8.of_int 195));
        b_param_5 <- b_buf;
        param_33 <- buf;
        param_32 <- offset;
        param_31 <- dELTA;
        param_30 <- lEN;
        param_29 <- t256_4;
        (result_19, b_result_5, result_18, result_17, tmp__trace) <@ 
        a128____awrite_subu256 (param_33, b_param_5, param_32, param_31,
        param_30, param_29);
        trace_a128____dumpstate_array_avx2 <-
        (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
        trace_a128____dumpstate_array_avx2 <-
        (trace_a128____dumpstate_array_avx2 ++
        [(Assert,
         ((result_18 =
          (param_31 +
          ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                         param_30 : 32)))) /\
         (result_17 =
         (param_30 -
         ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                        param_30 : 32))))))]);
        b_buf <- b_result_5;
        buf <- result_19;
        dELTA <- result_18;
        lEN <- result_17;
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_4 <- b_buf;
          param_28 <- buf;
          param_27 <- offset;
          param_26 <- dELTA;
          param_25 <- lEN;
          param_24 <- t;
          (result_16, b_result_4, result_15, result_14, tmp__trace) <@ 
          a128____awrite_subu64 (param_28, b_param_4, param_27, param_26,
          param_25, param_24);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_15 =
            (param_26 +
            ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                         param_25 : 8)))) /\
           (result_14 =
           (param_25 -
           ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                        param_25 : 8))))))]);
          b_buf <- b_result_4;
          buf <- result_16;
          dELTA <- result_15;
          lEN <- result_14;
          t128_0 <- (VPUNPCKH_2u64 t128_0 t128_0);
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_3 t256_1 (W8.of_int 195));
          b_param_3 <- b_buf;
          param_23 <- buf;
          param_22 <- offset;
          param_21 <- dELTA;
          param_20 <- lEN;
          param_19 <- t256_4;
          (result_13, b_result_3, result_12, result_11, tmp__trace) <@ 
          a128____awrite_subu256 (param_23, b_param_3, param_22, param_21,
          param_20, param_19);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_12 =
            (param_21 +
            ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                           param_20 : 32)))) /\
           (result_11 =
           (param_20 -
           ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                          param_20 : 32))))))]);
          b_buf <- b_result_3;
          buf <- result_13;
          dELTA <- result_12;
          lEN <- result_11;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_1);
          b_param_2 <- b_buf;
          param_18 <- buf;
          param_17 <- offset;
          param_16 <- dELTA;
          param_15 <- lEN;
          param_14 <- t;
          (result_10, b_result_2, result_9, result_8, tmp__trace) <@ 
          a128____awrite_subu64 (param_18, b_param_2, param_17, param_16,
          param_15, param_14);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_9 =
            (param_16 +
            ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                         param_15 : 8)))) /\
           (result_8 =
           (param_15 -
           ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                        param_15 : 8))))))]);
          b_buf <- b_result_2;
          buf <- result_10;
          dELTA <- result_9;
          lEN <- result_8;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_2 t256_0 (W8.of_int 195));
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- lEN;
          param_9 <- t256_4;
          (result_7, b_result_1, result_6, result_5, tmp__trace) <@ a128____awrite_subu256 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_6 =
            (param_11 +
            ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                           param_10 : 32)))) /\
           (result_5 =
           (param_10 -
           ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                          param_10 : 32))))))]);
          b_buf <- b_result_1;
          buf <- result_7;
          dELTA <- result_6;
          lEN <- result_5;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- t;
          (result_4, b_result_0, result_3, result_2, tmp__trace) <@ a128____awrite_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_3 =
            (param_6 +
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8)))) /\
           (result_2 =
           (param_5 -
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8))))))]);
          b_buf <- b_result_0;
          buf <- result_4;
          dELTA <- result_3;
          lEN <- result_2;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_1 t256_2 (W8.of_int 195));
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- t256_4;
          (result_1, b_result, result_0, result, tmp__trace) <@ a128____awrite_subu256 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++ tmp__trace);
          trace_a128____dumpstate_array_avx2 <-
          (trace_a128____dumpstate_array_avx2 ++
          [(Assert,
           ((result_0 =
            (param_1 +
            ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                         param_0 : 32)))) /\
           (result =
           (param_0 -
           ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                        param_0 : 32))))))]);
          b_buf <- b_result;
          buf <- result_1;
          dELTA <- result_0;
        } else {
          
        }
      } else {
        
      }
    } else {
      
    }
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a128____dumpstate_array_avx2 <-
    (trace_a128____dumpstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    return (buf, b_buf, offset, trace_a128____dumpstate_array_avx2);
  }
  proc a128____squeeze_array_avx2 (buf:BArray128.t, b_buf:BArray128.t,
                                   offset:int, lEN:int, st:BArray224.t,
                                   b_st:BArray224.t, rATE8:int) : BArray128.t *
                                                                  BArray128.t *
                                                                  BArray224.t *
                                                                  BArray224.t *
                                                                  trace = {
    var iTERS:int;
    var lO:int;
    var i:int;
    var param:BArray224.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray128.t;
    var result:int;
    var result_0:BArray128.t;
    var param_3:BArray224.t;
    var result_1:BArray224.t;
    var param_4:BArray224.t;
    var param_5:int;
    var param_6:int;
    var param_7:BArray128.t;
    var result_2:int;
    var result_3:BArray128.t;
    var param_8:BArray224.t;
    var result_4:BArray224.t;
    var b_result:BArray128.t;
    var b_param:BArray128.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray128.t;
    var b_param_0:BArray128.t;
    var b_result_2:BArray224.t;
    var trace_a128____squeeze_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    trace_a128____squeeze_array_avx2 <- [];
    trace_a128____squeeze_array_avx2 <-
    (trace_a128____squeeze_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ (0 < rATE8)) /\ (rATE8 < 200)) /\
      ((offset + lEN) <= 128)) /\
     (is_init b_st 0 224)))))]);
    trace_a128____squeeze_array_avx2 <-
    (trace_a128____squeeze_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    lO <- (lEN %% rATE8);
    if ((0 < lEN)) {
      if ((0 < iTERS)) {
        i <- 0;
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        while ((i < iTERS)) {
          param_8 <- st;
          (result_4, b_result_2, tmp__trace) <@ _keccakf1600_avx2 (param_8,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++ tmp__trace);
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++
          [(Assert, (is_init b_result_2 0 224))]);
          st <- result_4;
          b_param_0 <- b_buf;
          param_7 <- buf;
          param_6 <- offset;
          param_5 <- rATE8;
          param_4 <- st;
          (result_3, b_result_1, result_2, tmp__trace) <@ a128____dumpstate_array_avx2 (
          param_7, b_param_0, param_6, param_5, param_4,
          (BArray224.init_arr (W8.of_int 255) 224));
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++ tmp__trace);
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++
          [(Assert,
           (((0 <= param_5) /\ (param_5 <= 18446744073709551615)) /\
           (((0 <= (param_6 + param_5)) /\
            ((param_6 + param_5) <= 18446744073709551615)) /\
           (result_2 = (param_6 + param_5)))))]);
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++
          [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
          b_buf <- b_result_1;
          buf <- result_3;
          offset <- result_2;
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++
          [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
          i <- (i + 1);
          trace_a128____squeeze_array_avx2 <-
          (trace_a128____squeeze_array_avx2 ++
          [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        }
      } else {
        
      }
      if ((0 < lO)) {
        param_3 <- st;
        (result_1, b_result_0, tmp__trace) <@ _keccakf1600_avx2 (param_3,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++ tmp__trace);
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++
        [(Assert, (is_init b_result_0 0 224))]);
        st <- result_1;
        b_param <- b_buf;
        param_2 <- buf;
        param_1 <- offset;
        param_0 <- lO;
        param <- st;
        (result_0, b_result, result, tmp__trace) <@ a128____dumpstate_array_avx2 (
        param_2, b_param, param_1, param_0, param,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++ tmp__trace);
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++
        [(Assert,
         (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
         (((0 <= (param_1 + param_0)) /\
          ((param_1 + param_0) <= 18446744073709551615)) /\
         (result = (param_1 + param_0)))))]);
        trace_a128____squeeze_array_avx2 <-
        (trace_a128____squeeze_array_avx2 ++
        [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
        b_buf <- b_result;
        buf <- result_0;
      } else {
        
      }
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (buf, b_buf, st, b_st, trace_a128____squeeze_array_avx2);
  }
  proc a128____dumpstate_array_avx2x4 (buf0:BArray128.t, b_buf0:BArray128.t,
                                       buf1:BArray128.t, b_buf1:BArray128.t,
                                       buf2:BArray128.t, b_buf2:BArray128.t,
                                       buf3:BArray128.t, b_buf3:BArray128.t,
                                       offset:int, lEN:int, st:BArray800.t,
                                       b_st:BArray800.t) : BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           BArray128.t *
                                                           int * trace = {
    var x0:W256.t;
    var x1:W256.t;
    var x2:W256.t;
    var x3:W256.t;
    var t0:W64.t;
    var t1:W64.t;
    var t2:W64.t;
    var t3:W64.t;
    var i:int;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var result:int;
    var result_0:int;
    var result_1:BArray128.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray128.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray128.t;
    var param_9:W64.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray128.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray128.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray128.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray128.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var b_result:BArray128.t;
    var b_param:BArray128.t;
    var b_result_0:BArray128.t;
    var b_param_0:BArray128.t;
    var b_result_1:BArray128.t;
    var b_param_1:BArray128.t;
    var b_result_2:BArray128.t;
    var b_param_2:BArray128.t;
    var trace_a128____dumpstate_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    trace_a128____dumpstate_array_avx2x4 <- [];
    trace_a128____dumpstate_array_avx2x4 <-
    (trace_a128____dumpstate_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ (is_init b_st 0 800)) /\
      ((offset + lEN) <= 128)) /\
     (lEN <= 200)))))]);
    trace_a128____dumpstate_array_avx2x4 <-
    (trace_a128____dumpstate_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    i <- 0;
    while ((i < (32 * (lEN %/ 32)))) {
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 32) <= 800)))]);
      x0 <- (BArray800.get256d st (4 * i));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 32)) /\ (((4 * i) + 32) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 32)) /\ ((((4 * i) + 32) + 32) <= 800)))]);
      x1 <- (BArray800.get256d st ((4 * i) + 32));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 64)) /\ (((4 * i) + 64) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 64)) /\ ((((4 * i) + 64) + 32) <= 800)))]);
      x2 <- (BArray800.get256d st ((4 * i) + 64));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 96)) /\ (((4 * i) + 96) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 96)) /\ ((((4 * i) + 96) + 32) <= 800)))]);
      x3 <- (BArray800.get256d st ((4 * i) + 96));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (i + 32)) /\ ((i + 32) <= 18446744073709551615)))]);
      i <- (i + 32);
      param_22 <- x0;
      param_21 <- x1;
      param_20 <- x2;
      param_19 <- x3;
      (result_14, result_13, result_12, result_11, tmp__trace) <@ __4u64x4_u256x4 (
      param_22, param_21, param_20, param_19);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++ tmp__trace);
      x0 <- result_14;
      x1 <- result_13;
      x2 <- result_12;
      x3 <- result_11;
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 128)))]);
      b_buf0 <-
      (BArray128.set256d b_buf0 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf0 <- (BArray128.set256d buf0 offset x0);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 128)))]);
      b_buf1 <-
      (BArray128.set256d b_buf1 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf1 <- (BArray128.set256d buf1 offset x1);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 128)))]);
      b_buf2 <-
      (BArray128.set256d b_buf2 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf2 <- (BArray128.set256d buf2 offset x2);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 128)))]);
      b_buf3 <-
      (BArray128.set256d b_buf3 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf3 <- (BArray128.set256d buf3 offset x3);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
      offset <- (offset + 32);
    }
    while ((i < (8 * (lEN %/ 8)))) {
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 8) <= 800)))]);
      t0 <- (BArray800.get64d st (4 * i));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 128)))]);
      b_buf0 <-
      (BArray128.set64d b_buf0 offset (W64.of_int 18446744073709551615));
      buf0 <- (BArray128.set64d buf0 offset t0);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 8)) /\ (((4 * i) + 8) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 8)) /\ ((((4 * i) + 8) + 8) <= 800)))]);
      t1 <- (BArray800.get64d st ((4 * i) + 8));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 128)))]);
      b_buf1 <-
      (BArray128.set64d b_buf1 offset (W64.of_int 18446744073709551615));
      buf1 <- (BArray128.set64d buf1 offset t1);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 16)) /\ (((4 * i) + 16) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 16)) /\ ((((4 * i) + 16) + 8) <= 800)))]);
      t2 <- (BArray800.get64d st ((4 * i) + 16));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 128)))]);
      b_buf2 <-
      (BArray128.set64d b_buf2 offset (W64.of_int 18446744073709551615));
      buf2 <- (BArray128.set64d buf2 offset t2);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 24)) /\ (((4 * i) + 24) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 24)) /\ ((((4 * i) + 24) + 8) <= 800)))]);
      t3 <- (BArray800.get64d st ((4 * i) + 24));
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 128)))]);
      b_buf3 <-
      (BArray128.set64d b_buf3 offset (W64.of_int 18446744073709551615));
      buf3 <- (BArray128.set64d buf3 offset t3);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (i + 8)) /\ ((i + 8) <= 18446744073709551615)))]);
      i <- (i + 8);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + 8)) /\ ((offset + 8) <= 18446744073709551615)))]);
      offset <- (offset + 8);
    }
    if ((0 < (lEN %% 8))) {
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 8) <= 800)))]);
      t0 <- (BArray800.get64d st (4 * i));
      b_param_2 <- b_buf0;
      param_18 <- buf0;
      param_17 <- offset;
      param_16 <- 0;
      param_15 <- (lEN %% 8);
      param_14 <- t0;
      (result_10, b_result_2, result_9, result_8, tmp__trace) <@ a128____awrite_subu64 (
      param_18, b_param_2, param_17, param_16, param_15, param_14);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_9 =
        (param_16 +
        ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                     param_15 : 8)))) /\
       (result_8 =
       (param_15 -
       ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                    param_15 : 8))))))]);
      b_buf0 <- b_result_2;
      buf0 <- result_10;
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 8)) /\ (((4 * i) + 8) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 8)) /\ ((((4 * i) + 8) + 8) <= 800)))]);
      t1 <- (BArray800.get64d st ((4 * i) + 8));
      b_param_1 <- b_buf1;
      param_13 <- buf1;
      param_12 <- offset;
      param_11 <- 0;
      param_10 <- (lEN %% 8);
      param_9 <- t1;
      (result_7, b_result_1, result_6, result_5, tmp__trace) <@ a128____awrite_subu64 (
      param_13, b_param_1, param_12, param_11, param_10, param_9);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_6 =
        (param_11 +
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8)))) /\
       (result_5 =
       (param_10 -
       ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                    param_10 : 8))))))]);
      b_buf1 <- b_result_1;
      buf1 <- result_7;
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 16)) /\ (((4 * i) + 16) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 16)) /\ ((((4 * i) + 16) + 8) <= 800)))]);
      t2 <- (BArray800.get64d st ((4 * i) + 16));
      b_param_0 <- b_buf2;
      param_8 <- buf2;
      param_7 <- offset;
      param_6 <- 0;
      param_5 <- (lEN %% 8);
      param_4 <- t2;
      (result_4, b_result_0, result_3, result_2, tmp__trace) <@ a128____awrite_subu64 (
      param_8, b_param_0, param_7, param_6, param_5, param_4);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_3 =
        (param_6 +
        ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8)))) /\
       (result_2 =
       (param_5 -
       ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8))))))]);
      b_buf2 <- b_result_0;
      buf2 <- result_4;
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 24)) /\ (((4 * i) + 24) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 24)) /\ ((((4 * i) + 24) + 8) <= 800)))]);
      t3 <- (BArray800.get64d st ((4 * i) + 24));
      b_param <- b_buf3;
      param_3 <- buf3;
      param_2 <- offset;
      param_1 <- 0;
      param_0 <- (lEN %% 8);
      param <- t3;
      (result_1, b_result, result_0, result, tmp__trace) <@ a128____awrite_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_0 =
        (param_1 +
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8)))) /\
       (result =
       (param_0 -
       ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))))]);
      b_buf3 <- b_result;
      buf3 <- result_1;
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (lEN %% 8)) /\ ((lEN %% 8) <= 18446744073709551615)))]);
      trace_a128____dumpstate_array_avx2x4 <-
      (trace_a128____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + (lEN %% 8))) /\
       ((offset + (lEN %% 8)) <= 18446744073709551615)))]);
      offset <- (offset + (lEN %% 8));
    } else {
      
    }
    return (buf0, b_buf0, buf1, b_buf1, buf2, b_buf2, buf3, b_buf3, offset,
           trace_a128____dumpstate_array_avx2x4);
  }
  proc a128____squeeze_array_avx2x4 (buf0:BArray128.t, b_buf0:BArray128.t,
                                     buf1:BArray128.t, b_buf1:BArray128.t,
                                     buf2:BArray128.t, b_buf2:BArray128.t,
                                     buf3:BArray128.t, b_buf3:BArray128.t,
                                     offset:int, lEN:int, st:BArray800.t,
                                     b_st:BArray800.t, rATE8:int) : BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    BArray128.t *
                                                                    int *
                                                                    BArray800.t *
                                                                    BArray800.t *
                                                                    trace = {
    var iTERS:int;
    var lO:int;
    var i:int;
    var param:BArray800.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray128.t;
    var param_3:BArray128.t;
    var param_4:BArray128.t;
    var param_5:BArray128.t;
    var result:int;
    var result_0:BArray128.t;
    var result_1:BArray128.t;
    var result_2:BArray128.t;
    var result_3:BArray128.t;
    var param_6:BArray800.t;
    var result_4:BArray800.t;
    var param_7:BArray800.t;
    var param_8:int;
    var param_9:int;
    var param_10:BArray128.t;
    var param_11:BArray128.t;
    var param_12:BArray128.t;
    var param_13:BArray128.t;
    var result_5:int;
    var result_6:BArray128.t;
    var result_7:BArray128.t;
    var result_8:BArray128.t;
    var result_9:BArray128.t;
    var param_14:BArray800.t;
    var result_10:BArray800.t;
    var b_result:BArray128.t;
    var b_result_0:BArray128.t;
    var b_result_1:BArray128.t;
    var b_result_2:BArray128.t;
    var b_param:BArray128.t;
    var b_param_0:BArray128.t;
    var b_param_1:BArray128.t;
    var b_param_2:BArray128.t;
    var b_result_3:BArray800.t;
    var b_result_4:BArray128.t;
    var b_result_5:BArray128.t;
    var b_result_6:BArray128.t;
    var b_result_7:BArray128.t;
    var b_param_3:BArray128.t;
    var b_param_4:BArray128.t;
    var b_param_5:BArray128.t;
    var b_param_6:BArray128.t;
    var b_result_8:BArray800.t;
    var trace_a128____squeeze_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    result_10 <- witness;
    trace_a128____squeeze_array_avx2x4 <- [];
    trace_a128____squeeze_array_avx2x4 <-
    (trace_a128____squeeze_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ (is_init b_st 0 800)) /\
       ((offset + lEN) <= 128)) /\
      (0 < rATE8)) /\
     (rATE8 < 200)))))]);
    trace_a128____squeeze_array_avx2x4 <-
    (trace_a128____squeeze_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    lO <- (lEN %% rATE8);
    if ((0 < lEN)) {
      if ((0 < iTERS)) {
        i <- 0;
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        while ((i < iTERS)) {
          param_14 <- st;
          (result_10, b_result_8, tmp__trace) <@ _keccakf1600_avx2x4 (
          param_14, (BArray800.init_arr (W8.of_int 255) 800));
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++ tmp__trace);
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++
          [(Assert, (is_init b_result_8 0 800))]);
          st <- result_10;
          b_param_6 <- b_buf0;
          param_13 <- buf0;
          b_param_5 <- b_buf1;
          param_12 <- buf1;
          b_param_4 <- b_buf2;
          param_11 <- buf2;
          b_param_3 <- b_buf3;
          param_10 <- buf3;
          param_9 <- offset;
          param_8 <- rATE8;
          param_7 <- st;
          (result_9, b_result_7, result_8, b_result_6, result_7, b_result_5,
          result_6, b_result_4, result_5, tmp__trace) <@ a128____dumpstate_array_avx2x4 (
          param_13, b_param_6, param_12, b_param_5, param_11, b_param_4,
          param_10, b_param_3, param_9, param_8, param_7,
          (BArray800.init_arr (W8.of_int 255) 800));
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++ tmp__trace);
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++
          [(Assert,
           (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
           (((0 <= (param_9 + param_8)) /\
            ((param_9 + param_8) <= 18446744073709551615)) /\
           (result_5 = (param_9 + param_8)))))]);
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++
          [(Assert, ((0 <= result_5) /\ (result_5 <= 18446744073709551615)))]);
          b_buf0 <- b_result_7;
          buf0 <- result_9;
          b_buf1 <- b_result_6;
          buf1 <- result_8;
          b_buf2 <- b_result_5;
          buf2 <- result_7;
          b_buf3 <- b_result_4;
          buf3 <- result_6;
          offset <- result_5;
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++
          [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
          i <- (i + 1);
          trace_a128____squeeze_array_avx2x4 <-
          (trace_a128____squeeze_array_avx2x4 ++
          [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
        }
      } else {
        
      }
      if ((0 < lO)) {
        param_6 <- st;
        (result_4, b_result_3, tmp__trace) <@ _keccakf1600_avx2x4 (param_6,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++ tmp__trace);
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++
        [(Assert, (is_init b_result_3 0 800))]);
        st <- result_4;
        b_param_2 <- b_buf0;
        param_5 <- buf0;
        b_param_1 <- b_buf1;
        param_4 <- buf1;
        b_param_0 <- b_buf2;
        param_3 <- buf2;
        b_param <- b_buf3;
        param_2 <- buf3;
        param_1 <- offset;
        param_0 <- lO;
        param <- st;
        (result_3, b_result_2, result_2, b_result_1, result_1, b_result_0,
        result_0, b_result, result, tmp__trace) <@ a128____dumpstate_array_avx2x4 (
        param_5, b_param_2, param_4, b_param_1, param_3, b_param_0, param_2,
        b_param, param_1, param_0, param,
        (BArray800.init_arr (W8.of_int 255) 800));
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++ tmp__trace);
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++
        [(Assert,
         (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
         (((0 <= (param_1 + param_0)) /\
          ((param_1 + param_0) <= 18446744073709551615)) /\
         (result = (param_1 + param_0)))))]);
        trace_a128____squeeze_array_avx2x4 <-
        (trace_a128____squeeze_array_avx2x4 ++
        [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
        b_buf0 <- b_result_2;
        buf0 <- result_3;
        b_buf1 <- b_result_1;
        buf1 <- result_2;
        b_buf2 <- b_result_0;
        buf2 <- result_1;
        b_buf3 <- b_result;
        buf3 <- result_0;
        offset <- result;
      } else {
        
      }
    } else {
      
    }
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (buf0, b_buf0, buf1, b_buf1, buf2, b_buf2, buf3, b_buf3, offset,
           st, b_st, trace_a128____squeeze_array_avx2x4);
  }
  proc a1568____aread_subu64 (buf:BArray1568.t, b_buf:BArray1568.t,
                              offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W64.t * trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a1568____aread_subu64:trace;
    trace_a1568____aread_subu64 <- [];
    trace_a1568____aread_subu64 <-
    (trace_a1568____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 1568)) : true))))))))))]);
    trace_a1568____aread_subu64 <-
    (trace_a1568____aread_subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1568____aread_subu64 <-
    (trace_a1568____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a1568____aread_subu64 <-
        (trace_a1568____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1568____aread_subu64 <-
        (trace_a1568____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1568____aread_subu64 <-
        (trace_a1568____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1568)))]);
        trace_a1568____aread_subu64 <-
        (trace_a1568____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray1568.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 1568)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray1568.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 1568)))]);
          trace_a1568____aread_subu64 <-
          (trace_a1568____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray1568.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a1568____aread_subu64 <-
            (trace_a1568____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a1568____aread_subu64 <-
            (trace_a1568____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a1568____aread_subu64 <-
            (trace_a1568____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 1568)))]);
            trace_a1568____aread_subu64 <-
            (trace_a1568____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray1568.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1568____aread_subu64);
  }
  proc a1568____aread_subu128 (buf:BArray1568.t, b_buf:BArray1568.t,
                               offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W128.t * trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1568.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1568.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1568.t;
    var b_param_0:BArray1568.t;
    var trace_a1568____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1568____aread_subu128 <- [];
    trace_a1568____aread_subu128 <-
    (trace_a1568____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 1568)) : true))))))))))]);
    trace_a1568____aread_subu128 <-
    (trace_a1568____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1568____aread_subu128 <-
    (trace_a1568____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a1568____aread_subu128 <-
        (trace_a1568____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1568____aread_subu128 <-
        (trace_a1568____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1568____aread_subu128 <-
        (trace_a1568____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1568)))]);
        trace_a1568____aread_subu128 <-
        (trace_a1568____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray1568.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1568)))]);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray1568.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1568____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++ tmp__trace);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1568____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++ tmp__trace);
          trace_a1568____aread_subu128 <-
          (trace_a1568____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1568____aread_subu128);
  }
  proc a1568____aread_subu256 (buf:BArray1568.t, b_buf:BArray1568.t,
                               offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W256.t * trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1568.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1568.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1568.t;
    var b_param_0:BArray1568.t;
    var trace_a1568____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1568____aread_subu256 <- [];
    trace_a1568____aread_subu256 <-
    (trace_a1568____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 1568)) : true))))))))))]);
    trace_a1568____aread_subu256 <-
    (trace_a1568____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1568____aread_subu256 <-
    (trace_a1568____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a1568____aread_subu256 <-
        (trace_a1568____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1568____aread_subu256 <-
        (trace_a1568____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1568____aread_subu256 <-
        (trace_a1568____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 1568)))]);
        trace_a1568____aread_subu256 <-
        (trace_a1568____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray1568.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1568)))]);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray1568.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1568____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++ tmp__trace);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1568____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++ tmp__trace);
          trace_a1568____aread_subu256 <-
          (trace_a1568____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1568____aread_subu256);
  }
  proc a1568____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                     buf:BArray1568.t, b_buf:BArray1568.t,
                                     offset:int, lEN:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1568.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray1568.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray1568.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray1568.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray1568.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray1568.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray1568.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray1568.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray1568.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray1568.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray1568.t;
    var b_param_0:BArray1568.t;
    var b_param_1:BArray1568.t;
    var b_param_2:BArray1568.t;
    var b_param_3:BArray1568.t;
    var b_param_4:BArray1568.t;
    var b_param_5:BArray1568.t;
    var b_param_6:BArray1568.t;
    var b_param_7:BArray1568.t;
    var b_param_8:BArray1568.t;
    var trace_a1568____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a1568____addstate_array_avx2 <- [];
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 1568)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a1568____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++ tmp__trace);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a1568____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++ tmp__trace);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a1568____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a1568____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a1568____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a1568____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a1568____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a1568____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a1568____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a1568____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++ tmp__trace);
      trace_a1568____addstate_array_avx2 <-
      (trace_a1568____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a1568____addstate_array_avx2 <-
    (trace_a1568____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a1568____addstate_array_avx2);
  }
  proc a1568____absorb_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                   buf:BArray1568.t, b_buf:BArray1568.t,
                                   offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray1568.t;
    var param_5:BArray224.t;
    var result_0:int;
    var result_1:BArray224.t;
    var param_6:BArray224.t;
    var result_2:BArray224.t;
    var param_7:int;
    var param_8:int;
    var param_9:int;
    var param_10:BArray1568.t;
    var param_11:BArray224.t;
    var result_3:int;
    var result_4:BArray224.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_param:BArray1568.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var b_param_0:BArray1568.t;
    var trace_a1568____absorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    result <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_4 <- witness;
    trace_a1568____absorb_array_avx2 <- [];
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 1568)) /\
        (0 < rATE8)) /\
       (rATE8 < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 224)))))]);
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    if ((0 < iTERS)) {
      i <- 0;
      trace_a1568____absorb_array_avx2 <-
      (trace_a1568____absorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_11 <- st;
        b_param_0 <- b_buf;
        param_10 <- buf;
        param_9 <- offset;
        param_8 <- rATE8;
        param_7 <- 0;
        (result_4, b_result_2, result_3, tmp__trace) <@ a1568____addstate_array_avx2 (
        param_11, (BArray224.init_arr (W8.of_int 255) 224), param_10,
        b_param_0, param_9, param_8, param_7);
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++ tmp__trace);
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++
        [(Assert,
         (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
         (((0 <= (param_9 + param_8)) /\
          ((param_9 + param_8) <= 18446744073709551615)) /\
         ((is_init b_result_2 0 224) /\ (result_3 = (param_9 + param_8))))))]);
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++
        [(Assert, ((0 <= result_3) /\ (result_3 <= 18446744073709551615)))]);
        st <- result_4;
        offset <- result_3;
        param_6 <- st;
        (result_2, b_result_1, tmp__trace) <@ _keccakf1600_avx2 (param_6,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++ tmp__trace);
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++
        [(Assert, (is_init b_result_1 0 224))]);
        st <- result_2;
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a1568____absorb_array_avx2 <-
        (trace_a1568____absorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
    } else {
      
    }
    lEN <- (lEN %% rATE8);
    param_5 <- st;
    b_param <- b_buf;
    param_4 <- buf;
    param_3 <- offset;
    param_2 <- lEN;
    param_1 <- tRAILB;
    (result_1, b_result_0, result_0, tmp__trace) <@ a1568____addstate_array_avx2 (
    param_5, (BArray224.init_arr (W8.of_int 255) 224), param_4, b_param,
    param_3, param_2, param_1);
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++ tmp__trace);
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++
    [(Assert,
     (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
     (((0 <= (param_3 + param_2)) /\
      ((param_3 + param_2) <= 18446744073709551615)) /\
     ((is_init b_result_0 0 224) /\ (result_0 = (param_3 + param_2))))))]);
    trace_a1568____absorb_array_avx2 <-
    (trace_a1568____absorb_array_avx2 ++
    [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
    st <- result_1;
    offset <- result_0;
    if ((tRAILB <> 0)) {
      param_0 <- st;
      param <- rATE8;
      (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
      (BArray224.init_arr (W8.of_int 255) 224), param);
      trace_a1568____absorb_array_avx2 <-
      (trace_a1568____absorb_array_avx2 ++ tmp__trace);
      trace_a1568____absorb_array_avx2 <-
      (trace_a1568____absorb_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a1568____absorb_array_avx2);
  }
  proc a1600____aread_subu64 (buf:BArray1600.t, b_buf:BArray1600.t,
                              offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W64.t * trace = {
    var w:W64.t;
    var iLEN:int;
    var t16:W64.t;
    var t8:W64.t;
    var trace_a1600____aread_subu64:trace;
    trace_a1600____aread_subu64 <- [];
    trace_a1600____aread_subu64 <-
    (trace_a1600____aread_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 8) ? lEN : 8)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 1600)) : true))))))))))]);
    trace_a1600____aread_subu64 <-
    (trace_a1600____aread_subu64 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1600____aread_subu64 <-
    (trace_a1600____aread_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iLEN <- lEN;
    if ((lEN <= 0)) {
      w <- (W64.of_int (tRAIL %% 256));
      tRAIL <- 0;
    } else {
      if ((8 <= lEN)) {
        trace_a1600____aread_subu64 <-
        (trace_a1600____aread_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1600____aread_subu64 <-
        (trace_a1600____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1600____aread_subu64 <-
        (trace_a1600____aread_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1600)))]);
        trace_a1600____aread_subu64 <-
        (trace_a1600____aread_subu64 ++
        [(Assert, (is_init b_buf (offset + dELTA) 8))]);
        w <- (BArray1600.get64d buf (offset + dELTA));
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 1600)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 4))]);
          w <- (zeroextu64 (BArray1600.get32d buf (offset + dELTA)));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          w <- (W64.of_int 0);
        }
        if ((2 <= lEN)) {
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 1600)))]);
          trace_a1600____aread_subu64 <-
          (trace_a1600____aread_subu64 ++
          [(Assert, (is_init b_buf (offset + dELTA) 2))]);
          t16 <- (zeroextu64 (BArray1600.get16d buf (offset + dELTA)));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          t16 <- (W64.of_int 0);
        }
        if (((1 <= lEN) \/ ((tRAIL %% 256) <> 0))) {
          if ((1 <= lEN)) {
            trace_a1600____aread_subu64 <-
            (trace_a1600____aread_subu64 ++
            [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
            trace_a1600____aread_subu64 <-
            (trace_a1600____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\
             ((offset + dELTA) <= 18446744073709551615)))]);
            trace_a1600____aread_subu64 <-
            (trace_a1600____aread_subu64 ++
            [(Assert,
             ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 1600)))]);
            trace_a1600____aread_subu64 <-
            (trace_a1600____aread_subu64 ++
            [(Assert, (is_init b_buf (offset + dELTA) 1))]);
            t8 <- (zeroextu64 (BArray1600.get8d buf (offset + dELTA)));
            if (((tRAIL %% 256) <> 0)) {
              t8 <- (t8 `|` (W64.of_int (256 * (tRAIL %% 256))));
            } else {
              
            }
            dELTA <- (dELTA + 1);
            lEN <- (lEN - 1);
          } else {
            t8 <- (W64.of_int (tRAIL %% 256));
          }
          tRAIL <- 0;
          t8 <- (t8 `<<` (W8.of_int (8 * (2 * ((iLEN %/ 2) %% 2)))));
          t16 <- (t16 `|` t8);
        } else {
          
        }
        t16 <- (t16 `<<` (W8.of_int (8 * (4 * ((iLEN %/ 4) %% 2)))));
        w <- (w `|` t16);
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1600____aread_subu64);
  }
  proc a1600____aread_subu128 (buf:BArray1600.t, b_buf:BArray1600.t,
                               offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W128.t * trace = {
    var w:W128.t;
    var t64:W64.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1600.t;
    var result:W64.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1600.t;
    var result_3:W64.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1600.t;
    var b_param_0:BArray1600.t;
    var trace_a1600____aread_subu128:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1600____aread_subu128 <- [];
    trace_a1600____aread_subu128 <-
    (trace_a1600____aread_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 16) ? lEN : 16)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 1600)) : true))))))))))]);
    trace_a1600____aread_subu128 <-
    (trace_a1600____aread_subu128 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1600____aread_subu128 <-
    (trace_a1600____aread_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_128);
    } else {
      if ((16 <= lEN)) {
        trace_a1600____aread_subu128 <-
        (trace_a1600____aread_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1600____aread_subu128 <-
        (trace_a1600____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1600____aread_subu128 <-
        (trace_a1600____aread_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1600)))]);
        trace_a1600____aread_subu128 <-
        (trace_a1600____aread_subu128 ++
        [(Assert, (is_init b_buf (offset + dELTA) 16))]);
        w <- (BArray1600.get128d buf (offset + dELTA));
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 1600)))]);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert, (is_init b_buf (offset + dELTA) 8))]);
          w <- (VMOV_64 (BArray1600.get64d buf (offset + dELTA)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1600____aread_subu64 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++ tmp__trace);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                        param_0 : 8)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                       param_0 : 8))))) /\
           (result_0 = ((8 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t64 <- result;
          w <- (VPINSR_2u64 w t64 (W8.of_int 1));
        } else {
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1600____aread_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++ tmp__trace);
          trace_a1600____aread_subu128 <-
          (trace_a1600____aread_subu128 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                        param_5 : 8)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8))))) /\
           (result_4 = ((8 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t64 <- result_3;
          w <- (zeroextu128 t64);
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1600____aread_subu128);
  }
  proc a1600____aread_subu256 (buf:BArray1600.t, b_buf:BArray1600.t,
                               offset:int, dELTA:int, lEN:int, tRAIL:int) : 
  int * int * int * W256.t * trace = {
    var w:W256.t;
    var t128_1:W128.t;
    var t128_0:W128.t;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray1600.t;
    var result:W128.t;
    var result_0:int;
    var result_1:int;
    var result_2:int;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1600.t;
    var result_3:W128.t;
    var result_4:int;
    var result_5:int;
    var result_6:int;
    var b_param:BArray1600.t;
    var b_param_0:BArray1600.t;
    var trace_a1600____aread_subu256:trace;
    b_param <- witness;
    b_param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    trace_a1600____aread_subu256 <- [];
    trace_a1600____aread_subu256 <-
    (trace_a1600____aread_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? ((((is_init b_buf (offset + dELTA) ((lEN < 32) ? lEN : 32)) /\
                    (0 <= dELTA)) /\
                   (0 <= (offset + dELTA))) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 1600)) : true))))))))))]);
    trace_a1600____aread_subu256 <-
    (trace_a1600____aread_subu256 ++
    [(Assert, ((0 <= tRAIL) /\ (tRAIL < 256)))]);
    trace_a1600____aread_subu256 <-
    (trace_a1600____aread_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if (((lEN <= 0) /\ ((tRAIL %% 256) = 0))) {
      w <- (set0_256);
    } else {
      if ((32 <= lEN)) {
        trace_a1600____aread_subu256 <-
        (trace_a1600____aread_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_a1600____aread_subu256 <-
        (trace_a1600____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_a1600____aread_subu256 <-
        (trace_a1600____aread_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 1600)))]);
        trace_a1600____aread_subu256 <-
        (trace_a1600____aread_subu256 ++
        [(Assert, (is_init b_buf (offset + dELTA) 32))]);
        w <- (BArray1600.get256d buf (offset + dELTA));
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        if ((16 <= lEN)) {
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 1600)))]);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert, (is_init b_buf (offset + dELTA) 16))]);
          t128_0 <- (BArray1600.get128d buf (offset + dELTA));
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- tRAIL;
          (result_2, result_1, result_0, result, tmp__trace) <@ a1600____aread_subu128 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++ tmp__trace);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert,
           (((result_2 =
             (param_1 +
             ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                          param_0 : 16)))) /\
            (result_1 =
            (param_0 -
            ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                         param_0 : 16))))) /\
           (result_0 = ((16 <= param_0) ? param : 0))))]);
          dELTA <- result_2;
          lEN <- result_1;
          tRAIL <- result_0;
          t128_1 <- result;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        } else {
          t128_1 <- (set0_128);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- tRAIL;
          (result_6, result_5, result_4, result_3, tmp__trace) <@ a1600____aread_subu128 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++ tmp__trace);
          trace_a1600____aread_subu256 <-
          (trace_a1600____aread_subu256 ++
          [(Assert,
           (((result_6 =
             (param_6 +
             ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                          param_5 : 16)))) /\
            (result_5 =
            (param_5 -
            ((((param_5 < 16) ? param_5 : 16) < 0) ? 0 : ((param_5 < 16) ? 
                                                         param_5 : 16))))) /\
           (result_4 = ((16 <= param_5) ? param_4 : 0))))]);
          dELTA <- result_6;
          lEN <- result_5;
          tRAIL <- result_4;
          t128_0 <- result_3;
          w <-
          (W256.of_int
          (((W128.to_uint t128_0) %% (2 ^ 128)) +
          ((2 ^ 128) * (W128.to_uint t128_1))));
        }
      }
    }
    return (dELTA, lEN, tRAIL, w, trace_a1600____aread_subu256);
  }
  proc a1600____addstate_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                     buf:BArray1600.t, b_buf:BArray1600.t,
                                     offset:int, lEN:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var dELTA:int;
    var t64:W64.t;
    var t128_0:W128.t;
    var r0:W256.t;
    var r1:W256.t;
    var t128_1:W128.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r2:W256.t;
    var r6:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:BArray224.t;
    var result:BArray224.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1600.t;
    var result_0:W256.t;
    var result_1:int;
    var result_2:int;
    var result_3:int;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray1600.t;
    var result_4:W64.t;
    var result_5:int;
    var result_6:int;
    var result_7:int;
    var param_14:int;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray1600.t;
    var result_8:W256.t;
    var result_9:int;
    var result_10:int;
    var result_11:int;
    var param_19:int;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray1600.t;
    var result_12:W64.t;
    var result_13:int;
    var result_14:int;
    var result_15:int;
    var param_24:int;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray1600.t;
    var result_16:W256.t;
    var result_17:int;
    var result_18:int;
    var result_19:int;
    var param_29:int;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray1600.t;
    var result_20:W64.t;
    var result_21:int;
    var result_22:int;
    var result_23:int;
    var param_34:int;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray1600.t;
    var result_24:W256.t;
    var result_25:int;
    var result_26:int;
    var result_27:int;
    var param_39:int;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray1600.t;
    var result_28:W64.t;
    var result_29:int;
    var result_30:int;
    var result_31:int;
    var param_44:int;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray1600.t;
    var result_32:W256.t;
    var result_33:int;
    var result_34:int;
    var result_35:int;
    var param_49:int;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray1600.t;
    var result_36:W64.t;
    var result_37:int;
    var result_38:int;
    var result_39:int;
    var b_result:BArray224.t;
    var b_param:BArray1600.t;
    var b_param_0:BArray1600.t;
    var b_param_1:BArray1600.t;
    var b_param_2:BArray1600.t;
    var b_param_3:BArray1600.t;
    var b_param_4:BArray1600.t;
    var b_param_5:BArray1600.t;
    var b_param_6:BArray1600.t;
    var b_param_7:BArray1600.t;
    var b_param_8:BArray1600.t;
    var trace_a1600____addstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_result <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result <- witness;
    trace_a1600____addstate_array_avx2 <- [];
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     ((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 1600)) /\
       (is_init b_buf offset lEN)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    b_param_8 <- b_buf;
    param_53 <- buf;
    param_52 <- offset;
    param_51 <- dELTA;
    param_50 <- lEN;
    param_49 <- tRAILB;
    (result_39, result_38, result_37, result_36, tmp__trace) <@ a1600____aread_subu64 (
    param_53, b_param_8, param_52, param_51, param_50, param_49);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++ tmp__trace);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert,
     (((result_39 =
       (param_51 +
       ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                    param_50 : 8)))) /\
      (result_38 =
      (param_50 -
      ((((param_50 < 8) ? param_50 : 8) < 0) ? 0 : ((param_50 < 8) ? 
                                                   param_50 : 8))))) /\
     (result_37 = ((8 <= param_50) ? param_49 : 0))))]);
    dELTA <- result_39;
    lEN <- result_38;
    tRAILB <- result_37;
    t64 <- result_36;
    t128_0 <- (zeroextu128 t64);
    r0 <- (VPBROADCAST_4u64 (truncateu64 t128_0));
    st <- (BArray224.set256 st 0 ((BArray224.get256 st 0) `^` r0));
    b_param_7 <- b_buf;
    param_48 <- buf;
    param_47 <- offset;
    param_46 <- dELTA;
    param_45 <- lEN;
    param_44 <- tRAILB;
    (result_35, result_34, result_33, result_32, tmp__trace) <@ a1600____aread_subu256 (
    param_48, b_param_7, param_47, param_46, param_45, param_44);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++ tmp__trace);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert,
     (((result_35 =
       (param_46 +
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32)))) /\
      (result_34 =
      (param_45 -
      ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                     param_45 : 32))))) /\
     (result_33 = ((32 <= param_45) ? param_44 : 0))))]);
    dELTA <- result_35;
    lEN <- result_34;
    tRAILB <- result_33;
    r1 <- result_32;
    st <- (BArray224.set256 st 1 ((BArray224.get256 st 1) `^` r1));
    if ((0 < lEN)) {
      b_param_6 <- b_buf;
      param_43 <- buf;
      param_42 <- offset;
      param_41 <- dELTA;
      param_40 <- lEN;
      param_39 <- tRAILB;
      (result_31, result_30, result_29, result_28, tmp__trace) <@ a1600____aread_subu64 (
      param_43, b_param_6, param_42, param_41, param_40, param_39);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_31 =
         (param_41 +
         ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                      param_40 : 8)))) /\
        (result_30 =
        (param_40 -
        ((((param_40 < 8) ? param_40 : 8) < 0) ? 0 : ((param_40 < 8) ? 
                                                     param_40 : 8))))) /\
       (result_29 = ((8 <= param_40) ? param_39 : 0))))]);
      dELTA <- result_31;
      lEN <- result_30;
      tRAILB <- result_29;
      t64 <- result_28;
      t128_1 <- (zeroextu128 t64);
      b_param_5 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- tRAILB;
      (result_27, result_26, result_25, result_24, tmp__trace) <@ a1600____aread_subu256 (
      param_38, b_param_5, param_37, param_36, param_35, param_34);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_27 =
         (param_36 +
         ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                        param_35 : 32)))) /\
        (result_26 =
        (param_35 -
        ((((param_35 < 32) ? param_35 : 32) < 0) ? 0 : ((param_35 < 32) ? 
                                                       param_35 : 32))))) /\
       (result_25 = ((32 <= param_35) ? param_34 : 0))))]);
      dELTA <- result_27;
      lEN <- result_26;
      tRAILB <- result_25;
      r3 <- result_24;
      b_param_4 <- b_buf;
      param_33 <- buf;
      param_32 <- offset;
      param_31 <- dELTA;
      param_30 <- lEN;
      param_29 <- tRAILB;
      (result_23, result_22, result_21, result_20, tmp__trace) <@ a1600____aread_subu64 (
      param_33, b_param_4, param_32, param_31, param_30, param_29);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_23 =
         (param_31 +
         ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                      param_30 : 8)))) /\
        (result_22 =
        (param_30 -
        ((((param_30 < 8) ? param_30 : 8) < 0) ? 0 : ((param_30 < 8) ? 
                                                     param_30 : 8))))) /\
       (result_21 = ((8 <= param_30) ? param_29 : 0))))]);
      dELTA <- result_23;
      lEN <- result_22;
      tRAILB <- result_21;
      t64 <- result_20;
      t128_0 <- (zeroextu128 t64);
      b_param_3 <- b_buf;
      param_28 <- buf;
      param_27 <- offset;
      param_26 <- dELTA;
      param_25 <- lEN;
      param_24 <- tRAILB;
      (result_19, result_18, result_17, result_16, tmp__trace) <@ a1600____aread_subu256 (
      param_28, b_param_3, param_27, param_26, param_25, param_24);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_19 =
         (param_26 +
         ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                        param_25 : 32)))) /\
        (result_18 =
        (param_25 -
        ((((param_25 < 32) ? param_25 : 32) < 0) ? 0 : ((param_25 < 32) ? 
                                                       param_25 : 32))))) /\
       (result_17 = ((32 <= param_25) ? param_24 : 0))))]);
      dELTA <- result_19;
      lEN <- result_18;
      tRAILB <- result_17;
      r4 <- result_16;
      b_param_2 <- b_buf;
      param_23 <- buf;
      param_22 <- offset;
      param_21 <- dELTA;
      param_20 <- lEN;
      param_19 <- tRAILB;
      (result_15, result_14, result_13, result_12, tmp__trace) <@ a1600____aread_subu64 (
      param_23, b_param_2, param_22, param_21, param_20, param_19);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_15 =
         (param_21 +
         ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                      param_20 : 8)))) /\
        (result_14 =
        (param_20 -
        ((((param_20 < 8) ? param_20 : 8) < 0) ? 0 : ((param_20 < 8) ? 
                                                     param_20 : 8))))) /\
       (result_13 = ((8 <= param_20) ? param_19 : 0))))]);
      dELTA <- result_15;
      lEN <- result_14;
      tRAILB <- result_13;
      t64 <- result_12;
      t128_1 <- (VPINSR_2u64 t128_1 t64 (W8.of_int 1));
      b_param_1 <- b_buf;
      param_18 <- buf;
      param_17 <- offset;
      param_16 <- dELTA;
      param_15 <- lEN;
      param_14 <- tRAILB;
      (result_11, result_10, result_9, result_8, tmp__trace) <@ a1600____aread_subu256 (
      param_18, b_param_1, param_17, param_16, param_15, param_14);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_11 =
         (param_16 +
         ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                        param_15 : 32)))) /\
        (result_10 =
        (param_15 -
        ((((param_15 < 32) ? param_15 : 32) < 0) ? 0 : ((param_15 < 32) ? 
                                                       param_15 : 32))))) /\
       (result_9 = ((32 <= param_15) ? param_14 : 0))))]);
      dELTA <- result_11;
      lEN <- result_10;
      tRAILB <- result_9;
      r5 <- result_8;
      b_param_0 <- b_buf;
      param_13 <- buf;
      param_12 <- offset;
      param_11 <- dELTA;
      param_10 <- lEN;
      param_9 <- tRAILB;
      (result_7, result_6, result_5, result_4, tmp__trace) <@ a1600____aread_subu64 (
      param_13, b_param_0, param_12, param_11, param_10, param_9);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_7 =
         (param_11 +
         ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                      param_10 : 8)))) /\
        (result_6 =
        (param_10 -
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8))))) /\
       (result_5 = ((8 <= param_10) ? param_9 : 0))))]);
      dELTA <- result_7;
      lEN <- result_6;
      tRAILB <- result_5;
      t64 <- result_4;
      t128_0 <- (VPINSR_2u64 t128_0 t64 (W8.of_int 1));
      r2 <-
      (W256.of_int
      (((W128.to_uint t128_0) %% (2 ^ 128)) +
      ((2 ^ 128) * (W128.to_uint t128_1))));
      st <- (BArray224.set256 st 2 ((BArray224.get256 st 2) `^` r2));
      b_param <- b_buf;
      param_8 <- buf;
      param_7 <- offset;
      param_6 <- dELTA;
      param_5 <- lEN;
      param_4 <- tRAILB;
      (result_3, result_2, result_1, result_0, tmp__trace) <@ a1600____aread_subu256 (
      param_8, b_param, param_7, param_6, param_5, param_4);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert,
       (((result_3 =
         (param_6 +
         ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                      param_5 : 32)))) /\
        (result_2 =
        (param_5 -
        ((((param_5 < 32) ? param_5 : 32) < 0) ? 0 : ((param_5 < 32) ? 
                                                     param_5 : 32))))) /\
       (result_1 = ((32 <= param_5) ? param_4 : 0))))]);
      dELTA <- result_3;
      r6 <- result_0;
      param_3 <- st;
      param_2 <- r3;
      param_1 <- r4;
      param_0 <- r5;
      param <- r6;
      (result, b_result, tmp__trace) <@ __addstate_r3456_avx2 (param_3,
      (BArray224.init_arr (W8.of_int 255) 224), param_2, param_1, param_0,
      param);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++ tmp__trace);
      trace_a1600____addstate_array_avx2 <-
      (trace_a1600____addstate_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_a1600____addstate_array_avx2 <-
    (trace_a1600____addstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a1600____addstate_array_avx2);
  }
  proc a1600____absorb_array_avx2 (st:BArray224.t, b_st:BArray224.t,
                                   buf:BArray1600.t, b_buf:BArray1600.t,
                                   offset:int, lEN:int, rATE8:int, tRAILB:int) : 
  BArray224.t * BArray224.t * int * trace = {
    var iTERS:int;
    var i:int;
    var param:int;
    var param_0:BArray224.t;
    var result:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:int;
    var param_4:BArray1600.t;
    var param_5:BArray224.t;
    var result_0:int;
    var result_1:BArray224.t;
    var param_6:BArray224.t;
    var result_2:BArray224.t;
    var param_7:int;
    var param_8:int;
    var param_9:int;
    var param_10:BArray1600.t;
    var param_11:BArray224.t;
    var result_3:int;
    var result_4:BArray224.t;
    var b_result:BArray224.t;
    var b_result_0:BArray224.t;
    var b_param:BArray1600.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var b_param_0:BArray1600.t;
    var trace_a1600____absorb_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    result <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_4 <- witness;
    trace_a1600____absorb_array_avx2 <- [];
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 1600)) /\
        (0 < rATE8)) /\
       (rATE8 < 200)) /\
      (is_init b_buf offset lEN)) /\
     (is_init b_st 0 224)))))]);
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++
    [(Assert, ((0 <= tRAILB) /\ (tRAILB < 256)))]);
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    iTERS <- (lEN %/ rATE8);
    if ((0 < iTERS)) {
      i <- 0;
      trace_a1600____absorb_array_avx2 <-
      (trace_a1600____absorb_array_avx2 ++
      [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      while ((i < iTERS)) {
        param_11 <- st;
        b_param_0 <- b_buf;
        param_10 <- buf;
        param_9 <- offset;
        param_8 <- rATE8;
        param_7 <- 0;
        (result_4, b_result_2, result_3, tmp__trace) <@ a1600____addstate_array_avx2 (
        param_11, (BArray224.init_arr (W8.of_int 255) 224), param_10,
        b_param_0, param_9, param_8, param_7);
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++ tmp__trace);
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++
        [(Assert,
         (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
         (((0 <= (param_9 + param_8)) /\
          ((param_9 + param_8) <= 18446744073709551615)) /\
         ((is_init b_result_2 0 224) /\ (result_3 = (param_9 + param_8))))))]);
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++
        [(Assert, ((0 <= result_3) /\ (result_3 <= 18446744073709551615)))]);
        st <- result_4;
        offset <- result_3;
        param_6 <- st;
        (result_2, b_result_1, tmp__trace) <@ _keccakf1600_avx2 (param_6,
        (BArray224.init_arr (W8.of_int 255) 224));
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++ tmp__trace);
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++
        [(Assert, (is_init b_result_1 0 224))]);
        st <- result_2;
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++
        [(Assert, ((0 <= (i + 1)) /\ ((i + 1) <= 18446744073709551615)))]);
        i <- (i + 1);
        trace_a1600____absorb_array_avx2 <-
        (trace_a1600____absorb_array_avx2 ++
        [(Assert, ((0 <= iTERS) /\ (iTERS <= 18446744073709551615)))]);
      }
    } else {
      
    }
    lEN <- (lEN %% rATE8);
    param_5 <- st;
    b_param <- b_buf;
    param_4 <- buf;
    param_3 <- offset;
    param_2 <- lEN;
    param_1 <- tRAILB;
    (result_1, b_result_0, result_0, tmp__trace) <@ a1600____addstate_array_avx2 (
    param_5, (BArray224.init_arr (W8.of_int 255) 224), param_4, b_param,
    param_3, param_2, param_1);
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++ tmp__trace);
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++
    [(Assert,
     (((0 <= param_2) /\ (param_2 <= 18446744073709551615)) /\
     (((0 <= (param_3 + param_2)) /\
      ((param_3 + param_2) <= 18446744073709551615)) /\
     ((is_init b_result_0 0 224) /\ (result_0 = (param_3 + param_2))))))]);
    trace_a1600____absorb_array_avx2 <-
    (trace_a1600____absorb_array_avx2 ++
    [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
    st <- result_1;
    offset <- result_0;
    if ((tRAILB <> 0)) {
      param_0 <- st;
      param <- rATE8;
      (result, b_result, tmp__trace) <@ __addratebit_avx2 (param_0,
      (BArray224.init_arr (W8.of_int 255) 224), param);
      trace_a1600____absorb_array_avx2 <-
      (trace_a1600____absorb_array_avx2 ++ tmp__trace);
      trace_a1600____absorb_array_avx2 <-
      (trace_a1600____absorb_array_avx2 ++
      [(Assert, (is_init b_result 0 224))]);
      st <- result;
    } else {
      
    }
    b_st <- (BArray224.init_arr (W8.of_int 255) 224);
    return (st, b_st, offset, trace_a1600____absorb_array_avx2);
  }
  proc aBUFLEN____awrite_subu64 (buf:BArray536.t, b_buf:BArray536.t,
                                 offset:int, dELTA:int, lEN:int, w:W64.t) : 
  BArray536.t * BArray536.t * int * int * trace = {
    var trace_aBUFLEN____awrite_subu64:trace;
    trace_aBUFLEN____awrite_subu64 <- [];
    trace_aBUFLEN____awrite_subu64 <-
    (trace_aBUFLEN____awrite_subu64 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 8) ? lEN : 8)) /\
      (((lEN < 8) ? lEN : 8) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 8) ? lEN : 8))) /\
      (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 8) ? lEN : 8)) <= 536)) : true))))))))]);
    trace_aBUFLEN____awrite_subu64 <-
    (trace_aBUFLEN____awrite_subu64 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((8 <= lEN)) {
        trace_aBUFLEN____awrite_subu64 <-
        (trace_aBUFLEN____awrite_subu64 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu64 <-
        (trace_aBUFLEN____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu64 <-
        (trace_aBUFLEN____awrite_subu64 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 536)))]);
        b_buf <-
        (BArray536.set64d b_buf (offset + dELTA)
        (W64.of_int 18446744073709551615));
        buf <- (BArray536.set64d buf (offset + dELTA) w);
        dELTA <- (dELTA + 8);
        lEN <- (lEN - 8);
      } else {
        if ((4 <= lEN)) {
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 4) <= 536)))]);
          b_buf <-
          (BArray536.set32d b_buf (offset + dELTA) (W32.of_int 4294967295));
          buf <- (BArray536.set32d buf (offset + dELTA) (truncateu32 w));
          w <- (w `>>` (W8.of_int 32));
          dELTA <- (dELTA + 4);
          lEN <- (lEN - 4);
        } else {
          
        }
        if ((2 <= lEN)) {
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 2) <= 536)))]);
          b_buf <-
          (BArray536.set16d b_buf (offset + dELTA) (W16.of_int 65535));
          buf <- (BArray536.set16d buf (offset + dELTA) (truncateu16 w));
          w <- (w `>>` (W8.of_int 16));
          dELTA <- (dELTA + 2);
          lEN <- (lEN - 2);
        } else {
          
        }
        if ((1 <= lEN)) {
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu64 <-
          (trace_aBUFLEN____awrite_subu64 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 1) <= 536)))]);
          b_buf <- (BArray536.set8d b_buf (offset + dELTA) (W8.of_int 255));
          buf <- (BArray536.set8d buf (offset + dELTA) (truncateu8 w));
          dELTA <- (dELTA + 1);
          lEN <- (lEN - 1);
        } else {
          
        }
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_aBUFLEN____awrite_subu64);
  }
  proc aBUFLEN____awrite_subu128 (buf:BArray536.t, b_buf:BArray536.t,
                                  offset:int, dELTA:int, lEN:int, w:W128.t) : 
  BArray536.t * BArray536.t * int * int * trace = {
    var t64:W64.t;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray536.t;
    var result:int;
    var result_0:int;
    var result_1:BArray536.t;
    var b_result:BArray536.t;
    var b_param:BArray536.t;
    var trace_aBUFLEN____awrite_subu128:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_aBUFLEN____awrite_subu128 <- [];
    trace_aBUFLEN____awrite_subu128 <-
    (trace_aBUFLEN____awrite_subu128 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 16) ? lEN : 16)) /\
      (((lEN < 16) ? lEN : 16) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 16) ? lEN : 16))) /\
      (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 16) ? lEN : 16)) <= 536)) : true))))))))]);
    trace_aBUFLEN____awrite_subu128 <-
    (trace_aBUFLEN____awrite_subu128 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((16 <= lEN)) {
        trace_aBUFLEN____awrite_subu128 <-
        (trace_aBUFLEN____awrite_subu128 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu128 <-
        (trace_aBUFLEN____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu128 <-
        (trace_aBUFLEN____awrite_subu128 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 536)))]);
        b_buf <-
        (BArray536.set128d b_buf (offset + dELTA)
        (W128.of_int 340282366920938463463374607431768211455));
        buf <- (BArray536.set128d buf (offset + dELTA) w);
        dELTA <- (dELTA + 16);
        lEN <- (lEN - 16);
      } else {
        if ((8 <= lEN)) {
          trace_aBUFLEN____awrite_subu128 <-
          (trace_aBUFLEN____awrite_subu128 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu128 <-
          (trace_aBUFLEN____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu128 <-
          (trace_aBUFLEN____awrite_subu128 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 8) <= 536)))]);
          b_buf <-
          (BArray536.set64d b_buf (offset + dELTA)
          (W64.of_int 18446744073709551615));
          buf <-
          (BArray536.set64d buf (offset + dELTA) (MOVV_64 (truncateu64 w)));
          dELTA <- (dELTA + 8);
          lEN <- (lEN - 8);
          w <- (VPUNPCKH_2u64 w w);
        } else {
          
        }
        t64 <- (truncateu64 w);
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t64;
        (result_1, b_result, result_0, result, tmp__trace) <@ aBUFLEN____awrite_subu64 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_aBUFLEN____awrite_subu128 <-
        (trace_aBUFLEN____awrite_subu128 ++ tmp__trace);
        trace_aBUFLEN____awrite_subu128 <-
        (trace_aBUFLEN____awrite_subu128 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                     param_0 : 8)))) /\
         (result =
         (param_0 -
         ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? 
                                                    param_0 : 8))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_aBUFLEN____awrite_subu128);
  }
  proc aBUFLEN____awrite_subu256 (buf:BArray536.t, b_buf:BArray536.t,
                                  offset:int, dELTA:int, lEN:int, w:W256.t) : 
  BArray536.t * BArray536.t * int * int * trace = {
    var t128:W128.t;
    var param:W128.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray536.t;
    var result:int;
    var result_0:int;
    var result_1:BArray536.t;
    var b_result:BArray536.t;
    var b_param:BArray536.t;
    var trace_aBUFLEN____awrite_subu256:trace;
    b_param <- witness;
    b_result <- witness;
    param_3 <- witness;
    result_1 <- witness;
    trace_aBUFLEN____awrite_subu256 <- [];
    trace_aBUFLEN____awrite_subu256 <-
    (trace_aBUFLEN____awrite_subu256 ++
    [(Assert,
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= dELTA) /\ (dELTA <= 18446744073709551615)) /\
     (((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)) /\
     (((0 <= ((lEN < 32) ? lEN : 32)) /\
      (((lEN < 32) ? lEN : 32) <= 18446744073709551615)) /\
     (((0 <= ((offset + dELTA) + ((lEN < 32) ? lEN : 32))) /\
      (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 18446744073709551615)) /\
     ((0 < lEN) ? (((0 <= (offset + dELTA)) /\ (0 <= dELTA)) /\
                  (((offset + dELTA) + ((lEN < 32) ? lEN : 32)) <= 536)) : true))))))))]);
    trace_aBUFLEN____awrite_subu256 <-
    (trace_aBUFLEN____awrite_subu256 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    if ((0 < lEN)) {
      if ((32 <= lEN)) {
        trace_aBUFLEN____awrite_subu256 <-
        (trace_aBUFLEN____awrite_subu256 ++
        [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu256 <-
        (trace_aBUFLEN____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\
         ((offset + dELTA) <= 18446744073709551615)))]);
        trace_aBUFLEN____awrite_subu256 <-
        (trace_aBUFLEN____awrite_subu256 ++
        [(Assert,
         ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 32) <= 536)))]);
        b_buf <-
        (BArray536.set256d b_buf (offset + dELTA)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        buf <- (BArray536.set256d buf (offset + dELTA) w);
        dELTA <- (dELTA + 32);
        lEN <- (lEN - 32);
      } else {
        t128 <- (truncateu128 w);
        if ((16 <= lEN)) {
          trace_aBUFLEN____awrite_subu256 <-
          (trace_aBUFLEN____awrite_subu256 ++
          [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu256 <-
          (trace_aBUFLEN____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\
           ((offset + dELTA) <= 18446744073709551615)))]);
          trace_aBUFLEN____awrite_subu256 <-
          (trace_aBUFLEN____awrite_subu256 ++
          [(Assert,
           ((0 <= (offset + dELTA)) /\ (((offset + dELTA) + 16) <= 536)))]);
          b_buf <-
          (BArray536.set128d b_buf (offset + dELTA)
          (W128.of_int 340282366920938463463374607431768211455));
          buf <- (BArray536.set128d buf (offset + dELTA) t128);
          dELTA <- (dELTA + 16);
          lEN <- (lEN - 16);
          t128 <- (VEXTRACTI128 w (W8.of_int 1));
        } else {
          
        }
        b_param <- b_buf;
        param_3 <- buf;
        param_2 <- offset;
        param_1 <- dELTA;
        param_0 <- lEN;
        param <- t128;
        (result_1, b_result, result_0, result, tmp__trace) <@ aBUFLEN____awrite_subu128 (
        param_3, b_param, param_2, param_1, param_0, param);
        trace_aBUFLEN____awrite_subu256 <-
        (trace_aBUFLEN____awrite_subu256 ++ tmp__trace);
        trace_aBUFLEN____awrite_subu256 <-
        (trace_aBUFLEN____awrite_subu256 ++
        [(Assert,
         ((result_0 =
          (param_1 +
          ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                       param_0 : 16)))) /\
         (result =
         (param_0 -
         ((((param_0 < 16) ? param_0 : 16) < 0) ? 0 : ((param_0 < 16) ? 
                                                      param_0 : 16))))))]);
        b_buf <- b_result;
        buf <- result_1;
        dELTA <- result_0;
        lEN <- result;
      }
    } else {
      
    }
    return (buf, b_buf, dELTA, lEN, trace_aBUFLEN____awrite_subu256);
  }
  proc aBUFLEN____dumpstate_array_avx2 (buf:BArray536.t, b_buf:BArray536.t,
                                        offset:int, lEN:int, st:BArray224.t,
                                        b_st:BArray224.t) : BArray536.t *
                                                            BArray536.t *
                                                            int * trace = {
    var dELTA:int;
    var t128_0:W128.t;
    var t128_1:W128.t;
    var t:W64.t;
    var t256_0:W256.t;
    var t256_1:W256.t;
    var t256_2:W256.t;
    var t256_3:W256.t;
    var t256_4:W256.t;
    var param:W256.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray536.t;
    var result:int;
    var result_0:int;
    var result_1:BArray536.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray536.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray536.t;
    var param_9:W256.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray536.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray536.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray536.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray536.t;
    var param_19:W256.t;
    var param_20:int;
    var param_21:int;
    var param_22:int;
    var param_23:BArray536.t;
    var result_11:int;
    var result_12:int;
    var result_13:BArray536.t;
    var param_24:W64.t;
    var param_25:int;
    var param_26:int;
    var param_27:int;
    var param_28:BArray536.t;
    var result_14:int;
    var result_15:int;
    var result_16:BArray536.t;
    var param_29:W256.t;
    var param_30:int;
    var param_31:int;
    var param_32:int;
    var param_33:BArray536.t;
    var result_17:int;
    var result_18:int;
    var result_19:BArray536.t;
    var param_34:W64.t;
    var param_35:int;
    var param_36:int;
    var param_37:int;
    var param_38:BArray536.t;
    var result_20:int;
    var result_21:int;
    var result_22:BArray536.t;
    var param_39:W256.t;
    var param_40:int;
    var param_41:int;
    var param_42:int;
    var param_43:BArray536.t;
    var result_23:int;
    var result_24:int;
    var result_25:BArray536.t;
    var param_44:W256.t;
    var param_45:int;
    var param_46:int;
    var param_47:int;
    var param_48:BArray536.t;
    var result_26:int;
    var result_27:int;
    var result_28:BArray536.t;
    var param_49:W256.t;
    var param_50:int;
    var param_51:int;
    var param_52:int;
    var param_53:BArray536.t;
    var result_29:int;
    var result_30:int;
    var result_31:BArray536.t;
    var b_result:BArray536.t;
    var b_param:BArray536.t;
    var b_result_0:BArray536.t;
    var b_param_0:BArray536.t;
    var b_result_1:BArray536.t;
    var b_param_1:BArray536.t;
    var b_result_2:BArray536.t;
    var b_param_2:BArray536.t;
    var b_result_3:BArray536.t;
    var b_param_3:BArray536.t;
    var b_result_4:BArray536.t;
    var b_param_4:BArray536.t;
    var b_result_5:BArray536.t;
    var b_param_5:BArray536.t;
    var b_result_6:BArray536.t;
    var b_param_6:BArray536.t;
    var b_result_7:BArray536.t;
    var b_param_7:BArray536.t;
    var b_result_8:BArray536.t;
    var b_param_8:BArray536.t;
    var b_result_9:BArray536.t;
    var b_param_9:BArray536.t;
    var trace_aBUFLEN____dumpstate_array_avx2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    param_23 <- witness;
    param_28 <- witness;
    param_33 <- witness;
    param_38 <- witness;
    param_43 <- witness;
    param_48 <- witness;
    param_53 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_13 <- witness;
    result_16 <- witness;
    result_19 <- witness;
    result_22 <- witness;
    result_25 <- witness;
    result_28 <- witness;
    result_31 <- witness;
    trace_aBUFLEN____dumpstate_array_avx2 <- [];
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ ((offset + lEN) <= 536)) /\
      (is_init b_st 0 224)) /\
     (lEN <= 200)))))]);
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    dELTA <- 0;
    if ((8 <= lEN)) {
      b_param_8 <- b_buf;
      param_48 <- buf;
      param_47 <- offset;
      param_46 <- dELTA;
      param_45 <- 8;
      param_44 <- (BArray224.get256 st 0);
      (result_28, b_result_8, result_27, result_26, tmp__trace) <@ aBUFLEN____awrite_subu256 (
      param_48, b_param_8, param_47, param_46, param_45, param_44);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++
      [(Assert,
       ((result_27 =
        (param_46 +
        ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                       param_45 : 32)))) /\
       (result_26 =
       (param_45 -
       ((((param_45 < 32) ? param_45 : 32) < 0) ? 0 : ((param_45 < 32) ? 
                                                      param_45 : 32))))))]);
      b_buf <- b_result_8;
      buf <- result_28;
      dELTA <- result_27;
      lEN <- (lEN - 8);
    } else {
      b_param_9 <- b_buf;
      param_53 <- buf;
      param_52 <- offset;
      param_51 <- dELTA;
      param_50 <- lEN;
      param_49 <- (BArray224.get256 st 0);
      (result_31, b_result_9, result_30, result_29, tmp__trace) <@ aBUFLEN____awrite_subu256 (
      param_53, b_param_9, param_52, param_51, param_50, param_49);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++
      [(Assert,
       ((result_30 =
        (param_51 +
        ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                       param_50 : 32)))) /\
       (result_29 =
       (param_50 -
       ((((param_50 < 32) ? param_50 : 32) < 0) ? 0 : ((param_50 < 32) ? 
                                                      param_50 : 32))))))]);
      b_buf <- b_result_9;
      buf <- result_31;
      dELTA <- result_30;
      lEN <- result_29;
    }
    b_param_7 <- b_buf;
    param_43 <- buf;
    param_42 <- offset;
    param_41 <- dELTA;
    param_40 <- lEN;
    param_39 <- (BArray224.get256 st 1);
    (result_25, b_result_7, result_24, result_23, tmp__trace) <@ aBUFLEN____awrite_subu256 (
    param_43, b_param_7, param_42, param_41, param_40, param_39);
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++
    [(Assert,
     ((result_24 =
      (param_41 +
      ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                     param_40 : 32)))) /\
     (result_23 =
     (param_40 -
     ((((param_40 < 32) ? param_40 : 32) < 0) ? 0 : ((param_40 < 32) ? 
                                                    param_40 : 32))))))]);
    b_buf <- b_result_7;
    buf <- result_25;
    dELTA <- result_24;
    lEN <- result_23;
    if ((0 < lEN)) {
      t128_0 <- (truncateu128 (BArray224.get256 st 2));
      t128_1 <- (VEXTRACTI128 (BArray224.get256 st 2) (W8.of_int 1));
      t <- (truncateu64 t128_1);
      b_param_6 <- b_buf;
      param_38 <- buf;
      param_37 <- offset;
      param_36 <- dELTA;
      param_35 <- lEN;
      param_34 <- t;
      (result_22, b_result_6, result_21, result_20, tmp__trace) <@ aBUFLEN____awrite_subu64 (
      param_38, b_param_6, param_37, param_36, param_35, param_34);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2 <-
      (trace_aBUFLEN____dumpstate_array_avx2 ++
      [(Assert,
       ((result_21 =
        (param_36 +
        ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                     param_35 : 8)))) /\
       (result_20 =
       (param_35 -
       ((((param_35 < 8) ? param_35 : 8) < 0) ? 0 : ((param_35 < 8) ? 
                                                    param_35 : 8))))))]);
      b_buf <- b_result_6;
      buf <- result_22;
      dELTA <- result_21;
      lEN <- result_20;
      t128_1 <- (VPUNPCKH_2u64 t128_1 t128_1);
      if ((0 < lEN)) {
        t256_0 <-
        (VPBLEND_8u32 (BArray224.get256 st 3) (BArray224.get256 st 4)
        (W8.of_int 240));
        t256_1 <-
        (VPBLEND_8u32 (BArray224.get256 st 4) (BArray224.get256 st 3)
        (W8.of_int 240));
        t256_2 <-
        (VPBLEND_8u32 (BArray224.get256 st 5) (BArray224.get256 st 6)
        (W8.of_int 240));
        t256_3 <-
        (VPBLEND_8u32 (BArray224.get256 st 6) (BArray224.get256 st 5)
        (W8.of_int 240));
        t256_4 <- (VPBLEND_8u32 t256_0 t256_3 (W8.of_int 195));
        b_param_5 <- b_buf;
        param_33 <- buf;
        param_32 <- offset;
        param_31 <- dELTA;
        param_30 <- lEN;
        param_29 <- t256_4;
        (result_19, b_result_5, result_18, result_17, tmp__trace) <@ 
        aBUFLEN____awrite_subu256 (param_33, b_param_5, param_32, param_31,
        param_30, param_29);
        trace_aBUFLEN____dumpstate_array_avx2 <-
        (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
        trace_aBUFLEN____dumpstate_array_avx2 <-
        (trace_aBUFLEN____dumpstate_array_avx2 ++
        [(Assert,
         ((result_18 =
          (param_31 +
          ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                         param_30 : 32)))) /\
         (result_17 =
         (param_30 -
         ((((param_30 < 32) ? param_30 : 32) < 0) ? 0 : ((param_30 < 32) ? 
                                                        param_30 : 32))))))]);
        b_buf <- b_result_5;
        buf <- result_19;
        dELTA <- result_18;
        lEN <- result_17;
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_4 <- b_buf;
          param_28 <- buf;
          param_27 <- offset;
          param_26 <- dELTA;
          param_25 <- lEN;
          param_24 <- t;
          (result_16, b_result_4, result_15, result_14, tmp__trace) <@ 
          aBUFLEN____awrite_subu64 (param_28, b_param_4, param_27, param_26,
          param_25, param_24);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_15 =
            (param_26 +
            ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                         param_25 : 8)))) /\
           (result_14 =
           (param_25 -
           ((((param_25 < 8) ? param_25 : 8) < 0) ? 0 : ((param_25 < 8) ? 
                                                        param_25 : 8))))))]);
          b_buf <- b_result_4;
          buf <- result_16;
          dELTA <- result_15;
          lEN <- result_14;
          t128_0 <- (VPUNPCKH_2u64 t128_0 t128_0);
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_3 t256_1 (W8.of_int 195));
          b_param_3 <- b_buf;
          param_23 <- buf;
          param_22 <- offset;
          param_21 <- dELTA;
          param_20 <- lEN;
          param_19 <- t256_4;
          (result_13, b_result_3, result_12, result_11, tmp__trace) <@ 
          aBUFLEN____awrite_subu256 (param_23, b_param_3, param_22, param_21,
          param_20, param_19);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_12 =
            (param_21 +
            ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                           param_20 : 32)))) /\
           (result_11 =
           (param_20 -
           ((((param_20 < 32) ? param_20 : 32) < 0) ? 0 : ((param_20 < 32) ? 
                                                          param_20 : 32))))))]);
          b_buf <- b_result_3;
          buf <- result_13;
          dELTA <- result_12;
          lEN <- result_11;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_1);
          b_param_2 <- b_buf;
          param_18 <- buf;
          param_17 <- offset;
          param_16 <- dELTA;
          param_15 <- lEN;
          param_14 <- t;
          (result_10, b_result_2, result_9, result_8, tmp__trace) <@ 
          aBUFLEN____awrite_subu64 (param_18, b_param_2, param_17, param_16,
          param_15, param_14);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_9 =
            (param_16 +
            ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                         param_15 : 8)))) /\
           (result_8 =
           (param_15 -
           ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                        param_15 : 8))))))]);
          b_buf <- b_result_2;
          buf <- result_10;
          dELTA <- result_9;
          lEN <- result_8;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_2 t256_0 (W8.of_int 195));
          b_param_1 <- b_buf;
          param_13 <- buf;
          param_12 <- offset;
          param_11 <- dELTA;
          param_10 <- lEN;
          param_9 <- t256_4;
          (result_7, b_result_1, result_6, result_5, tmp__trace) <@ aBUFLEN____awrite_subu256 (
          param_13, b_param_1, param_12, param_11, param_10, param_9);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_6 =
            (param_11 +
            ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                           param_10 : 32)))) /\
           (result_5 =
           (param_10 -
           ((((param_10 < 32) ? param_10 : 32) < 0) ? 0 : ((param_10 < 32) ? 
                                                          param_10 : 32))))))]);
          b_buf <- b_result_1;
          buf <- result_7;
          dELTA <- result_6;
          lEN <- result_5;
        } else {
          
        }
        if ((0 < lEN)) {
          t <- (truncateu64 t128_0);
          b_param_0 <- b_buf;
          param_8 <- buf;
          param_7 <- offset;
          param_6 <- dELTA;
          param_5 <- lEN;
          param_4 <- t;
          (result_4, b_result_0, result_3, result_2, tmp__trace) <@ aBUFLEN____awrite_subu64 (
          param_8, b_param_0, param_7, param_6, param_5, param_4);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_3 =
            (param_6 +
            ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                       param_5 : 8)))) /\
           (result_2 =
           (param_5 -
           ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? 
                                                      param_5 : 8))))))]);
          b_buf <- b_result_0;
          buf <- result_4;
          dELTA <- result_3;
          lEN <- result_2;
        } else {
          
        }
        if ((0 < lEN)) {
          t256_4 <- (VPBLEND_8u32 t256_1 t256_2 (W8.of_int 195));
          b_param <- b_buf;
          param_3 <- buf;
          param_2 <- offset;
          param_1 <- dELTA;
          param_0 <- lEN;
          param <- t256_4;
          (result_1, b_result, result_0, result, tmp__trace) <@ aBUFLEN____awrite_subu256 (
          param_3, b_param, param_2, param_1, param_0, param);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++ tmp__trace);
          trace_aBUFLEN____dumpstate_array_avx2 <-
          (trace_aBUFLEN____dumpstate_array_avx2 ++
          [(Assert,
           ((result_0 =
            (param_1 +
            ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                         param_0 : 32)))) /\
           (result =
           (param_0 -
           ((((param_0 < 32) ? param_0 : 32) < 0) ? 0 : ((param_0 < 32) ? 
                                                        param_0 : 32))))))]);
          b_buf <- b_result;
          buf <- result_1;
          dELTA <- result_0;
        } else {
          
        }
      } else {
        
      }
    } else {
      
    }
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++
    [(Assert, ((0 <= dELTA) /\ (dELTA <= 18446744073709551615)))]);
    trace_aBUFLEN____dumpstate_array_avx2 <-
    (trace_aBUFLEN____dumpstate_array_avx2 ++
    [(Assert,
     ((0 <= (offset + dELTA)) /\ ((offset + dELTA) <= 18446744073709551615)))]);
    offset <- (offset + dELTA);
    return (buf, b_buf, offset, trace_aBUFLEN____dumpstate_array_avx2);
  }
  proc aBUFLEN____dumpstate_array_avx2x4 (buf0:BArray536.t,
                                          b_buf0:BArray536.t,
                                          buf1:BArray536.t,
                                          b_buf1:BArray536.t,
                                          buf2:BArray536.t,
                                          b_buf2:BArray536.t,
                                          buf3:BArray536.t,
                                          b_buf3:BArray536.t, offset:int,
                                          lEN:int, st:BArray800.t,
                                          b_st:BArray800.t) : BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              BArray536.t *
                                                              int * trace = {
    var x0:W256.t;
    var x1:W256.t;
    var x2:W256.t;
    var x3:W256.t;
    var t0:W64.t;
    var t1:W64.t;
    var t2:W64.t;
    var t3:W64.t;
    var i:int;
    var param:W64.t;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray536.t;
    var result:int;
    var result_0:int;
    var result_1:BArray536.t;
    var param_4:W64.t;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray536.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray536.t;
    var param_9:W64.t;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray536.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray536.t;
    var param_14:W64.t;
    var param_15:int;
    var param_16:int;
    var param_17:int;
    var param_18:BArray536.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray536.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var b_result:BArray536.t;
    var b_param:BArray536.t;
    var b_result_0:BArray536.t;
    var b_param_0:BArray536.t;
    var b_result_1:BArray536.t;
    var b_param_1:BArray536.t;
    var b_result_2:BArray536.t;
    var b_param_2:BArray536.t;
    var trace_aBUFLEN____dumpstate_array_avx2x4:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_18 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    trace_aBUFLEN____dumpstate_array_avx2x4 <- [];
    trace_aBUFLEN____dumpstate_array_avx2x4 <-
    (trace_aBUFLEN____dumpstate_array_avx2x4 ++
    [(Assert,
     (((0 <= lEN) /\ (lEN <= 18446744073709551615)) /\
     (((0 <= (offset + lEN)) /\ ((offset + lEN) <= 18446744073709551615)) /\
     (((((0 <= offset) /\ (0 <= lEN)) /\ (is_init b_st 0 800)) /\
      ((offset + lEN) <= 536)) /\
     (lEN <= 200)))))]);
    trace_aBUFLEN____dumpstate_array_avx2x4 <-
    (trace_aBUFLEN____dumpstate_array_avx2x4 ++
    [(Assert, ((0 <= offset) /\ (offset <= 18446744073709551615)))]);
    i <- 0;
    while ((i < (32 * (lEN %/ 32)))) {
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 32) <= 800)))]);
      x0 <- (BArray800.get256d st (4 * i));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 32)) /\ (((4 * i) + 32) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 32)) /\ ((((4 * i) + 32) + 32) <= 800)))]);
      x1 <- (BArray800.get256d st ((4 * i) + 32));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 64)) /\ (((4 * i) + 64) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 64)) /\ ((((4 * i) + 64) + 32) <= 800)))]);
      x2 <- (BArray800.get256d st ((4 * i) + 64));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 96)) /\ (((4 * i) + 96) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 96)) /\ ((((4 * i) + 96) + 32) <= 800)))]);
      x3 <- (BArray800.get256d st ((4 * i) + 96));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (i + 32)) /\ ((i + 32) <= 18446744073709551615)))]);
      i <- (i + 32);
      param_22 <- x0;
      param_21 <- x1;
      param_20 <- x2;
      param_19 <- x3;
      (result_14, result_13, result_12, result_11, tmp__trace) <@ __4u64x4_u256x4 (
      param_22, param_21, param_20, param_19);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++ tmp__trace);
      x0 <- result_14;
      x1 <- result_13;
      x2 <- result_12;
      x3 <- result_11;
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 536)))]);
      b_buf0 <-
      (BArray536.set256d b_buf0 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf0 <- (BArray536.set256d buf0 offset x0);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 536)))]);
      b_buf1 <-
      (BArray536.set256d b_buf1 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf1 <- (BArray536.set256d buf1 offset x1);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 536)))]);
      b_buf2 <-
      (BArray536.set256d b_buf2 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf2 <- (BArray536.set256d buf2 offset x2);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 32) <= 536)))]);
      b_buf3 <-
      (BArray536.set256d b_buf3 offset
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      buf3 <- (BArray536.set256d buf3 offset x3);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + 32)) /\ ((offset + 32) <= 18446744073709551615)))]);
      offset <- (offset + 32);
    }
    while ((i < (8 * (lEN %/ 8)))) {
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 8) <= 800)))]);
      t0 <- (BArray800.get64d st (4 * i));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 536)))]);
      b_buf0 <-
      (BArray536.set64d b_buf0 offset (W64.of_int 18446744073709551615));
      buf0 <- (BArray536.set64d buf0 offset t0);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 8)) /\ (((4 * i) + 8) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 8)) /\ ((((4 * i) + 8) + 8) <= 800)))]);
      t1 <- (BArray800.get64d st ((4 * i) + 8));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 536)))]);
      b_buf1 <-
      (BArray536.set64d b_buf1 offset (W64.of_int 18446744073709551615));
      buf1 <- (BArray536.set64d buf1 offset t1);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 16)) /\ (((4 * i) + 16) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 16)) /\ ((((4 * i) + 16) + 8) <= 800)))]);
      t2 <- (BArray800.get64d st ((4 * i) + 16));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 536)))]);
      b_buf2 <-
      (BArray536.set64d b_buf2 offset (W64.of_int 18446744073709551615));
      buf2 <- (BArray536.set64d buf2 offset t2);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 24)) /\ (((4 * i) + 24) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 24)) /\ ((((4 * i) + 24) + 8) <= 800)))]);
      t3 <- (BArray800.get64d st ((4 * i) + 24));
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= offset) /\ ((offset + 8) <= 536)))]);
      b_buf3 <-
      (BArray536.set64d b_buf3 offset (W64.of_int 18446744073709551615));
      buf3 <- (BArray536.set64d buf3 offset t3);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (i + 8)) /\ ((i + 8) <= 18446744073709551615)))]);
      i <- (i + 8);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + 8)) /\ ((offset + 8) <= 18446744073709551615)))]);
      offset <- (offset + 8);
    }
    if ((0 < (lEN %% 8))) {
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ (((4 * i) + 8) <= 800)))]);
      t0 <- (BArray800.get64d st (4 * i));
      b_param_2 <- b_buf0;
      param_18 <- buf0;
      param_17 <- offset;
      param_16 <- 0;
      param_15 <- (lEN %% 8);
      param_14 <- t0;
      (result_10, b_result_2, result_9, result_8, tmp__trace) <@ aBUFLEN____awrite_subu64 (
      param_18, b_param_2, param_17, param_16, param_15, param_14);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_9 =
        (param_16 +
        ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                     param_15 : 8)))) /\
       (result_8 =
       (param_15 -
       ((((param_15 < 8) ? param_15 : 8) < 0) ? 0 : ((param_15 < 8) ? 
                                                    param_15 : 8))))))]);
      b_buf0 <- b_result_2;
      buf0 <- result_10;
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 8)) /\ (((4 * i) + 8) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 8)) /\ ((((4 * i) + 8) + 8) <= 800)))]);
      t1 <- (BArray800.get64d st ((4 * i) + 8));
      b_param_1 <- b_buf1;
      param_13 <- buf1;
      param_12 <- offset;
      param_11 <- 0;
      param_10 <- (lEN %% 8);
      param_9 <- t1;
      (result_7, b_result_1, result_6, result_5, tmp__trace) <@ aBUFLEN____awrite_subu64 (
      param_13, b_param_1, param_12, param_11, param_10, param_9);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_6 =
        (param_11 +
        ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                     param_10 : 8)))) /\
       (result_5 =
       (param_10 -
       ((((param_10 < 8) ? param_10 : 8) < 0) ? 0 : ((param_10 < 8) ? 
                                                    param_10 : 8))))))]);
      b_buf1 <- b_result_1;
      buf1 <- result_7;
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 16)) /\ (((4 * i) + 16) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 16)) /\ ((((4 * i) + 16) + 8) <= 800)))]);
      t2 <- (BArray800.get64d st ((4 * i) + 16));
      b_param_0 <- b_buf2;
      param_8 <- buf2;
      param_7 <- offset;
      param_6 <- 0;
      param_5 <- (lEN %% 8);
      param_4 <- t2;
      (result_4, b_result_0, result_3, result_2, tmp__trace) <@ aBUFLEN____awrite_subu64 (
      param_8, b_param_0, param_7, param_6, param_5, param_4);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_3 =
        (param_6 +
        ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8)))) /\
       (result_2 =
       (param_5 -
       ((((param_5 < 8) ? param_5 : 8) < 0) ? 0 : ((param_5 < 8) ? param_5 : 8))))))]);
      b_buf2 <- b_result_0;
      buf2 <- result_4;
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (4 * i)) /\ ((4 * i) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= ((4 * i) + 24)) /\ (((4 * i) + 24) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= ((4 * i) + 24)) /\ ((((4 * i) + 24) + 8) <= 800)))]);
      t3 <- (BArray800.get64d st ((4 * i) + 24));
      b_param <- b_buf3;
      param_3 <- buf3;
      param_2 <- offset;
      param_1 <- 0;
      param_0 <- (lEN %% 8);
      param <- t3;
      (result_1, b_result, result_0, result, tmp__trace) <@ aBUFLEN____awrite_subu64 (
      param_3, b_param, param_2, param_1, param_0, param);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++ tmp__trace);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((result_0 =
        (param_1 +
        ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8)))) /\
       (result =
       (param_0 -
       ((((param_0 < 8) ? param_0 : 8) < 0) ? 0 : ((param_0 < 8) ? param_0 : 8))))))]);
      b_buf3 <- b_result;
      buf3 <- result_1;
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert, ((0 <= (lEN %% 8)) /\ ((lEN %% 8) <= 18446744073709551615)))]);
      trace_aBUFLEN____dumpstate_array_avx2x4 <-
      (trace_aBUFLEN____dumpstate_array_avx2x4 ++
      [(Assert,
       ((0 <= (offset + (lEN %% 8))) /\
       ((offset + (lEN %% 8)) <= 18446744073709551615)))]);
      offset <- (offset + (lEN %% 8));
    } else {
      
    }
    return (buf0, b_buf0, buf1, b_buf1, buf2, b_buf2, buf3, b_buf3, offset,
           trace_aBUFLEN____dumpstate_array_avx2x4);
  }
  proc _sha3_512A_A33 (out:BArray64.t, b_out:BArray64.t, in_0:BArray33.t,
                       b_in:BArray33.t) : BArray64.t * BArray64.t * trace = {
    var st:BArray224.t;
    var offset:int;
    var param:int;
    var param_0:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:BArray224.t;
    var result_0:BArray64.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray33.t;
    var param_9:BArray224.t;
    var result_1:int;
    var result_2:BArray224.t;
    var result_3:BArray224.t;
    var b_result:BArray64.t;
    var b_result_0:BArray224.t;
    var b_param:BArray64.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var trace__sha3_512A_A33:trace;
    b_param <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    st <- witness;
    trace__sha3_512A_A33 <- [];
    trace__sha3_512A_A33 <-
    (trace__sha3_512A_A33 ++ [(Assert, (is_init b_in 0 33))]);
    (result_3, b_result_2, tmp__trace) <@ __state_init_avx2 ();
    trace__sha3_512A_A33 <- (trace__sha3_512A_A33 ++ tmp__trace);
    trace__sha3_512A_A33 <-
    (trace__sha3_512A_A33 ++ [(Assert, (is_init b_result_2 0 224))]);
    st <- result_3;
    offset <- 0;
    param_9 <- st;
    param_8 <- in_0;
    param_7 <- offset;
    param_6 <- 33;
    param_5 <- 72;
    param_4 <- 6;
    (result_2, b_result_1, result_1, tmp__trace) <@ a33____absorb_array_avx2 (
    param_9, (BArray224.init_arr (W8.of_int 255) 224), param_8,
    (BArray33.init_arr (W8.of_int 255) 33), param_7, param_6, param_5,
    param_4);
    trace__sha3_512A_A33 <- (trace__sha3_512A_A33 ++ tmp__trace);
    trace__sha3_512A_A33 <-
    (trace__sha3_512A_A33 ++ [(Assert, (is_init b_result_1 0 224))]);
    trace__sha3_512A_A33 <-
    (trace__sha3_512A_A33 ++
    [(Assert, ((0 <= result_1) /\ (result_1 <= 18446744073709551615)))]);
    st <- result_2;
    offset <- 0;
    b_param <- b_out;
    param_3 <- out;
    param_2 <- offset;
    param_1 <- 64;
    param_0 <- st;
    param <- 72;
    (result_0, b_result, result, b_result_0, tmp__trace) <@ a64____squeeze_array_avx2 (
    param_3, b_param, param_2, param_1, param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param);
    trace__sha3_512A_A33 <- (trace__sha3_512A_A33 ++ tmp__trace);
    trace__sha3_512A_A33 <-
    (trace__sha3_512A_A33 ++ [(Assert, (is_init b_result_0 0 224))]);
    b_out <- b_result;
    out <- result_0;
    return (out, b_out, trace__sha3_512A_A33);
  }
  proc _sha3_512A_A64 (out:BArray64.t, b_out:BArray64.t, in_0:BArray64.t,
                       b_in:BArray64.t) : BArray64.t * BArray64.t * trace = {
    var st:BArray224.t;
    var offset:int;
    var param:int;
    var param_0:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray64.t;
    var result:BArray224.t;
    var result_0:BArray64.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray64.t;
    var param_9:BArray224.t;
    var result_1:int;
    var result_2:BArray224.t;
    var result_3:BArray224.t;
    var b_result:BArray64.t;
    var b_result_0:BArray224.t;
    var b_param:BArray64.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var trace__sha3_512A_A64:trace;
    b_param <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    st <- witness;
    trace__sha3_512A_A64 <- [];
    trace__sha3_512A_A64 <-
    (trace__sha3_512A_A64 ++ [(Assert, (is_init b_in 0 64))]);
    (result_3, b_result_2, tmp__trace) <@ __state_init_avx2 ();
    trace__sha3_512A_A64 <- (trace__sha3_512A_A64 ++ tmp__trace);
    trace__sha3_512A_A64 <-
    (trace__sha3_512A_A64 ++ [(Assert, (is_init b_result_2 0 224))]);
    st <- result_3;
    offset <- 0;
    param_9 <- st;
    param_8 <- in_0;
    param_7 <- offset;
    param_6 <- 64;
    param_5 <- 72;
    param_4 <- 6;
    (result_2, b_result_1, result_1, tmp__trace) <@ a64____absorb_array_avx2 (
    param_9, (BArray224.init_arr (W8.of_int 255) 224), param_8,
    (BArray64.init_arr (W8.of_int 255) 64), param_7, param_6, param_5,
    param_4);
    trace__sha3_512A_A64 <- (trace__sha3_512A_A64 ++ tmp__trace);
    trace__sha3_512A_A64 <-
    (trace__sha3_512A_A64 ++ [(Assert, (is_init b_result_1 0 224))]);
    trace__sha3_512A_A64 <-
    (trace__sha3_512A_A64 ++
    [(Assert, ((0 <= result_1) /\ (result_1 <= 18446744073709551615)))]);
    st <- result_2;
    offset <- 0;
    b_param <- b_out;
    param_3 <- out;
    param_2 <- offset;
    param_1 <- 64;
    param_0 <- st;
    param <- 72;
    (result_0, b_result, result, b_result_0, tmp__trace) <@ a64____squeeze_array_avx2 (
    param_3, b_param, param_2, param_1, param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param);
    trace__sha3_512A_A64 <- (trace__sha3_512A_A64 ++ tmp__trace);
    trace__sha3_512A_A64 <-
    (trace__sha3_512A_A64 ++ [(Assert, (is_init b_result_0 0 224))]);
    b_out <- b_result;
    out <- result_0;
    return (out, b_out, trace__sha3_512A_A64);
  }
  proc _shake256_A128__A32_A1 (out:BArray128.t, b_out:BArray128.t,
                               seed:BArray32.t, b_seed:BArray32.t,
                               nonce:BArray1.t, b_nonce:BArray1.t) : 
  BArray128.t * BArray128.t * trace = {
    var pst_s:BArray200.t;
    var pst:BArray200.t;
    var st:BArray224.t;
    var offset:int;
    var param:int;
    var param_0:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var result:BArray224.t;
    var result_0:BArray128.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1.t;
    var param_9:BArray224.t;
    var param_10:int;
    var param_11:BArray200.t;
    var result_1:int;
    var result_2:BArray224.t;
    var result_3:int;
    var result_4:BArray200.t;
    var param_12:int;
    var param_13:int;
    var param_14:int;
    var param_15:int;
    var param_16:BArray32.t;
    var param_17:BArray224.t;
    var param_18:int;
    var param_19:BArray200.t;
    var result_5:int;
    var result_6:BArray224.t;
    var result_7:int;
    var result_8:BArray200.t;
    var param_20:BArray200.t;
    var result_9:BArray224.t;
    var result_10:BArray200.t;
    var b_result:BArray128.t;
    var b_result_0:BArray224.t;
    var b_param:BArray128.t;
    var b_result_1:BArray224.t;
    var b_pst:BArray200.t;
    var b_result_2:BArray200.t;
    var b_result_3:BArray224.t;
    var b_result_4:BArray200.t;
    var b_result_5:BArray224.t;
    var b_result_6:BArray200.t;
    var b_param_0:BArray200.t;
    var b_pst_s:BArray200.t;
    var trace__shake256_A128__A32_A1:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_pst <- witness;
    b_pst_s <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_11 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_19 <- witness;
    param_20 <- witness;
    pst <- witness;
    pst_s <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_4 <- witness;
    result_6 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    result_10 <- witness;
    st <- witness;
    trace__shake256_A128__A32_A1 <- [];
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((is_init b_seed 0 32) /\ (is_init b_nonce 0 1)))]);
    b_pst_s <- (BArray200.init_arr (W8.of_int 0) 200);
    b_pst <- b_pst_s;
    pst <- pst_s;
    b_param_0 <- b_pst;
    param_20 <- pst;
    (result_10, b_result_6, result_9, b_result_5, tmp__trace) <@ __pstate_init_avx2 (
    param_20, b_param_0);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++ tmp__trace);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((is_init b_result_6 0 200) /\ (is_init b_result_5 0 224)))]);
    pst <- result_10;
    st <- result_9;
    offset <- 0;
    param_19 <- pst;
    param_18 <- 0;
    param_17 <- st;
    param_16 <- seed;
    param_15 <- offset;
    param_14 <- 32;
    param_13 <- 136;
    param_12 <- 0;
    (result_8, b_result_4, result_7, result_6, b_result_3, result_5,
    tmp__trace) <@ a32____pabsorb_array_avx2 (param_19,
    (BArray200.init_arr (W8.of_int 255) 200), param_18, param_17,
    (BArray224.init_arr (W8.of_int 255) 224), param_16,
    (BArray32.init_arr (W8.of_int 255) 32), param_15, param_14, param_13,
    param_12);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++ tmp__trace);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((is_init b_result_4 0 200) /\ (is_init b_result_3 0 224)))]);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((0 <= result_5) /\ (result_5 <= 18446744073709551615)))]);
    pst <- result_8;
    st <- result_6;
    offset <- 0;
    param_11 <- pst;
    param_10 <- 32;
    param_9 <- st;
    param_8 <- nonce;
    param_7 <- offset;
    param_6 <- 1;
    param_5 <- 136;
    param_4 <- 31;
    (result_4, b_result_2, result_3, result_2, b_result_1, result_1,
    tmp__trace) <@ a1____pabsorb_array_avx2 (param_11,
    (BArray200.init_arr (W8.of_int 255) 200), param_10, param_9,
    (BArray224.init_arr (W8.of_int 255) 224), param_8,
    (BArray1.init_arr (W8.of_int 255) 1), param_7, param_6, param_5,
    param_4);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++ tmp__trace);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((is_init b_result_2 0 200) /\ (is_init b_result_1 0 224)))]);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++
    [(Assert, ((0 <= result_1) /\ (result_1 <= 18446744073709551615)))]);
    st <- result_2;
    offset <- 0;
    b_param <- b_out;
    param_3 <- out;
    param_2 <- offset;
    param_1 <- 128;
    param_0 <- st;
    param <- 136;
    (result_0, b_result, result, b_result_0, tmp__trace) <@ a128____squeeze_array_avx2 (
    param_3, b_param, param_2, param_1, param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++ tmp__trace);
    trace__shake256_A128__A32_A1 <-
    (trace__shake256_A128__A32_A1 ++ [(Assert, (is_init b_result_0 0 224))]);
    b_out <- b_result;
    out <- result_0;
    return (out, b_out, trace__shake256_A128__A32_A1);
  }
  proc _shake256x4_A128__A32_A1 (out0:BArray128.t, b_out0:BArray128.t,
                                 out1:BArray128.t, b_out1:BArray128.t,
                                 out2:BArray128.t, b_out2:BArray128.t,
                                 out3:BArray128.t, b_out3:BArray128.t,
                                 seed:BArray32.t, b_seed:BArray32.t,
                                 nonces:BArray4.t, b_nonces:BArray4.t) : 
  BArray128.t * BArray128.t * BArray128.t * BArray128.t * BArray128.t *
  BArray128.t * BArray128.t * BArray128.t * trace = {
    var st_s:BArray800.t;
    var st:BArray800.t;
    var offset:int;
    var param:int;
    var param_0:BArray800.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray128.t;
    var param_4:BArray128.t;
    var param_5:BArray128.t;
    var param_6:BArray128.t;
    var result:BArray800.t;
    var result_0:int;
    var result_1:BArray128.t;
    var result_2:BArray128.t;
    var result_3:BArray128.t;
    var result_4:BArray128.t;
    var param_7:int;
    var param_8:int;
    var param_9:int;
    var param_10:int;
    var param_11:BArray1.t;
    var param_12:BArray1.t;
    var param_13:BArray1.t;
    var param_14:BArray1.t;
    var param_15:int;
    var param_16:BArray800.t;
    var result_5:int;
    var result_6:int;
    var result_7:BArray800.t;
    var param_17:int;
    var param_18:int;
    var param_19:int;
    var param_20:int;
    var param_21:BArray32.t;
    var param_22:int;
    var param_23:BArray800.t;
    var result_8:int;
    var result_9:int;
    var result_10:BArray800.t;
    var param_24:BArray800.t;
    var result_11:BArray800.t;
    var b_st:BArray800.t;
    var b_result:BArray800.t;
    var b_result_0:BArray128.t;
    var b_result_1:BArray128.t;
    var b_result_2:BArray128.t;
    var b_result_3:BArray128.t;
    var b_param:BArray128.t;
    var b_param_0:BArray128.t;
    var b_param_1:BArray128.t;
    var b_param_2:BArray128.t;
    var b_result_4:BArray800.t;
    var b_param_3:BArray1.t;
    var b_param_4:BArray1.t;
    var b_param_5:BArray1.t;
    var b_param_6:BArray1.t;
    var b_result_5:BArray800.t;
    var b_result_6:BArray800.t;
    var b_param_7:BArray800.t;
    var b_st_s:BArray800.t;
    var trace__shake256x4_A128__A32_A1:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_st <- witness;
    b_st_s <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    param_16 <- witness;
    param_21 <- witness;
    param_23 <- witness;
    param_24 <- witness;
    result <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_7 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    st <- witness;
    st_s <- witness;
    trace__shake256x4_A128__A32_A1 <- [];
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, ((is_init b_seed 0 32) /\ (is_init b_nonces 0 4)))]);
    b_st_s <- (BArray800.init_arr (W8.of_int 0) 800);
    b_st <- b_st_s;
    st <- st_s;
    b_param_7 <- b_st;
    param_24 <- st;
    (result_11, b_result_6, tmp__trace) <@ __state_init_avx2x4 (param_24,
    b_param_7);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++ tmp__trace);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, (is_init b_result_6 0 800))]);
    st <- result_11;
    offset <- 0;
    param_23 <- st;
    param_22 <- 0;
    param_21 <- seed;
    param_20 <- offset;
    param_19 <- 32;
    param_18 <- 136;
    param_17 <- 0;
    (result_10, b_result_5, result_9, result_8, tmp__trace) <@ a32____absorb_bcast_array_avx2x4 (
    param_23, (BArray800.init_arr (W8.of_int 255) 800), param_22, param_21,
    (BArray32.init_arr (W8.of_int 255) 32), param_20, param_19, param_18,
    param_17);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++ tmp__trace);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert,
     ((is_init b_result_5 0 800) /\
     (result_9 =
     (((param_22 + param_19) %% param_18) + ((param_17 <> 0) ? 1 : 0)))))]);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, ((0 <= result_8) /\ (result_8 <= 18446744073709551615)))]);
    st <- result_10;
    offset <- 0;
    param_16 <- st;
    param_15 <- 32;
    b_param_6 <- (SBArray4_1.get_sub8 b_nonces 0);
    param_14 <- (SBArray4_1.get_sub8 nonces 0);
    b_param_5 <- (SBArray4_1.get_sub8 b_nonces 1);
    param_13 <- (SBArray4_1.get_sub8 nonces 1);
    b_param_4 <- (SBArray4_1.get_sub8 b_nonces 2);
    param_12 <- (SBArray4_1.get_sub8 nonces 2);
    b_param_3 <- (SBArray4_1.get_sub8 b_nonces 3);
    param_11 <- (SBArray4_1.get_sub8 nonces 3);
    param_10 <- offset;
    param_9 <- 1;
    param_8 <- 136;
    param_7 <- 31;
    (result_7, b_result_4, result_6, result_5, tmp__trace) <@ a1____absorb_array_avx2x4 (
    param_16, (BArray800.init_arr (W8.of_int 255) 800), param_15, param_14,
    b_param_6, param_13, b_param_5, param_12, b_param_4, param_11, b_param_3,
    param_10, param_9, param_8, param_7);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++ tmp__trace);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, (is_init b_result_4 0 800))]);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, ((0 <= result_5) /\ (result_5 <= 18446744073709551615)))]);
    st <- result_7;
    offset <- 0;
    b_param_2 <- b_out0;
    param_6 <- out0;
    b_param_1 <- b_out1;
    param_5 <- out1;
    b_param_0 <- b_out2;
    param_4 <- out2;
    b_param <- b_out3;
    param_3 <- out3;
    param_2 <- offset;
    param_1 <- 128;
    param_0 <- st;
    param <- 136;
    (result_4, b_result_3, result_3, b_result_2, result_2, b_result_1,
    result_1, b_result_0, result_0, result, b_result, tmp__trace) <@ 
    a128____squeeze_array_avx2x4 (param_6, b_param_2, param_5, b_param_1,
    param_4, b_param_0, param_3, b_param, param_2, param_1, param_0,
    (BArray800.init_arr (W8.of_int 255) 800), param);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++ tmp__trace);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++ [(Assert, (is_init b_result 0 800))]);
    trace__shake256x4_A128__A32_A1 <-
    (trace__shake256x4_A128__A32_A1 ++
    [(Assert, ((0 <= result_0) /\ (result_0 <= 18446744073709551615)))]);
    b_out0 <- b_result_3;
    out0 <- result_4;
    b_out1 <- b_result_2;
    out1 <- result_3;
    b_out2 <- b_result_1;
    out2 <- result_2;
    b_out3 <- b_result_0;
    out3 <- result_1;
    return (out0, b_out0, out1, b_out1, out2, b_out2, out3, b_out3,
           trace__shake256x4_A128__A32_A1);
  }
  proc _shake128x4_absorb_A32_A2 (st:BArray800.t, b_st:BArray800.t,
                                  seed:BArray32.t, b_seed:BArray32.t,
                                  pos:BArray8.t, b_pos:BArray8.t) : BArray800.t *
                                                                    BArray800.t *
                                                                    trace = {
    var aT:int;
    var offset:int;
    var param:int;
    var param_0:int;
    var param_1:int;
    var param_2:int;
    var param_3:BArray2.t;
    var param_4:BArray2.t;
    var param_5:BArray2.t;
    var param_6:BArray2.t;
    var param_7:int;
    var param_8:BArray800.t;
    var result:int;
    var result_0:int;
    var result_1:BArray800.t;
    var param_9:int;
    var param_10:int;
    var param_11:int;
    var param_12:int;
    var param_13:BArray32.t;
    var param_14:int;
    var param_15:BArray800.t;
    var result_2:int;
    var result_3:int;
    var result_4:BArray800.t;
    var param_16:BArray800.t;
    var result_5:BArray800.t;
    var b_result:BArray800.t;
    var b_param:BArray2.t;
    var b_param_0:BArray2.t;
    var b_param_1:BArray2.t;
    var b_param_2:BArray2.t;
    var b_result_0:BArray800.t;
    var b_result_1:BArray800.t;
    var b_param_3:BArray800.t;
    var trace__shake128x4_absorb_A32_A2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_8 <- witness;
    param_13 <- witness;
    param_15 <- witness;
    param_16 <- witness;
    result_1 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    trace__shake128x4_absorb_A32_A2 <- [];
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++
    [(Assert, ((is_init b_seed 0 32) /\ (is_init b_pos 0 8)))]);
    b_param_3 <- b_st;
    param_16 <- st;
    (result_5, b_result_1, tmp__trace) <@ __state_init_avx2x4 (param_16,
    b_param_3);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++ tmp__trace);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++
    [(Assert, (is_init b_result_1 0 800))]);
    st <- result_5;
    offset <- 0;
    param_15 <- st;
    param_14 <- 0;
    param_13 <- seed;
    param_12 <- offset;
    param_11 <- 32;
    param_10 <- 168;
    param_9 <- 0;
    (result_4, b_result_0, result_3, result_2, tmp__trace) <@ a32____absorb_bcast_array_avx2x4 (
    param_15, (BArray800.init_arr (W8.of_int 255) 800), param_14, param_13,
    (BArray32.init_arr (W8.of_int 255) 32), param_12, param_11, param_10,
    param_9);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++ tmp__trace);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++
    [(Assert,
     ((is_init b_result_0 0 800) /\
     (result_3 =
     (((param_14 + param_11) %% param_10) + ((param_9 <> 0) ? 1 : 0)))))]);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++
    [(Assert, ((0 <= result_2) /\ (result_2 <= 18446744073709551615)))]);
    st <- result_4;
    aT <- result_3;
    offset <- 0;
    param_8 <- st;
    param_7 <- aT;
    b_param_2 <- (SBArray8_2.get_sub8 b_pos 0);
    param_6 <- (SBArray8_2.get_sub8 pos 0);
    b_param_1 <- (SBArray8_2.get_sub8 b_pos 2);
    param_5 <- (SBArray8_2.get_sub8 pos 2);
    b_param_0 <- (SBArray8_2.get_sub8 b_pos 4);
    param_4 <- (SBArray8_2.get_sub8 pos 4);
    b_param <- (SBArray8_2.get_sub8 b_pos 6);
    param_3 <- (SBArray8_2.get_sub8 pos 6);
    param_2 <- offset;
    param_1 <- 2;
    param_0 <- 168;
    param <- 31;
    (result_1, b_result, result_0, result, tmp__trace) <@ a2____absorb_array_avx2x4 (
    param_8, (BArray800.init_arr (W8.of_int 255) 800), param_7, param_6,
    b_param_2, param_5, b_param_1, param_4, b_param_0, param_3, b_param,
    param_2, param_1, param_0, param);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++ tmp__trace);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++ [(Assert, (is_init b_result 0 800))]);
    trace__shake128x4_absorb_A32_A2 <-
    (trace__shake128x4_absorb_A32_A2 ++
    [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
    st <- result_1;
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    return (st, b_st, trace__shake128x4_absorb_A32_A2);
  }
  proc _shake128_next_state (buf:BArray536.t, b_buf:BArray536.t) : BArray536.t *
                                                                   BArray536.t *
                                                                   trace = {
    var pst:BArray200.t;
    var st:BArray224.t;
    var offset:int;
    var param:BArray224.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray536.t;
    var result:int;
    var result_0:BArray536.t;
    var param_3:BArray224.t;
    var result_1:BArray224.t;
    var param_4:BArray200.t;
    var result_2:BArray224.t;
    var b_result:BArray536.t;
    var b_result_0:BArray224.t;
    var b_result_1:BArray224.t;
    var b_param:BArray200.t;
    var b_pst:BArray200.t;
    var trace__shake128_next_state:trace;
    b_param <- witness;
    b_pst <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    pst <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    st <- witness;
    trace__shake128_next_state <- [];
    trace__shake128_next_state <-
    (trace__shake128_next_state ++ [(Assert, (is_init b_buf 0 536))]);
    b_pst <- (SBArray536_200.get_sub64 b_buf 42);
    pst <- (SBArray536_200.get_sub64 buf 42);
    b_param <- b_pst;
    param_4 <- pst;
    (result_2, b_result_1, tmp__trace) <@ __state_from_pstate_avx2 (param_4,
    b_param);
    trace__shake128_next_state <- (trace__shake128_next_state ++ tmp__trace);
    trace__shake128_next_state <-
    (trace__shake128_next_state ++ [(Assert, (is_init b_result_1 0 224))]);
    st <- result_2;
    param_3 <- st;
    (result_1, b_result_0, tmp__trace) <@ _keccakf1600_avx2 (param_3,
    (BArray224.init_arr (W8.of_int 255) 224));
    trace__shake128_next_state <- (trace__shake128_next_state ++ tmp__trace);
    trace__shake128_next_state <-
    (trace__shake128_next_state ++ [(Assert, (is_init b_result_0 0 224))]);
    st <- result_1;
    offset <- 336;
    param_2 <- buf;
    param_1 <- offset;
    param_0 <- 200;
    param <- st;
    (result_0, b_result, result, tmp__trace) <@ aBUFLEN____dumpstate_array_avx2 (
    param_2, (BArray536.init_arr (W8.of_int 255) 536), param_1, param_0,
    param, (BArray224.init_arr (W8.of_int 255) 224));
    trace__shake128_next_state <- (trace__shake128_next_state ++ tmp__trace);
    trace__shake128_next_state <-
    (trace__shake128_next_state ++
    [(Assert,
     (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
     (((0 <= (param_1 + param_0)) /\
      ((param_1 + param_0) <= 18446744073709551615)) /\
     (result = (param_1 + param_0)))))]);
    trace__shake128_next_state <-
    (trace__shake128_next_state ++
    [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
    b_buf <- b_result;
    buf <- result_0;
    return (buf, b_buf, trace__shake128_next_state);
  }
  proc _shake128x4_squeeze3blocks (st:BArray800.t, b_st:BArray800.t,
                                   buf:BArray2144.t, b_buf:BArray2144.t) : 
  BArray800.t * BArray800.t * BArray2144.t * BArray2144.t * trace = {
    var buf0:BArray536.t;
    var buf1:BArray536.t;
    var buf2:BArray536.t;
    var buf3:BArray536.t;
    var offset:int;
    var param:BArray800.t;
    var param_0:int;
    var param_1:int;
    var param_2:BArray536.t;
    var param_3:BArray536.t;
    var param_4:BArray536.t;
    var param_5:BArray536.t;
    var result:int;
    var result_0:BArray536.t;
    var result_1:BArray536.t;
    var result_2:BArray536.t;
    var result_3:BArray536.t;
    var param_6:BArray800.t;
    var result_4:BArray800.t;
    var param_7:BArray800.t;
    var param_8:int;
    var param_9:int;
    var param_10:BArray536.t;
    var param_11:BArray536.t;
    var param_12:BArray536.t;
    var param_13:BArray536.t;
    var result_5:int;
    var result_6:BArray536.t;
    var result_7:BArray536.t;
    var result_8:BArray536.t;
    var result_9:BArray536.t;
    var param_14:BArray800.t;
    var result_10:BArray800.t;
    var param_15:BArray800.t;
    var param_16:int;
    var param_17:int;
    var param_18:BArray536.t;
    var param_19:BArray536.t;
    var param_20:BArray536.t;
    var param_21:BArray536.t;
    var result_11:int;
    var result_12:BArray536.t;
    var result_13:BArray536.t;
    var result_14:BArray536.t;
    var result_15:BArray536.t;
    var param_22:BArray800.t;
    var result_16:BArray800.t;
    var b_buf3:BArray536.t;
    var b_buf2:BArray536.t;
    var b_buf1:BArray536.t;
    var b_buf0:BArray536.t;
    var b_result:BArray536.t;
    var b_result_0:BArray536.t;
    var b_result_1:BArray536.t;
    var b_result_2:BArray536.t;
    var b_param:BArray536.t;
    var b_param_0:BArray536.t;
    var b_param_1:BArray536.t;
    var b_param_2:BArray536.t;
    var b_result_3:BArray800.t;
    var b_result_4:BArray536.t;
    var b_result_5:BArray536.t;
    var b_result_6:BArray536.t;
    var b_result_7:BArray536.t;
    var b_param_3:BArray536.t;
    var b_param_4:BArray536.t;
    var b_param_5:BArray536.t;
    var b_param_6:BArray536.t;
    var b_result_8:BArray800.t;
    var b_result_9:BArray536.t;
    var b_result_10:BArray536.t;
    var b_result_11:BArray536.t;
    var b_result_12:BArray536.t;
    var b_param_7:BArray536.t;
    var b_param_8:BArray536.t;
    var b_param_9:BArray536.t;
    var b_param_10:BArray536.t;
    var b_result_13:BArray800.t;
    var trace__shake128x4_squeeze3blocks:trace;
    b_buf0 <- witness;
    b_buf1 <- witness;
    b_buf2 <- witness;
    b_buf3 <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_result_10 <- witness;
    b_result_11 <- witness;
    b_result_12 <- witness;
    b_result_13 <- witness;
    buf0 <- witness;
    buf1 <- witness;
    buf2 <- witness;
    buf3 <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    param_15 <- witness;
    param_18 <- witness;
    param_19 <- witness;
    param_20 <- witness;
    param_21 <- witness;
    param_22 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    result_10 <- witness;
    result_12 <- witness;
    result_13 <- witness;
    result_14 <- witness;
    result_15 <- witness;
    result_16 <- witness;
    trace__shake128x4_squeeze3blocks <- [];
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ [(Assert, (is_init b_st 0 800))]);
    b_buf0 <- (SBArray2144_536.get_sub8 b_buf 0);
    buf0 <- (SBArray2144_536.get_sub8 buf 0);
    b_buf1 <- (SBArray2144_536.get_sub8 b_buf 536);
    buf1 <- (SBArray2144_536.get_sub8 buf 536);
    b_buf2 <- (SBArray2144_536.get_sub8 b_buf 1072);
    buf2 <- (SBArray2144_536.get_sub8 buf 1072);
    b_buf3 <- (SBArray2144_536.get_sub8 b_buf 1608);
    buf3 <- (SBArray2144_536.get_sub8 buf 1608);
    offset <- 0;
    param_22 <- st;
    (result_16, b_result_13, tmp__trace) <@ _keccakf1600_avx2x4 (param_22,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, (is_init b_result_13 0 800))]);
    st <- result_16;
    b_param_10 <- b_buf0;
    param_21 <- buf0;
    b_param_9 <- b_buf1;
    param_20 <- buf1;
    b_param_8 <- b_buf2;
    param_19 <- buf2;
    b_param_7 <- b_buf3;
    param_18 <- buf3;
    param_17 <- offset;
    param_16 <- 168;
    param_15 <- st;
    (result_15, b_result_12, result_14, b_result_11, result_13, b_result_10,
    result_12, b_result_9, result_11, tmp__trace) <@ aBUFLEN____dumpstate_array_avx2x4 (
    param_21, b_param_10, param_20, b_param_9, param_19, b_param_8, param_18,
    b_param_7, param_17, param_16, param_15,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert,
     (((0 <= param_16) /\ (param_16 <= 18446744073709551615)) /\
     (((0 <= (param_17 + param_16)) /\
      ((param_17 + param_16) <= 18446744073709551615)) /\
     (result_11 = (param_17 + param_16)))))]);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, ((0 <= result_11) /\ (result_11 <= 18446744073709551615)))]);
    b_buf0 <- b_result_12;
    buf0 <- result_15;
    b_buf1 <- b_result_11;
    buf1 <- result_14;
    b_buf2 <- b_result_10;
    buf2 <- result_13;
    b_buf3 <- b_result_9;
    buf3 <- result_12;
    offset <- result_11;
    param_14 <- st;
    (result_10, b_result_8, tmp__trace) <@ _keccakf1600_avx2x4 (param_14,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, (is_init b_result_8 0 800))]);
    st <- result_10;
    b_param_6 <- b_buf0;
    param_13 <- buf0;
    b_param_5 <- b_buf1;
    param_12 <- buf1;
    b_param_4 <- b_buf2;
    param_11 <- buf2;
    b_param_3 <- b_buf3;
    param_10 <- buf3;
    param_9 <- offset;
    param_8 <- 168;
    param_7 <- st;
    (result_9, b_result_7, result_8, b_result_6, result_7, b_result_5,
    result_6, b_result_4, result_5, tmp__trace) <@ aBUFLEN____dumpstate_array_avx2x4 (
    param_13, b_param_6, param_12, b_param_5, param_11, b_param_4, param_10,
    b_param_3, param_9, param_8, param_7,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert,
     (((0 <= param_8) /\ (param_8 <= 18446744073709551615)) /\
     (((0 <= (param_9 + param_8)) /\
      ((param_9 + param_8) <= 18446744073709551615)) /\
     (result_5 = (param_9 + param_8)))))]);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, ((0 <= result_5) /\ (result_5 <= 18446744073709551615)))]);
    b_buf0 <- b_result_7;
    buf0 <- result_9;
    b_buf1 <- b_result_6;
    buf1 <- result_8;
    b_buf2 <- b_result_5;
    buf2 <- result_7;
    b_buf3 <- b_result_4;
    buf3 <- result_6;
    offset <- result_5;
    param_6 <- st;
    (result_4, b_result_3, tmp__trace) <@ _keccakf1600_avx2x4 (param_6,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, (is_init b_result_3 0 800))]);
    b_st <- (BArray800.init_arr (W8.of_int 255) 800);
    st <- result_4;
    b_param_2 <- b_buf0;
    param_5 <- buf0;
    b_param_1 <- b_buf1;
    param_4 <- buf1;
    b_param_0 <- b_buf2;
    param_3 <- buf2;
    b_param <- b_buf3;
    param_2 <- buf3;
    param_1 <- offset;
    param_0 <- 200;
    param <- st;
    (result_3, b_result_2, result_2, b_result_1, result_1, b_result_0,
    result_0, b_result, result, tmp__trace) <@ aBUFLEN____dumpstate_array_avx2x4 (
    param_5, b_param_2, param_4, b_param_1, param_3, b_param_0, param_2,
    b_param, param_1, param_0, param,
    (BArray800.init_arr (W8.of_int 255) 800));
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++ tmp__trace);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert,
     (((0 <= param_0) /\ (param_0 <= 18446744073709551615)) /\
     (((0 <= (param_1 + param_0)) /\
      ((param_1 + param_0) <= 18446744073709551615)) /\
     (result = (param_1 + param_0)))))]);
    trace__shake128x4_squeeze3blocks <-
    (trace__shake128x4_squeeze3blocks ++
    [(Assert, ((0 <= result) /\ (result <= 18446744073709551615)))]);
    b_buf0 <- b_result_2;
    buf0 <- result_3;
    b_buf1 <- b_result_1;
    buf1 <- result_2;
    b_buf2 <- b_result_0;
    buf2 <- result_1;
    b_buf3 <- b_result;
    buf3 <- result_0;
    b_buf <- (SBArray2144_536.set_sub8 b_buf 0 b_buf0);
    buf <- (SBArray2144_536.set_sub8 buf 0 buf0);
    b_buf <- (SBArray2144_536.set_sub8 b_buf 536 b_buf1);
    buf <- (SBArray2144_536.set_sub8 buf 536 buf1);
    b_buf <- (SBArray2144_536.set_sub8 b_buf 1072 b_buf2);
    buf <- (SBArray2144_536.set_sub8 buf 1072 buf2);
    b_buf <- (SBArray2144_536.set_sub8 b_buf 1608 b_buf3);
    buf <- (SBArray2144_536.set_sub8 buf 1608 buf3);
    return (st, b_st, buf, b_buf, trace__shake128x4_squeeze3blocks);
  }
  proc _sha3_256A_A1568 (out:BArray32.t, b_out:BArray32.t, in_0:BArray1568.t,
                         b_in:BArray1568.t) : BArray32.t * BArray32.t * trace = {
    var st:BArray224.t;
    var offset:int;
    var param:int;
    var param_0:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:BArray224.t;
    var result_0:BArray32.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1568.t;
    var param_9:BArray224.t;
    var result_1:int;
    var result_2:BArray224.t;
    var result_3:BArray224.t;
    var b_result:BArray32.t;
    var b_result_0:BArray224.t;
    var b_param:BArray32.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var trace__sha3_256A_A1568:trace;
    b_param <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    st <- witness;
    trace__sha3_256A_A1568 <- [];
    trace__sha3_256A_A1568 <-
    (trace__sha3_256A_A1568 ++ [(Assert, (is_init b_in 0 1568))]);
    (result_3, b_result_2, tmp__trace) <@ __state_init_avx2 ();
    trace__sha3_256A_A1568 <- (trace__sha3_256A_A1568 ++ tmp__trace);
    trace__sha3_256A_A1568 <-
    (trace__sha3_256A_A1568 ++ [(Assert, (is_init b_result_2 0 224))]);
    st <- result_3;
    param_9 <- st;
    param_8 <- in_0;
    param_7 <- 0;
    param_6 <- 1568;
    param_5 <- 136;
    param_4 <- 6;
    (result_2, b_result_1, result_1, tmp__trace) <@ a1568____absorb_array_avx2 (
    param_9, (BArray224.init_arr (W8.of_int 255) 224), param_8,
    (BArray1568.init_arr (W8.of_int 255) 1568), param_7, param_6, param_5,
    param_4);
    trace__sha3_256A_A1568 <- (trace__sha3_256A_A1568 ++ tmp__trace);
    trace__sha3_256A_A1568 <-
    (trace__sha3_256A_A1568 ++ [(Assert, (is_init b_result_1 0 224))]);
    trace__sha3_256A_A1568 <-
    (trace__sha3_256A_A1568 ++
    [(Assert, ((0 <= result_1) /\ (result_1 <= 18446744073709551615)))]);
    st <- result_2;
    offset <- 0;
    b_param <- b_out;
    param_3 <- out;
    param_2 <- offset;
    param_1 <- 32;
    param_0 <- st;
    param <- 136;
    (result_0, b_result, result, b_result_0, tmp__trace) <@ a32____squeeze_array_avx2 (
    param_3, b_param, param_2, param_1, param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param);
    trace__sha3_256A_A1568 <- (trace__sha3_256A_A1568 ++ tmp__trace);
    trace__sha3_256A_A1568 <-
    (trace__sha3_256A_A1568 ++ [(Assert, (is_init b_result_0 0 224))]);
    b_out <- b_result;
    out <- result_0;
    return (out, b_out, trace__sha3_256A_A1568);
  }
  proc _shake256_A32__A1600 (out:BArray32.t, b_out:BArray32.t,
                             in_0:BArray1600.t, b_in:BArray1600.t) : 
  BArray32.t * BArray32.t * trace = {
    var st:BArray224.t;
    var offset:int;
    var param:int;
    var param_0:BArray224.t;
    var param_1:int;
    var param_2:int;
    var param_3:BArray32.t;
    var result:BArray224.t;
    var result_0:BArray32.t;
    var param_4:int;
    var param_5:int;
    var param_6:int;
    var param_7:int;
    var param_8:BArray1600.t;
    var param_9:BArray224.t;
    var result_1:int;
    var result_2:BArray224.t;
    var result_3:BArray224.t;
    var b_result:BArray32.t;
    var b_result_0:BArray224.t;
    var b_param:BArray32.t;
    var b_result_1:BArray224.t;
    var b_result_2:BArray224.t;
    var trace__shake256_A32__A1600:trace;
    b_param <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    param_0 <- witness;
    param_3 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    st <- witness;
    trace__shake256_A32__A1600 <- [];
    trace__shake256_A32__A1600 <-
    (trace__shake256_A32__A1600 ++ [(Assert, (is_init b_in 0 1600))]);
    (result_3, b_result_2, tmp__trace) <@ __state_init_avx2 ();
    trace__shake256_A32__A1600 <- (trace__shake256_A32__A1600 ++ tmp__trace);
    trace__shake256_A32__A1600 <-
    (trace__shake256_A32__A1600 ++ [(Assert, (is_init b_result_2 0 224))]);
    st <- result_3;
    offset <- 0;
    param_9 <- st;
    param_8 <- in_0;
    param_7 <- offset;
    param_6 <- 1600;
    param_5 <- 136;
    param_4 <- 31;
    (result_2, b_result_1, result_1, tmp__trace) <@ a1600____absorb_array_avx2 (
    param_9, (BArray224.init_arr (W8.of_int 255) 224), param_8,
    (BArray1600.init_arr (W8.of_int 255) 1600), param_7, param_6, param_5,
    param_4);
    trace__shake256_A32__A1600 <- (trace__shake256_A32__A1600 ++ tmp__trace);
    trace__shake256_A32__A1600 <-
    (trace__shake256_A32__A1600 ++ [(Assert, (is_init b_result_1 0 224))]);
    trace__shake256_A32__A1600 <-
    (trace__shake256_A32__A1600 ++
    [(Assert, ((0 <= result_1) /\ (result_1 <= 18446744073709551615)))]);
    st <- result_2;
    offset <- 0;
    b_param <- b_out;
    param_3 <- out;
    param_2 <- offset;
    param_1 <- 32;
    param_0 <- st;
    param <- 136;
    (result_0, b_result, result, b_result_0, tmp__trace) <@ a32____squeeze_array_avx2 (
    param_3, b_param, param_2, param_1, param_0,
    (BArray224.init_arr (W8.of_int 255) 224), param);
    trace__shake256_A32__A1600 <- (trace__shake256_A32__A1600 ++ tmp__trace);
    trace__shake256_A32__A1600 <-
    (trace__shake256_A32__A1600 ++ [(Assert, (is_init b_result_0 0 224))]);
    b_out <- b_result;
    out <- result_0;
    return (out, b_out, trace__shake256_A32__A1600);
  }
  proc _poly_add2 (rp:BArray512.t, b_rp:BArray512.t, bp:BArray512.t,
                   b_bp:BArray512.t) : BArray512.t * BArray512.t * trace = {
    var i:int;
    var a:W256.t;
    var b:W256.t;
    var r:W256.t;
    var trace__poly_add2:trace;
    trace__poly_add2 <- [];
    trace__poly_add2 <-
    (trace__poly_add2 ++ [(Assert, (is_init b_rp 0 512))]);
    trace__poly_add2 <-
    (trace__poly_add2 ++ [(Assert, (is_init b_bp 0 512))]);
    i <- 0;
    while ((i < 16)) {
      trace__poly_add2 <-
      (trace__poly_add2 ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      a <- (BArray512.get256d rp (32 * i));
      trace__poly_add2 <-
      (trace__poly_add2 ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      b <- (BArray512.get256d bp (32 * i));
      r <- (VPADD_16u16 a b);
      trace__poly_add2 <-
      (trace__poly_add2 ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (32 * i) r);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_add2);
  }
  proc _poly_csubq (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                        BArray512.t * trace = {
    var qx16:W256.t;
    var i:int;
    var r:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var result:W256.t;
    var trace__poly_csubq:trace;
    trace__poly_csubq <- [];
    trace__poly_csubq <-
    (trace__poly_csubq ++ [(Assert, (is_init b_rp 0 512))]);
    qx16 <- (BArray32.get256 jqx16 0);
    i <- 0;
    while ((i < 16)) {
      trace__poly_csubq <-
      (trace__poly_csubq ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      r <- (BArray512.get256d rp (32 * i));
      param_0 <- r;
      param <- qx16;
      (result, tmp__trace) <@ __csubq (param_0, param);
      trace__poly_csubq <- (trace__poly_csubq ++ tmp__trace);
      r <- result;
      trace__poly_csubq <-
      (trace__poly_csubq ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (32 * i) r);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_csubq);
  }
  proc __w256_interleave_u16 (al:W256.t, ah:W256.t) : W256.t * W256.t * trace = {
    var a0:W256.t;
    var a1:W256.t;
    var trace___w256_interleave_u16:trace;
    trace___w256_interleave_u16 <- [];
    a0 <- (VPUNPCKL_16u16 al ah);
    a1 <- (VPUNPCKH_16u16 al ah);
    return (a0, a1, trace___w256_interleave_u16);
  }
  proc __w256_deinterleave_u16 (_zero:W256.t, a0:W256.t, a1:W256.t) : 
  W256.t * W256.t * trace = {
    var al:W256.t;
    var ah:W256.t;
    var trace___w256_deinterleave_u16:trace;
    trace___w256_deinterleave_u16 <- [];
    al <- (VPBLEND_16u16 a0 _zero (W8.of_int 170));
    ah <- (VPBLEND_16u16 a1 _zero (W8.of_int 170));
    al <- (VPACKUS_8u32 al ah);
    a0 <- (VPSRL_8u32 a0 (W128.of_int 16));
    a1 <- (VPSRL_8u32 a1 (W128.of_int 16));
    ah <- (VPACKUS_8u32 a0 a1);
    return (al, ah, trace___w256_deinterleave_u16);
  }
  proc __mont_red (lo:W256.t, hi:W256.t, qx16:W256.t, qinvx16:W256.t) : 
  W256.t * trace = {
    var m:W256.t;
    var trace___mont_red:trace;
    trace___mont_red <- [];
    m <- (VPMULL_16u16 lo qinvx16);
    m <- (VPMULH_16u16 m qx16);
    lo <- (VPSUB_16u16 hi m);
    return (lo, trace___mont_red);
  }
  proc __wmul_16u16 (x:W256.t, y:W256.t) : W256.t * W256.t * trace = {
    var xy0:W256.t;
    var xy1:W256.t;
    var xyL:W256.t;
    var xyH:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var trace___wmul_16u16:trace;
    trace___wmul_16u16 <- [];
    xyL <- (VPMULL_16u16 x y);
    xyH <- (VPMULH_16u16 x y);
    param_0 <- xyL;
    param <- xyH;
    (result_0, result, tmp__trace) <@ __w256_interleave_u16 (param_0, param);
    trace___wmul_16u16 <- (trace___wmul_16u16 ++ tmp__trace);
    xy0 <- result_0;
    xy1 <- result;
    return (xy0, xy1, trace___wmul_16u16);
  }
  proc __schoolbook16x (are:W256.t, aim:W256.t, bre:W256.t, bim:W256.t,
                        zeta_0:W256.t, zetaqinv:W256.t, qx16:W256.t,
                        qinvx16:W256.t, sign:int) : W256.t * W256.t * trace = {
    var x0:W256.t;
    var y0:W256.t;
    var zaim:W256.t;
    var ac0:W256.t;
    var ac1:W256.t;
    var ad0:W256.t;
    var ad1:W256.t;
    var bc0:W256.t;
    var bc1:W256.t;
    var zbd0:W256.t;
    var zbd1:W256.t;
    var x1:W256.t;
    var y1:W256.t;
    var _zero:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result_0:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var param_9:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var param_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var param_23:W256.t;
    var param_24:W256.t;
    var result_13:W256.t;
    var trace___schoolbook16x:trace;
    trace___schoolbook16x <- [];
    param_24 <- aim;
    param_23 <- zetaqinv;
    param_22 <- zeta_0;
    param_21 <- qx16;
    (result_13, tmp__trace) <@ __fqmulprecomp16x (param_24, param_23,
    param_22, param_21);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    zaim <- result_13;
    param_20 <- are;
    param_19 <- bre;
    (result_12, result_11, tmp__trace) <@ __wmul_16u16 (param_20, param_19);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    ac0 <- result_12;
    ac1 <- result_11;
    param_18 <- are;
    param_17 <- bim;
    (result_10, result_9, tmp__trace) <@ __wmul_16u16 (param_18, param_17);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    ad0 <- result_10;
    ad1 <- result_9;
    param_16 <- aim;
    param_15 <- bre;
    (result_8, result_7, tmp__trace) <@ __wmul_16u16 (param_16, param_15);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    bc0 <- result_8;
    bc1 <- result_7;
    param_14 <- zaim;
    param_13 <- bim;
    (result_6, result_5, tmp__trace) <@ __wmul_16u16 (param_14, param_13);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    zbd0 <- result_6;
    zbd1 <- result_5;
    if ((sign = 0)) {
      x0 <- (VPADD_8u32 ac0 zbd0);
      x1 <- (VPADD_8u32 ac1 zbd1);
    } else {
      x0 <- (VPSUB_8u32 ac0 zbd0);
      x1 <- (VPSUB_8u32 ac1 zbd1);
    }
    y0 <- (VPADD_8u32 bc0 ad0);
    y1 <- (VPADD_8u32 bc1 ad1);
    _zero <- (set0_256);
    param_12 <- _zero;
    param_11 <- x0;
    param_10 <- x1;
    (result_4, result_3, tmp__trace) <@ __w256_deinterleave_u16 (param_12,
    param_11, param_10);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    x0 <- result_4;
    x1 <- result_3;
    param_9 <- _zero;
    param_8 <- y0;
    param_7 <- y1;
    (result_2, result_1, tmp__trace) <@ __w256_deinterleave_u16 (param_9,
    param_8, param_7);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    y0 <- result_2;
    y1 <- result_1;
    param_6 <- x0;
    param_5 <- x1;
    param_4 <- qx16;
    param_3 <- qinvx16;
    (result_0, tmp__trace) <@ __mont_red (param_6, param_5, param_4,
    param_3);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    x0 <- result_0;
    param_2 <- y0;
    param_1 <- y1;
    param_0 <- qx16;
    param <- qinvx16;
    (result, tmp__trace) <@ __mont_red (param_2, param_1, param_0, param);
    trace___schoolbook16x <- (trace___schoolbook16x ++ tmp__trace);
    y0 <- result;
    return (x0, y0, trace___schoolbook16x);
  }
  proc _poly_basemul (rp:BArray512.t, b_rp:BArray512.t, ap:BArray512.t,
                      b_ap:BArray512.t, bp:BArray512.t, b_bp:BArray512.t) : 
  BArray512.t * BArray512.t * trace = {
    var qx16:W256.t;
    var qinvx16:W256.t;
    var zetaqinv:W256.t;
    var zeta_0:W256.t;
    var are:W256.t;
    var aim:W256.t;
    var bre:W256.t;
    var bim:W256.t;
    var param:int;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var param_7:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var param_8:int;
    var param_9:W256.t;
    var param_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var param_17:int;
    var param_18:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var param_23:W256.t;
    var param_24:W256.t;
    var param_25:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var param_26:int;
    var param_27:W256.t;
    var param_28:W256.t;
    var param_29:W256.t;
    var param_30:W256.t;
    var param_31:W256.t;
    var param_32:W256.t;
    var param_33:W256.t;
    var param_34:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_35:int;
    var param_36:W256.t;
    var param_37:W256.t;
    var param_38:W256.t;
    var param_39:W256.t;
    var param_40:W256.t;
    var param_41:W256.t;
    var param_42:W256.t;
    var param_43:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var param_44:int;
    var param_45:W256.t;
    var param_46:W256.t;
    var param_47:W256.t;
    var param_48:W256.t;
    var param_49:W256.t;
    var param_50:W256.t;
    var param_51:W256.t;
    var param_52:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_53:int;
    var param_54:W256.t;
    var param_55:W256.t;
    var param_56:W256.t;
    var param_57:W256.t;
    var param_58:W256.t;
    var param_59:W256.t;
    var param_60:W256.t;
    var param_61:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var param_62:int;
    var param_63:W256.t;
    var param_64:W256.t;
    var param_65:W256.t;
    var param_66:W256.t;
    var param_67:W256.t;
    var param_68:W256.t;
    var param_69:W256.t;
    var param_70:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var trace__poly_basemul:trace;
    trace__poly_basemul <- [];
    trace__poly_basemul <-
    (trace__poly_basemul ++
    [(Assert, ((is_init b_ap 0 512) /\ (is_init b_bp 0 512)))]);
    qx16 <- (BArray32.get256d jqx16 0);
    qinvx16 <- (BArray32.get256d jqinvx16 0);
    zetaqinv <- (BArray800.get256d jzetas_exp 272);
    zeta_0 <- (BArray800.get256d jzetas_exp 304);
    are <- (BArray512.get256d ap 0);
    aim <- (BArray512.get256d ap 32);
    bre <- (BArray512.get256d bp 0);
    bim <- (BArray512.get256d bp 32);
    param_70 <- are;
    param_69 <- aim;
    param_68 <- bre;
    param_67 <- bim;
    param_66 <- zeta_0;
    param_65 <- zetaqinv;
    param_64 <- qx16;
    param_63 <- qinvx16;
    param_62 <- 0;
    (result_14, result_13, tmp__trace) <@ __schoolbook16x (param_70,
    param_69, param_68, param_67, param_66, param_65, param_64, param_63,
    param_62);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_14;
    aim <- result_13;
    b_rp <-
    (BArray512.set256d b_rp 0
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 0 are);
    b_rp <-
    (BArray512.set256d b_rp 32
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 32 aim);
    are <- (BArray512.get256d ap 64);
    aim <- (BArray512.get256d ap 96);
    bre <- (BArray512.get256d bp 64);
    bim <- (BArray512.get256d bp 96);
    param_61 <- are;
    param_60 <- aim;
    param_59 <- bre;
    param_58 <- bim;
    param_57 <- zeta_0;
    param_56 <- zetaqinv;
    param_55 <- qx16;
    param_54 <- qinvx16;
    param_53 <- 1;
    (result_12, result_11, tmp__trace) <@ __schoolbook16x (param_61,
    param_60, param_59, param_58, param_57, param_56, param_55, param_54,
    param_53);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_12;
    aim <- result_11;
    b_rp <-
    (BArray512.set256d b_rp 64
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 64 are);
    b_rp <-
    (BArray512.set256d b_rp 96
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 96 aim);
    zetaqinv <- (BArray800.get256d jzetas_exp 336);
    zeta_0 <- (BArray800.get256d jzetas_exp 368);
    are <- (BArray512.get256d ap 128);
    aim <- (BArray512.get256d ap 160);
    bre <- (BArray512.get256d bp 128);
    bim <- (BArray512.get256d bp 160);
    param_52 <- are;
    param_51 <- aim;
    param_50 <- bre;
    param_49 <- bim;
    param_48 <- zeta_0;
    param_47 <- zetaqinv;
    param_46 <- qx16;
    param_45 <- qinvx16;
    param_44 <- 0;
    (result_10, result_9, tmp__trace) <@ __schoolbook16x (param_52, param_51,
    param_50, param_49, param_48, param_47, param_46, param_45, param_44);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_10;
    aim <- result_9;
    b_rp <-
    (BArray512.set256d b_rp 128
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 128 are);
    b_rp <-
    (BArray512.set256d b_rp 160
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 160 aim);
    are <- (BArray512.get256d ap 192);
    aim <- (BArray512.get256d ap 224);
    bre <- (BArray512.get256d bp 192);
    bim <- (BArray512.get256d bp 224);
    param_43 <- are;
    param_42 <- aim;
    param_41 <- bre;
    param_40 <- bim;
    param_39 <- zeta_0;
    param_38 <- zetaqinv;
    param_37 <- qx16;
    param_36 <- qinvx16;
    param_35 <- 1;
    (result_8, result_7, tmp__trace) <@ __schoolbook16x (param_43, param_42,
    param_41, param_40, param_39, param_38, param_37, param_36, param_35);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_8;
    aim <- result_7;
    b_rp <-
    (BArray512.set256d b_rp 192
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 192 are);
    b_rp <-
    (BArray512.set256d b_rp 224
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 224 aim);
    zetaqinv <- (BArray800.get256d jzetas_exp 664);
    zeta_0 <- (BArray800.get256d jzetas_exp 696);
    are <- (BArray512.get256d ap 256);
    aim <- (BArray512.get256d ap 288);
    bre <- (BArray512.get256d bp 256);
    bim <- (BArray512.get256d bp 288);
    param_34 <- are;
    param_33 <- aim;
    param_32 <- bre;
    param_31 <- bim;
    param_30 <- zeta_0;
    param_29 <- zetaqinv;
    param_28 <- qx16;
    param_27 <- qinvx16;
    param_26 <- 0;
    (result_6, result_5, tmp__trace) <@ __schoolbook16x (param_34, param_33,
    param_32, param_31, param_30, param_29, param_28, param_27, param_26);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_6;
    aim <- result_5;
    b_rp <-
    (BArray512.set256d b_rp 256
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 256 are);
    b_rp <-
    (BArray512.set256d b_rp 288
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 288 aim);
    are <- (BArray512.get256d ap 320);
    aim <- (BArray512.get256d ap 352);
    bre <- (BArray512.get256d bp 320);
    bim <- (BArray512.get256d bp 352);
    param_25 <- are;
    param_24 <- aim;
    param_23 <- bre;
    param_22 <- bim;
    param_21 <- zeta_0;
    param_20 <- zetaqinv;
    param_19 <- qx16;
    param_18 <- qinvx16;
    param_17 <- 1;
    (result_4, result_3, tmp__trace) <@ __schoolbook16x (param_25, param_24,
    param_23, param_22, param_21, param_20, param_19, param_18, param_17);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_4;
    aim <- result_3;
    b_rp <-
    (BArray512.set256d b_rp 320
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 320 are);
    b_rp <-
    (BArray512.set256d b_rp 352
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 352 aim);
    zetaqinv <- (BArray800.get256d jzetas_exp 728);
    zeta_0 <- (BArray800.get256d jzetas_exp 760);
    are <- (BArray512.get256d ap 384);
    aim <- (BArray512.get256d ap 416);
    bre <- (BArray512.get256d bp 384);
    bim <- (BArray512.get256d bp 416);
    param_16 <- are;
    param_15 <- aim;
    param_14 <- bre;
    param_13 <- bim;
    param_12 <- zeta_0;
    param_11 <- zetaqinv;
    param_10 <- qx16;
    param_9 <- qinvx16;
    param_8 <- 0;
    (result_2, result_1, tmp__trace) <@ __schoolbook16x (param_16, param_15,
    param_14, param_13, param_12, param_11, param_10, param_9, param_8);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_2;
    aim <- result_1;
    b_rp <-
    (BArray512.set256d b_rp 384
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 384 are);
    b_rp <-
    (BArray512.set256d b_rp 416
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 416 aim);
    are <- (BArray512.get256d ap 448);
    aim <- (BArray512.get256d ap 480);
    bre <- (BArray512.get256d bp 448);
    bim <- (BArray512.get256d bp 480);
    param_7 <- are;
    param_6 <- aim;
    param_5 <- bre;
    param_4 <- bim;
    param_3 <- zeta_0;
    param_2 <- zetaqinv;
    param_1 <- qx16;
    param_0 <- qinvx16;
    param <- 1;
    (result_0, result, tmp__trace) <@ __schoolbook16x (param_7, param_6,
    param_5, param_4, param_3, param_2, param_1, param_0, param);
    trace__poly_basemul <- (trace__poly_basemul ++ tmp__trace);
    are <- result_0;
    aim <- result;
    b_rp <-
    (BArray512.set256d b_rp 448
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 448 are);
    b_rp <-
    (BArray512.set256d b_rp 480
    (W256.of_int
    115792089237316195423570985008687907853269984665640564039457584007913129639935
    ));
    rp <- (BArray512.set256d rp 480 aim);
    return (rp, b_rp, trace__poly_basemul);
  }
  proc _i_poly_frombytes (rp:BArray512.t, b_rp:BArray512.t, ap:BArray384.t,
                          b_ap:BArray384.t) : BArray512.t * BArray512.t *
                                              trace = {
    var mask:W256.t;
    var i:int;
    var t0:W256.t;
    var t1:W256.t;
    var t2:W256.t;
    var t3:W256.t;
    var t4:W256.t;
    var t5:W256.t;
    var tt:W256.t;
    var t6:W256.t;
    var t7:W256.t;
    var t8:W256.t;
    var t9:W256.t;
    var t10:W256.t;
    var t11:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var result_19:W256.t;
    var result_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_21:W256.t;
    var result_22:W256.t;
    var trace__i_poly_frombytes:trace;
    trace__i_poly_frombytes <- [];
    trace__i_poly_frombytes <-
    (trace__i_poly_frombytes ++ [(Assert, (is_init b_ap 0 384))]);
    mask <- (BArray32.get256 maskx16 0);
    i <- 0;
    while ((i < 2)) {
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert, ((0 <= (192 * i)) /\ (((192 * i) + 32) <= 384)))]);
      t0 <- (BArray384.get256d ap (192 * i));
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= ((192 * i) + 32)) /\ ((((192 * i) + 32) + 32) <= 384)))]);
      t1 <- (BArray384.get256d ap ((192 * i) + 32));
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= ((192 * i) + 64)) /\ ((((192 * i) + 64) + 32) <= 384)))]);
      t2 <- (BArray384.get256d ap ((192 * i) + 64));
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= ((192 * i) + 96)) /\ ((((192 * i) + 96) + 32) <= 384)))]);
      t3 <- (BArray384.get256d ap ((192 * i) + 96));
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= ((192 * i) + 128)) /\ ((((192 * i) + 128) + 32) <= 384)))]);
      t4 <- (BArray384.get256d ap ((192 * i) + 128));
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= ((192 * i) + 160)) /\ ((((192 * i) + 160) + 32) <= 384)))]);
      t5 <- (BArray384.get256d ap ((192 * i) + 160));
      param_22 <- t0;
      param_21 <- t3;
      (result_22, result_21, tmp__trace) <@ __shuffle8 (param_22, param_21);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      tt <- result_22;
      t3 <- result_21;
      param_20 <- t1;
      param_19 <- t4;
      (result_20, result_19, tmp__trace) <@ __shuffle8 (param_20, param_19);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t0 <- result_20;
      t4 <- result_19;
      param_18 <- t2;
      param_17 <- t5;
      (result_18, result_17, tmp__trace) <@ __shuffle8 (param_18, param_17);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t1 <- result_18;
      t5 <- result_17;
      param_16 <- tt;
      param_15 <- t4;
      (result_16, result_15, tmp__trace) <@ __shuffle4 (param_16, param_15);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t2 <- result_16;
      t4 <- result_15;
      param_14 <- t3;
      param_13 <- t1;
      (result_14, result_13, tmp__trace) <@ __shuffle4 (param_14, param_13);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      tt <- result_14;
      t1 <- result_13;
      param_12 <- t0;
      param_11 <- t5;
      (result_12, result_11, tmp__trace) <@ __shuffle4 (param_12, param_11);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t3 <- result_12;
      t5 <- result_11;
      param_10 <- t2;
      param_9 <- t1;
      (result_10, result_9, tmp__trace) <@ __shuffle2 (param_10, param_9);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t0 <- result_10;
      t1 <- result_9;
      param_8 <- t4;
      param_7 <- t3;
      (result_8, result_7, tmp__trace) <@ __shuffle2 (param_8, param_7);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t2 <- result_8;
      t3 <- result_7;
      param_6 <- tt;
      param_5 <- t5;
      (result_6, result_5, tmp__trace) <@ __shuffle2 (param_6, param_5);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t4 <- result_6;
      t5 <- result_5;
      param_4 <- t0;
      param_3 <- t3;
      (result_4, result_3, tmp__trace) <@ __shuffle1 (param_4, param_3);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t6 <- result_4;
      t3 <- result_3;
      param_2 <- t1;
      param_1 <- t4;
      (result_2, result_1, tmp__trace) <@ __shuffle1 (param_2, param_1);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t0 <- result_2;
      t4 <- result_1;
      param_0 <- t2;
      param <- t5;
      (result_0, result, tmp__trace) <@ __shuffle1 (param_0, param);
      trace__i_poly_frombytes <- (trace__i_poly_frombytes ++ tmp__trace);
      t1 <- result_0;
      t5 <- result;
      t7 <- (VPSRL_16u16 t6 (W128.of_int 12));
      t8 <- (VPSLL_16u16 t3 (W128.of_int 4));
      t7 <- (VPOR_256 t7 t8);
      t6 <- (VPAND_256 mask t6);
      t7 <- (VPAND_256 mask t7);
      t8 <- (VPSRL_16u16 t3 (W128.of_int 8));
      t9 <- (VPSLL_16u16 t0 (W128.of_int 8));
      t8 <- (VPOR_256 t8 t9);
      t8 <- (VPAND_256 mask t8);
      t9 <- (VPSRL_16u16 t0 (W128.of_int 4));
      t9 <- (VPAND_256 mask t9);
      t10 <- (VPSRL_16u16 t4 (W128.of_int 12));
      t11 <- (VPSLL_16u16 t1 (W128.of_int 4));
      t10 <- (VPOR_256 t10 t11);
      t4 <- (VPAND_256 mask t4);
      t10 <- (VPAND_256 mask t10);
      t11 <- (VPSRL_16u16 t1 (W128.of_int 8));
      tt <- (VPSLL_16u16 t5 (W128.of_int 8));
      t11 <- (VPOR_256 t11 tt);
      t11 <- (VPAND_256 mask t11);
      tt <- (VPSRL_16u16 t5 (W128.of_int 4));
      tt <- (VPAND_256 mask tt);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert, ((0 <= ((8 * i) * 32)) /\ ((((8 * i) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp ((8 * i) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp (8 * i) t6);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 1) * 32)) /\ (((((8 * i) + 1) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 1) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 1) t7);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 2) * 32)) /\ (((((8 * i) + 2) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 2) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 2) t8);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 3) * 32)) /\ (((((8 * i) + 3) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 3) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 3) t9);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 4) * 32)) /\ (((((8 * i) + 4) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 4) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 4) t4);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 5) * 32)) /\ (((((8 * i) + 5) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 5) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 5) t10);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 6) * 32)) /\ (((((8 * i) + 6) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 6) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 6) t11);
      trace__i_poly_frombytes <-
      (trace__i_poly_frombytes ++
      [(Assert,
       ((0 <= (((8 * i) + 7) * 32)) /\ (((((8 * i) + 7) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((8 * i) + 7) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((8 * i) + 7) tt);
      i <- (i + 1);
    }
    return (rp, b_rp, trace__i_poly_frombytes);
  }
  proc _poly_frommont (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                           BArray512.t *
                                                           trace = {
    var qx16:W256.t;
    var qinvx16:W256.t;
    var dmontx16:W256.t;
    var i:int;
    var t:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result:W256.t;
    var trace__poly_frommont:trace;
    trace__poly_frommont <- [];
    trace__poly_frommont <-
    (trace__poly_frommont ++ [(Assert, (is_init b_rp 0 512))]);
    qx16 <- (BArray32.get256 jqx16 0);
    qinvx16 <- (BArray32.get256 jqinvx16 0);
    dmontx16 <- (BArray32.get256 jdmontx16 0);
    i <- 0;
    while ((i < 16)) {
      trace__poly_frommont <-
      (trace__poly_frommont ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 512)))]);
      t <- (BArray512.get256 rp i);
      param_2 <- t;
      param_1 <- dmontx16;
      param_0 <- qx16;
      param <- qinvx16;
      (result, tmp__trace) <@ __fqmulx16 (param_2, param_1, param_0, param);
      trace__poly_frommont <- (trace__poly_frommont ++ tmp__trace);
      t <- result;
      trace__poly_frommont <-
      (trace__poly_frommont ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 512)))]);
      rp <- (BArray512.set256 rp i t);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_frommont);
  }
  proc _i_poly_frommsg (rp:BArray512.t, b_rp:BArray512.t, ap:BArray32.t,
                        b_ap:BArray32.t) : BArray512.t * BArray512.t * trace = {
    var hqs:W256.t;
    var shift:W256.t;
    var idx:W256.t;
    var f:W256.t;
    var i:int;
    var g3:W256.t;
    var g0:W256.t;
    var g1:W256.t;
    var g2:W256.t;
    var h0:W256.t;
    var h2:W256.t;
    var h1:W256.t;
    var h3:W256.t;
    var trace__i_poly_frommsg:trace;
    trace__i_poly_frommsg <- [];
    trace__i_poly_frommsg <-
    (trace__i_poly_frommsg ++ [(Assert, (is_init b_ap 0 32))]);
    hqs <- (BArray32.get256 hqx16_p1 0);
    shift <- (VPBROADCAST_2u128 (BArray16.get128 pfm_shift_s 0));
    idx <- (VPBROADCAST_2u128 (BArray16.get128 pfm_idx_s 0));
    f <- (BArray32.get256 ap 0);
    i <- 0;
    while ((i < 4)) {
      g3 <- (VPSHUFD_256 f (W8.of_int (85 * i)));
      g3 <- (VPSLLV_8u32 g3 shift);
      g3 <- (VPSHUFB_256 g3 idx);
      g0 <- (VPSLL_16u16 g3 (W128.of_int 12));
      g1 <- (VPSLL_16u16 g3 (W128.of_int 8));
      g2 <- (VPSLL_16u16 g3 (W128.of_int 4));
      g0 <- (VPSRA_16u16 g0 (W128.of_int 15));
      g1 <- (VPSRA_16u16 g1 (W128.of_int 15));
      g2 <- (VPSRA_16u16 g2 (W128.of_int 15));
      g3 <- (VPSRA_16u16 g3 (W128.of_int 15));
      g0 <- (VPAND_256 g0 hqs);
      g1 <- (VPAND_256 g1 hqs);
      g2 <- (VPAND_256 g2 hqs);
      g3 <- (VPAND_256 g3 hqs);
      h0 <- (VPUNPCKL_4u64 g0 g1);
      h2 <- (VPUNPCKH_4u64 g0 g1);
      h1 <- (VPUNPCKL_4u64 g2 g3);
      h3 <- (VPUNPCKH_4u64 g2 g3);
      g0 <- (VPERM2I128 h0 h1 (W8.of_int 32));
      g2 <- (VPERM2I128 h0 h1 (W8.of_int 49));
      g1 <- (VPERM2I128 h2 h3 (W8.of_int 32));
      g3 <- (VPERM2I128 h2 h3 (W8.of_int 49));
      trace__i_poly_frommsg <-
      (trace__i_poly_frommsg ++
      [(Assert, ((0 <= ((2 * i) * 32)) /\ ((((2 * i) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp ((2 * i) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp (2 * i) g0);
      trace__i_poly_frommsg <-
      (trace__i_poly_frommsg ++
      [(Assert,
       ((0 <= (((2 * i) + 1) * 32)) /\ (((((2 * i) + 1) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((2 * i) + 1) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((2 * i) + 1) g1);
      trace__i_poly_frommsg <-
      (trace__i_poly_frommsg ++
      [(Assert,
       ((0 <= (((2 * i) + 8) * 32)) /\ (((((2 * i) + 8) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((2 * i) + 8) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((2 * i) + 8) g2);
      trace__i_poly_frommsg <-
      (trace__i_poly_frommsg ++
      [(Assert,
       ((0 <= ((((2 * i) + 8) + 1) * 32)) /\
       ((((((2 * i) + 8) + 1) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp ((((2 * i) + 8) + 1) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp (((2 * i) + 8) + 1) g3);
      i <- (i + 1);
    }
    return (rp, b_rp, trace__i_poly_frommsg);
  }
  proc __cbd2 (rp:BArray512.t, b_rp:BArray512.t, buf:BArray128.t,
               b_buf:BArray128.t) : BArray512.t * BArray512.t * trace = {
    var mask55_s:W32.t;
    var mask33_s:W32.t;
    var mask03_s:W32.t;
    var mask0F_s:W32.t;
    var mask55:W256.t;
    var mask33:W256.t;
    var mask03:W256.t;
    var mask0F:W256.t;
    var i:int;
    var f0:W256.t;
    var f1:W256.t;
    var f2:W256.t;
    var f3:W256.t;
    var t:W128.t;
    var trace___cbd2:trace;
    trace___cbd2 <- [];
    trace___cbd2 <- (trace___cbd2 ++ [(Assert, (is_init b_buf 0 128))]);
    mask55_s <- (W32.of_int 1431655765);
    mask33_s <- (W32.of_int 858993459);
    mask03_s <- (W32.of_int 50529027);
    mask0F_s <- (W32.of_int 252645135);
    mask55 <- (VPBROADCAST_8u32 mask55_s);
    mask33 <- (VPBROADCAST_8u32 mask33_s);
    mask03 <- (VPBROADCAST_8u32 mask03_s);
    mask0F <- (VPBROADCAST_8u32 mask0F_s);
    i <- 0;
    while ((i < 4)) {
      trace___cbd2 <-
      (trace___cbd2 ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 128)))]);
      f0 <- (BArray128.get256 buf i);
      f1 <- (VPSRL_16u16 f0 (W128.of_int 1));
      f0 <- (VPAND_256 mask55 f0);
      f1 <- (VPAND_256 mask55 f1);
      f0 <- (VPADD_32u8 f0 f1);
      f1 <- (VPSRL_16u16 f0 (W128.of_int 2));
      f0 <- (VPAND_256 mask33 f0);
      f1 <- (VPAND_256 mask33 f1);
      f0 <- (VPADD_32u8 f0 mask33);
      f0 <- (VPSUB_32u8 f0 f1);
      f1 <- (VPSRL_16u16 f0 (W128.of_int 4));
      f0 <- (VPAND_256 mask0F f0);
      f1 <- (VPAND_256 mask0F f1);
      f0 <- (VPSUB_32u8 f0 mask03);
      f1 <- (VPSUB_32u8 f1 mask03);
      f2 <- (VPUNPCKL_32u8 f0 f1);
      f3 <- (VPUNPCKH_32u8 f0 f1);
      t <- (truncateu128 f2);
      f0 <- (VPMOVSX_16u8_16u16 t);
      t <- (VEXTRACTI128 f2 (W8.of_int 1));
      f1 <- (VPMOVSX_16u8_16u16 t);
      t <- (truncateu128 f3);
      f2 <- (VPMOVSX_16u8_16u16 t);
      t <- (VEXTRACTI128 f3 (W8.of_int 1));
      f3 <- (VPMOVSX_16u8_16u16 t);
      trace___cbd2 <-
      (trace___cbd2 ++
      [(Assert, ((0 <= ((4 * i) * 32)) /\ ((((4 * i) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp ((4 * i) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp (4 * i) f0);
      trace___cbd2 <-
      (trace___cbd2 ++
      [(Assert,
       ((0 <= (((4 * i) + 1) * 32)) /\ (((((4 * i) + 1) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((4 * i) + 1) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((4 * i) + 1) f2);
      trace___cbd2 <-
      (trace___cbd2 ++
      [(Assert,
       ((0 <= (((4 * i) + 2) * 32)) /\ (((((4 * i) + 2) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((4 * i) + 2) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((4 * i) + 2) f1);
      trace___cbd2 <-
      (trace___cbd2 ++
      [(Assert,
       ((0 <= (((4 * i) + 3) * 32)) /\ (((((4 * i) + 3) * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (((4 * i) + 3) * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp ((4 * i) + 3) f3);
      i <- (i + 1);
    }
    return (rp, b_rp, trace___cbd2);
  }
  proc __poly_cbd_eta1 (rp:BArray512.t, b_rp:BArray512.t, buf:BArray128.t,
                        b_buf:BArray128.t) : BArray512.t * BArray512.t *
                                             trace = {
    var param:BArray128.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray128.t;
    var b_param_0:BArray512.t;
    var trace___poly_cbd_eta1:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    param <- witness;
    param_0 <- witness;
    result <- witness;
    trace___poly_cbd_eta1 <- [];
    trace___poly_cbd_eta1 <-
    (trace___poly_cbd_eta1 ++ [(Assert, (is_init b_buf 0 128))]);
    b_param_0 <- b_rp;
    param_0 <- rp;
    b_param <- (SBArray128_128.get_sub8 b_buf 0);
    param <- (SBArray128_128.get_sub8 buf 0);
    (result, b_result, tmp__trace) <@ __cbd2 (param_0, b_param_0, param,
    b_param);
    trace___poly_cbd_eta1 <- (trace___poly_cbd_eta1 ++ tmp__trace);
    trace___poly_cbd_eta1 <-
    (trace___poly_cbd_eta1 ++ [(Assert, (is_init b_result 0 512))]);
    rp <- result;
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace___poly_cbd_eta1);
  }
  proc _poly_getnoise_eta2 (rp:BArray512.t, b_rp:BArray512.t,
                            seed:BArray32.t, b_seed:BArray32.t, nonce:W8.t) : 
  BArray512.t * BArray512.t * trace = {
    var nonce_s:BArray1.t;
    var buf:BArray128.t;
    var param:BArray128.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var param_1:BArray1.t;
    var param_2:BArray32.t;
    var param_3:BArray128.t;
    var result_0:BArray128.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_buf:BArray128.t;
    var b_result_0:BArray128.t;
    var b_param_0:BArray1.t;
    var b_param_1:BArray128.t;
    var b_nonce_s:BArray1.t;
    var trace__poly_getnoise_eta2:trace;
    b_buf <- witness;
    b_nonce_s <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    buf <- witness;
    nonce_s <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    result <- witness;
    result_0 <- witness;
    trace__poly_getnoise_eta2 <- [];
    trace__poly_getnoise_eta2 <-
    (trace__poly_getnoise_eta2 ++ [(Assert, (is_init b_seed 0 32))]);
    b_nonce_s <- (BArray1.init_arr (W8.of_int 0) 1);
    b_buf <- (BArray128.init_arr (W8.of_int 0) 128);
    (* Erased call to spill *)
    b_nonce_s <- (BArray1.set8d b_nonce_s 0 (W8.of_int 255));
    nonce_s <- (BArray1.set8 nonce_s 0 nonce);
    b_param_1 <- b_buf;
    param_3 <- buf;
    param_2 <- seed;
    b_param_0 <- b_nonce_s;
    param_1 <- nonce_s;
    (result_0, b_result_0, tmp__trace) <@ _shake256_A128__A32_A1 (param_3,
    b_param_1, param_2, (BArray32.init_arr (W8.of_int 255) 32), param_1,
    b_param_0);
    trace__poly_getnoise_eta2 <- (trace__poly_getnoise_eta2 ++ tmp__trace);
    trace__poly_getnoise_eta2 <-
    (trace__poly_getnoise_eta2 ++ [(Assert, (is_init b_result_0 0 128))]);
    buf <- result_0;
    (* Erased call to unspill *)
    b_param <- b_rp;
    param_0 <- rp;
    param <- buf;
    (result, b_result, tmp__trace) <@ __poly_cbd_eta1 (param_0, b_param,
    param, (BArray128.init_arr (W8.of_int 255) 128));
    trace__poly_getnoise_eta2 <- (trace__poly_getnoise_eta2 ++ tmp__trace);
    trace__poly_getnoise_eta2 <-
    (trace__poly_getnoise_eta2 ++ [(Assert, (is_init b_result 0 512))]);
    rp <- result;
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_getnoise_eta2);
  }
  proc _poly_getnoise_eta1_4x (r0:BArray512.t, b_r0:BArray512.t,
                               r1:BArray512.t, b_r1:BArray512.t,
                               r2:BArray512.t, b_r2:BArray512.t,
                               r3:BArray512.t, b_r3:BArray512.t,
                               seed:BArray32.t, b_seed:BArray32.t, nonce:W8.t) : 
  BArray512.t * BArray512.t * BArray512.t * BArray512.t * BArray512.t *
  BArray512.t * BArray512.t * BArray512.t * trace = {
    var buf0_s:BArray128.t;
    var buf0:BArray128.t;
    var buf1_s:BArray128.t;
    var buf1:BArray128.t;
    var buf2_s:BArray128.t;
    var buf2:BArray128.t;
    var buf3_s:BArray128.t;
    var buf3:BArray128.t;
    var nonces:BArray4.t;
    var param:BArray128.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var param_1:BArray128.t;
    var param_2:BArray512.t;
    var result_0:BArray512.t;
    var param_3:BArray128.t;
    var param_4:BArray512.t;
    var result_1:BArray512.t;
    var param_5:BArray128.t;
    var param_6:BArray512.t;
    var result_2:BArray512.t;
    var param_7:BArray4.t;
    var param_8:BArray32.t;
    var param_9:BArray128.t;
    var param_10:BArray128.t;
    var param_11:BArray128.t;
    var param_12:BArray128.t;
    var result_3:BArray128.t;
    var result_4:BArray128.t;
    var result_5:BArray128.t;
    var result_6:BArray128.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_buf3:BArray128.t;
    var b_result_0:BArray512.t;
    var b_param_0:BArray512.t;
    var b_buf2:BArray128.t;
    var b_result_1:BArray512.t;
    var b_param_1:BArray512.t;
    var b_buf1:BArray128.t;
    var b_result_2:BArray512.t;
    var b_param_2:BArray512.t;
    var b_buf0:BArray128.t;
    var b_result_3:BArray128.t;
    var b_result_4:BArray128.t;
    var b_result_5:BArray128.t;
    var b_result_6:BArray128.t;
    var b_param_3:BArray4.t;
    var b_param_4:BArray128.t;
    var b_param_5:BArray128.t;
    var b_param_6:BArray128.t;
    var b_param_7:BArray128.t;
    var b_nonces:BArray4.t;
    var b_buf3_s:BArray128.t;
    var b_buf2_s:BArray128.t;
    var b_buf1_s:BArray128.t;
    var b_buf0_s:BArray128.t;
    var trace__poly_getnoise_eta1_4x:trace;
    b_buf0 <- witness;
    b_buf0_s <- witness;
    b_buf1 <- witness;
    b_buf1_s <- witness;
    b_buf2 <- witness;
    b_buf2_s <- witness;
    b_buf3 <- witness;
    b_buf3_s <- witness;
    b_nonces <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    buf0 <- witness;
    buf0_s <- witness;
    buf1 <- witness;
    buf1_s <- witness;
    buf2 <- witness;
    buf2_s <- witness;
    buf3 <- witness;
    buf3_s <- witness;
    nonces <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_6 <- witness;
    trace__poly_getnoise_eta1_4x <- [];
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ [(Assert, (is_init b_seed 0 32))]);
    b_nonces <- (BArray4.init_arr (W8.of_int 0) 4);
    b_buf0_s <- (BArray128.init_arr (W8.of_int 0) 128);
    b_buf1_s <- (BArray128.init_arr (W8.of_int 0) 128);
    b_buf2_s <- (BArray128.init_arr (W8.of_int 0) 128);
    b_buf3_s <- (BArray128.init_arr (W8.of_int 0) 128);
    b_buf0 <- b_buf0_s;
    buf0 <- buf0_s;
    b_buf1 <- b_buf1_s;
    buf1 <- buf1_s;
    b_buf2 <- b_buf2_s;
    buf2 <- buf2_s;
    b_buf3 <- b_buf3_s;
    buf3 <- buf3_s;
    (* Erased call to spill *)
    b_nonces <- (BArray4.set8d b_nonces 0 (W8.of_int 255));
    nonces <- (BArray4.set8 nonces 0 nonce);
    nonce <- (nonce + (W8.of_int 1));
    b_nonces <- (BArray4.set8d b_nonces 1 (W8.of_int 255));
    nonces <- (BArray4.set8 nonces 1 nonce);
    nonce <- (nonce + (W8.of_int 1));
    b_nonces <- (BArray4.set8d b_nonces 2 (W8.of_int 255));
    nonces <- (BArray4.set8 nonces 2 nonce);
    nonce <- (nonce + (W8.of_int 1));
    b_nonces <- (BArray4.set8d b_nonces 3 (W8.of_int 255));
    nonces <- (BArray4.set8 nonces 3 nonce);
    b_param_7 <- b_buf0;
    param_12 <- buf0;
    b_param_6 <- b_buf1;
    param_11 <- buf1;
    b_param_5 <- b_buf2;
    param_10 <- buf2;
    b_param_4 <- b_buf3;
    param_9 <- buf3;
    param_8 <- seed;
    b_param_3 <- b_nonces;
    param_7 <- nonces;
    (result_6, b_result_6, result_5, b_result_5, result_4, b_result_4,
    result_3, b_result_3, tmp__trace) <@ _shake256x4_A128__A32_A1 (param_12,
    b_param_7, param_11, b_param_6, param_10, b_param_5, param_9, b_param_4,
    param_8, (BArray32.init_arr (W8.of_int 255) 32), param_7, b_param_3);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ tmp__trace);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++
    [(Assert,
     ((((is_init b_result_6 0 128) /\ (is_init b_result_5 0 128)) /\
      (is_init b_result_4 0 128)) /\
     (is_init b_result_3 0 128)))]);
    buf0 <- result_6;
    buf1 <- result_5;
    buf2 <- result_4;
    buf3 <- result_3;
    (* Erased call to unspill *)
    b_param_2 <- b_r0;
    param_6 <- r0;
    param_5 <- buf0;
    (result_2, b_result_2, tmp__trace) <@ __poly_cbd_eta1 (param_6,
    b_param_2, param_5, (BArray128.init_arr (W8.of_int 255) 128));
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ tmp__trace);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ [(Assert, (is_init b_result_2 0 512))]);
    r0 <- result_2;
    b_param_1 <- b_r1;
    param_4 <- r1;
    param_3 <- buf1;
    (result_1, b_result_1, tmp__trace) <@ __poly_cbd_eta1 (param_4,
    b_param_1, param_3, (BArray128.init_arr (W8.of_int 255) 128));
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ tmp__trace);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ [(Assert, (is_init b_result_1 0 512))]);
    r1 <- result_1;
    b_param_0 <- b_r2;
    param_2 <- r2;
    param_1 <- buf2;
    (result_0, b_result_0, tmp__trace) <@ __poly_cbd_eta1 (param_2,
    b_param_0, param_1, (BArray128.init_arr (W8.of_int 255) 128));
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ tmp__trace);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ [(Assert, (is_init b_result_0 0 512))]);
    r2 <- result_0;
    b_param <- b_r3;
    param_0 <- r3;
    param <- buf3;
    (result, b_result, tmp__trace) <@ __poly_cbd_eta1 (param_0, b_param,
    param, (BArray128.init_arr (W8.of_int 255) 128));
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ tmp__trace);
    trace__poly_getnoise_eta1_4x <-
    (trace__poly_getnoise_eta1_4x ++ [(Assert, (is_init b_result 0 512))]);
    r3 <- result;
    b_r0 <- (BArray512.init_arr (W8.of_int 255) 512);
    b_r1 <- (BArray512.init_arr (W8.of_int 255) 512);
    b_r2 <- (BArray512.init_arr (W8.of_int 255) 512);
    b_r3 <- (BArray512.init_arr (W8.of_int 255) 512);
    return (r0, b_r0, r1, b_r1, r2, b_r2, r3, b_r3,
           trace__poly_getnoise_eta1_4x);
  }
  proc __invntt___butterfly64x (rl0:W256.t, rl1:W256.t, rl2:W256.t,
                                rl3:W256.t, rh0:W256.t, rh1:W256.t,
                                rh2:W256.t, rh3:W256.t, zl0:W256.t,
                                zl1:W256.t, zh0:W256.t, zh1:W256.t,
                                qx16:W256.t) : W256.t * W256.t * W256.t *
                                               W256.t * W256.t * W256.t *
                                               W256.t * W256.t * trace = {
    var t0:W256.t;
    var t1:W256.t;
    var t2:W256.t;
    var t3:W256.t;
    var trace___invntt___butterfly64x:trace;
    trace___invntt___butterfly64x <- [];
    t0 <- (VPSUB_16u16 rl0 rh0);
    t1 <- (VPSUB_16u16 rl1 rh1);
    t2 <- (VPSUB_16u16 rl2 rh2);
    rl0 <- (VPADD_16u16 rh0 rl0);
    rl1 <- (VPADD_16u16 rh1 rl1);
    rh0 <- (VPMULL_16u16 zl0 t0);
    rl2 <- (VPADD_16u16 rh2 rl2);
    rh1 <- (VPMULL_16u16 zl0 t1);
    t3 <- (VPSUB_16u16 rl3 rh3);
    rl3 <- (VPADD_16u16 rh3 rl3);
    rh2 <- (VPMULL_16u16 zl1 t2);
    rh3 <- (VPMULL_16u16 zl1 t3);
    t0 <- (VPMULH_16u16 zh0 t0);
    t1 <- (VPMULH_16u16 zh0 t1);
    t2 <- (VPMULH_16u16 zh1 t2);
    t3 <- (VPMULH_16u16 zh1 t3);
    rh0 <- (VPMULH_16u16 qx16 rh0);
    rh1 <- (VPMULH_16u16 qx16 rh1);
    rh2 <- (VPMULH_16u16 qx16 rh2);
    rh3 <- (VPMULH_16u16 qx16 rh3);
    rh0 <- (VPSUB_16u16 t0 rh0);
    rh1 <- (VPSUB_16u16 t1 rh1);
    rh2 <- (VPSUB_16u16 t2 rh2);
    rh3 <- (VPSUB_16u16 t3 rh3);
    return (rl0, rl1, rl2, rl3, rh0, rh1, rh2, rh3,
           trace___invntt___butterfly64x);
  }
  proc _poly_invntt (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                         BArray512.t * trace = {
    var qx16:W256.t;
    var i:int;
    var zeta0:W256.t;
    var zeta1:W256.t;
    var zeta2:W256.t;
    var zeta3:W256.t;
    var r0:W256.t;
    var r1:W256.t;
    var r2:W256.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r6:W256.t;
    var r7:W256.t;
    var vx16:W256.t;
    var flox16:W256.t;
    var fhix16:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result_0:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var result_1:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_2:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var param_23:W256.t;
    var param_24:W256.t;
    var param_25:W256.t;
    var param_26:W256.t;
    var param_27:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_28:W256.t;
    var param_29:W256.t;
    var param_30:W256.t;
    var result_11:W256.t;
    var param_31:W256.t;
    var param_32:W256.t;
    var param_33:W256.t;
    var param_34:W256.t;
    var param_35:W256.t;
    var param_36:W256.t;
    var param_37:W256.t;
    var param_38:W256.t;
    var param_39:W256.t;
    var param_40:W256.t;
    var param_41:W256.t;
    var param_42:W256.t;
    var param_43:W256.t;
    var result_12:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var result_19:W256.t;
    var param_44:W256.t;
    var param_45:W256.t;
    var result_20:W256.t;
    var result_21:W256.t;
    var param_46:W256.t;
    var param_47:W256.t;
    var result_22:W256.t;
    var result_23:W256.t;
    var param_48:W256.t;
    var param_49:W256.t;
    var result_24:W256.t;
    var result_25:W256.t;
    var param_50:W256.t;
    var param_51:W256.t;
    var result_26:W256.t;
    var result_27:W256.t;
    var param_52:W256.t;
    var param_53:W256.t;
    var param_54:W256.t;
    var result_28:W256.t;
    var param_55:W256.t;
    var param_56:W256.t;
    var param_57:W256.t;
    var param_58:W256.t;
    var param_59:W256.t;
    var param_60:W256.t;
    var param_61:W256.t;
    var param_62:W256.t;
    var param_63:W256.t;
    var param_64:W256.t;
    var param_65:W256.t;
    var param_66:W256.t;
    var param_67:W256.t;
    var result_29:W256.t;
    var result_30:W256.t;
    var result_31:W256.t;
    var result_32:W256.t;
    var result_33:W256.t;
    var result_34:W256.t;
    var result_35:W256.t;
    var result_36:W256.t;
    var param_68:W256.t;
    var param_69:W256.t;
    var result_37:W256.t;
    var result_38:W256.t;
    var param_70:W256.t;
    var param_71:W256.t;
    var result_39:W256.t;
    var result_40:W256.t;
    var param_72:W256.t;
    var param_73:W256.t;
    var result_41:W256.t;
    var result_42:W256.t;
    var param_74:W256.t;
    var param_75:W256.t;
    var result_43:W256.t;
    var result_44:W256.t;
    var param_76:W256.t;
    var param_77:W256.t;
    var param_78:W256.t;
    var result_45:W256.t;
    var param_79:W256.t;
    var param_80:W256.t;
    var param_81:W256.t;
    var param_82:W256.t;
    var param_83:W256.t;
    var param_84:W256.t;
    var param_85:W256.t;
    var param_86:W256.t;
    var param_87:W256.t;
    var param_88:W256.t;
    var param_89:W256.t;
    var param_90:W256.t;
    var param_91:W256.t;
    var result_46:W256.t;
    var result_47:W256.t;
    var result_48:W256.t;
    var result_49:W256.t;
    var result_50:W256.t;
    var result_51:W256.t;
    var result_52:W256.t;
    var result_53:W256.t;
    var param_92:W256.t;
    var param_93:W256.t;
    var result_54:W256.t;
    var result_55:W256.t;
    var param_94:W256.t;
    var param_95:W256.t;
    var result_56:W256.t;
    var result_57:W256.t;
    var param_96:W256.t;
    var param_97:W256.t;
    var result_58:W256.t;
    var result_59:W256.t;
    var param_98:W256.t;
    var param_99:W256.t;
    var result_60:W256.t;
    var result_61:W256.t;
    var param_100:W256.t;
    var param_101:W256.t;
    var param_102:W256.t;
    var result_62:W256.t;
    var param_103:W256.t;
    var param_104:W256.t;
    var param_105:W256.t;
    var param_106:W256.t;
    var param_107:W256.t;
    var param_108:W256.t;
    var param_109:W256.t;
    var param_110:W256.t;
    var param_111:W256.t;
    var param_112:W256.t;
    var param_113:W256.t;
    var param_114:W256.t;
    var param_115:W256.t;
    var result_63:W256.t;
    var result_64:W256.t;
    var result_65:W256.t;
    var result_66:W256.t;
    var result_67:W256.t;
    var result_68:W256.t;
    var result_69:W256.t;
    var result_70:W256.t;
    var param_116:W256.t;
    var param_117:W256.t;
    var result_71:W256.t;
    var result_72:W256.t;
    var param_118:W256.t;
    var param_119:W256.t;
    var result_73:W256.t;
    var result_74:W256.t;
    var param_120:W256.t;
    var param_121:W256.t;
    var result_75:W256.t;
    var result_76:W256.t;
    var param_122:W256.t;
    var param_123:W256.t;
    var result_77:W256.t;
    var result_78:W256.t;
    var param_124:W256.t;
    var param_125:W256.t;
    var param_126:W256.t;
    var param_127:W256.t;
    var param_128:W256.t;
    var param_129:W256.t;
    var param_130:W256.t;
    var param_131:W256.t;
    var param_132:W256.t;
    var param_133:W256.t;
    var param_134:W256.t;
    var param_135:W256.t;
    var param_136:W256.t;
    var result_79:W256.t;
    var result_80:W256.t;
    var result_81:W256.t;
    var result_82:W256.t;
    var result_83:W256.t;
    var result_84:W256.t;
    var result_85:W256.t;
    var result_86:W256.t;
    var param_137:W256.t;
    var param_138:W256.t;
    var param_139:W256.t;
    var result_87:W256.t;
    var param_140:W256.t;
    var param_141:W256.t;
    var param_142:W256.t;
    var result_88:W256.t;
    var param_143:W256.t;
    var param_144:W256.t;
    var param_145:W256.t;
    var result_89:W256.t;
    var param_146:W256.t;
    var param_147:W256.t;
    var param_148:W256.t;
    var result_90:W256.t;
    var param_149:W256.t;
    var param_150:W256.t;
    var param_151:W256.t;
    var param_152:W256.t;
    var param_153:W256.t;
    var param_154:W256.t;
    var param_155:W256.t;
    var param_156:W256.t;
    var param_157:W256.t;
    var param_158:W256.t;
    var param_159:W256.t;
    var param_160:W256.t;
    var param_161:W256.t;
    var result_91:W256.t;
    var result_92:W256.t;
    var result_93:W256.t;
    var result_94:W256.t;
    var result_95:W256.t;
    var result_96:W256.t;
    var result_97:W256.t;
    var result_98:W256.t;
    var b_r2:bool;
    var b_r0:bool;
    var b_r6:bool;
    var b_r4:bool;
    var trace__poly_invntt:trace;
    trace__poly_invntt <- [];
    trace__poly_invntt <-
    (trace__poly_invntt ++ [(Assert, (is_init b_rp 0 512))]);
    b_r0 <- false;
    b_r2 <- false;
    b_r4 <- false;
    b_r6 <- false;
    qx16 <- (BArray32.get256 jqx16 0);
    i <- 0;
    while ((i < 2)) {
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert, ((0 <= (392 * i)) /\ (((392 * i) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_inv_exp (392 * i));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (64 + (392 * i))) /\ (((64 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_inv_exp (64 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (32 + (392 * i))) /\ (((32 + (392 * i)) + 32) <= 800)))]);
      zeta2 <- (BArray800.get256d jzetas_inv_exp (32 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (96 + (392 * i))) /\ (((96 + (392 * i)) + 32) <= 800)))]);
      zeta3 <- (BArray800.get256d jzetas_inv_exp (96 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert, ((0 <= (256 * i)) /\ (((256 * i) + 32) <= 512)))]);
      r0 <- (BArray512.get256d rp (256 * i));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (32 + (256 * i))) /\ (((32 + (256 * i)) + 32) <= 512)))]);
      r1 <- (BArray512.get256d rp (32 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (64 + (256 * i))) /\ (((64 + (256 * i)) + 32) <= 512)))]);
      r2 <- (BArray512.get256d rp (64 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (96 + (256 * i))) /\ (((96 + (256 * i)) + 32) <= 512)))]);
      r3 <- (BArray512.get256d rp (96 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (128 + (256 * i))) /\ (((128 + (256 * i)) + 32) <= 512)))]);
      r4 <- (BArray512.get256d rp (128 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (160 + (256 * i))) /\ (((160 + (256 * i)) + 32) <= 512)))]);
      r5 <- (BArray512.get256d rp (160 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (192 + (256 * i))) /\ (((192 + (256 * i)) + 32) <= 512)))]);
      r6 <- (BArray512.get256d rp (192 + (256 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (224 + (256 * i))) /\ (((224 + (256 * i)) + 32) <= 512)))]);
      r7 <- (BArray512.get256d rp (224 + (256 * i)));
      param_161 <- r0;
      param_160 <- r1;
      param_159 <- r4;
      param_158 <- r5;
      param_157 <- r2;
      param_156 <- r3;
      param_155 <- r6;
      param_154 <- r7;
      param_153 <- zeta0;
      param_152 <- zeta1;
      param_151 <- zeta2;
      param_150 <- zeta3;
      param_149 <- qx16;
      (result_98, result_97, result_96, result_95, result_94, result_93,
      result_92, result_91, tmp__trace) <@ __invntt___butterfly64x (param_161,
      param_160, param_159, param_158, param_157, param_156, param_155,
      param_154, param_153, param_152, param_151, param_150, param_149);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_98;
      r1 <- result_97;
      r4 <- result_96;
      r5 <- result_95;
      r2 <- result_94;
      r3 <- result_93;
      r6 <- result_92;
      r7 <- result_91;
      vx16 <- (BArray32.get256 jvx16 0);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (128 + (392 * i))) /\ (((128 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_inv_exp (128 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (160 + (392 * i))) /\ (((160 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_inv_exp (160 + (392 * i)));
      param_148 <- r0;
      param_147 <- qx16;
      param_146 <- vx16;
      (result_90, tmp__trace) <@ __red16x (param_148, param_147, param_146);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_90;
      param_145 <- r1;
      param_144 <- qx16;
      param_143 <- vx16;
      (result_89, tmp__trace) <@ __red16x (param_145, param_144, param_143);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r1 <- result_89;
      param_142 <- r4;
      param_141 <- qx16;
      param_140 <- vx16;
      (result_88, tmp__trace) <@ __red16x (param_142, param_141, param_140);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r4 <- result_88;
      param_139 <- r5;
      param_138 <- qx16;
      param_137 <- vx16;
      (result_87, tmp__trace) <@ __red16x (param_139, param_138, param_137);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r5 <- result_87;
      param_136 <- r0;
      param_135 <- r1;
      param_134 <- r2;
      param_133 <- r3;
      param_132 <- r4;
      param_131 <- r5;
      param_130 <- r6;
      param_129 <- r7;
      param_128 <- zeta0;
      param_127 <- zeta0;
      param_126 <- zeta1;
      param_125 <- zeta1;
      param_124 <- qx16;
      (result_86, result_85, result_84, result_83, result_82, result_81,
      result_80, result_79, tmp__trace) <@ __invntt___butterfly64x (param_136,
      param_135, param_134, param_133, param_132, param_131, param_130,
      param_129, param_128, param_127, param_126, param_125, param_124);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_86;
      r1 <- result_85;
      r2 <- result_84;
      r3 <- result_83;
      r4 <- result_82;
      r5 <- result_81;
      r6 <- result_80;
      r7 <- result_79;
      param_123 <- r0;
      param_122 <- r1;
      (result_78, result_77, tmp__trace) <@ __shuffle1 (param_123,
      param_122);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_78;
      r1 <- result_77;
      param_121 <- r2;
      param_120 <- r3;
      (result_76, result_75, tmp__trace) <@ __shuffle1 (param_121,
      param_120);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r2 <- result_76;
      r3 <- result_75;
      param_119 <- r4;
      param_118 <- r5;
      (result_74, result_73, tmp__trace) <@ __shuffle1 (param_119,
      param_118);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r4 <- result_74;
      r5 <- result_73;
      param_117 <- r6;
      param_116 <- r7;
      (result_72, result_71, tmp__trace) <@ __shuffle1 (param_117,
      param_116);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r6 <- result_72;
      r7 <- result_71;
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (192 + (392 * i))) /\ (((192 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_inv_exp (192 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (224 + (392 * i))) /\ (((224 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_inv_exp (224 + (392 * i)));
      param_115 <- r0;
      param_114 <- r2;
      param_113 <- r4;
      param_112 <- r6;
      param_111 <- r1;
      param_110 <- r3;
      param_109 <- r5;
      param_108 <- r7;
      param_107 <- zeta0;
      param_106 <- zeta0;
      param_105 <- zeta1;
      param_104 <- zeta1;
      param_103 <- qx16;
      (result_70, result_69, result_68, result_67, result_66, result_65,
      result_64, result_63, tmp__trace) <@ __invntt___butterfly64x (param_115,
      param_114, param_113, param_112, param_111, param_110, param_109,
      param_108, param_107, param_106, param_105, param_104, param_103);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_70;
      r2 <- result_69;
      r4 <- result_68;
      r6 <- result_67;
      r1 <- result_66;
      r3 <- result_65;
      r5 <- result_64;
      r7 <- result_63;
      param_102 <- r0;
      param_101 <- qx16;
      param_100 <- vx16;
      (result_62, tmp__trace) <@ __red16x (param_102, param_101, param_100);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_62;
      param_99 <- r0;
      param_98 <- r2;
      (result_61, result_60, tmp__trace) <@ __shuffle2 (param_99, param_98);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_61;
      r2 <- result_60;
      param_97 <- r4;
      param_96 <- r6;
      (result_59, result_58, tmp__trace) <@ __shuffle2 (param_97, param_96);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r4 <- result_59;
      r6 <- result_58;
      param_95 <- r1;
      param_94 <- r3;
      (result_57, result_56, tmp__trace) <@ __shuffle2 (param_95, param_94);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r1 <- result_57;
      r3 <- result_56;
      param_93 <- r5;
      param_92 <- r7;
      (result_55, result_54, tmp__trace) <@ __shuffle2 (param_93, param_92);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r5 <- result_55;
      r7 <- result_54;
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (256 + (392 * i))) /\ (((256 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_inv_exp (256 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (288 + (392 * i))) /\ (((288 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_inv_exp (288 + (392 * i)));
      param_91 <- r0;
      param_90 <- r4;
      param_89 <- r1;
      param_88 <- r5;
      param_87 <- r2;
      param_86 <- r6;
      param_85 <- r3;
      param_84 <- r7;
      param_83 <- zeta0;
      param_82 <- zeta0;
      param_81 <- zeta1;
      param_80 <- zeta1;
      param_79 <- qx16;
      (result_53, result_52, result_51, result_50, result_49, result_48,
      result_47, result_46, tmp__trace) <@ __invntt___butterfly64x (param_91,
      param_90, param_89, param_88, param_87, param_86, param_85, param_84,
      param_83, param_82, param_81, param_80, param_79);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_53;
      r4 <- result_52;
      r1 <- result_51;
      r5 <- result_50;
      r2 <- result_49;
      r6 <- result_48;
      r3 <- result_47;
      r7 <- result_46;
      param_78 <- r0;
      param_77 <- qx16;
      param_76 <- vx16;
      (result_45, tmp__trace) <@ __red16x (param_78, param_77, param_76);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_45;
      param_75 <- r0;
      param_74 <- r4;
      (result_44, result_43, tmp__trace) <@ __shuffle4 (param_75, param_74);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_44;
      r4 <- result_43;
      param_73 <- r1;
      param_72 <- r5;
      (result_42, result_41, tmp__trace) <@ __shuffle4 (param_73, param_72);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r1 <- result_42;
      r5 <- result_41;
      param_71 <- r2;
      param_70 <- r6;
      (result_40, result_39, tmp__trace) <@ __shuffle4 (param_71, param_70);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r2 <- result_40;
      r6 <- result_39;
      param_69 <- r3;
      param_68 <- r7;
      (result_38, result_37, tmp__trace) <@ __shuffle4 (param_69, param_68);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r3 <- result_38;
      r7 <- result_37;
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (320 + (392 * i))) /\ (((320 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_inv_exp (320 + (392 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (352 + (392 * i))) /\ (((352 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_inv_exp (352 + (392 * i)));
      param_67 <- r0;
      param_66 <- r1;
      param_65 <- r2;
      param_64 <- r3;
      param_63 <- r4;
      param_62 <- r5;
      param_61 <- r6;
      param_60 <- r7;
      param_59 <- zeta0;
      param_58 <- zeta0;
      param_57 <- zeta1;
      param_56 <- zeta1;
      param_55 <- qx16;
      (result_36, result_35, result_34, result_33, result_32, result_31,
      result_30, result_29, tmp__trace) <@ __invntt___butterfly64x (param_67,
      param_66, param_65, param_64, param_63, param_62, param_61, param_60,
      param_59, param_58, param_57, param_56, param_55);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_36;
      r1 <- result_35;
      r2 <- result_34;
      r3 <- result_33;
      r4 <- result_32;
      r5 <- result_31;
      r6 <- result_30;
      r7 <- result_29;
      param_54 <- r0;
      param_53 <- qx16;
      param_52 <- vx16;
      (result_28, tmp__trace) <@ __red16x (param_54, param_53, param_52);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_28;
      param_51 <- r0;
      param_50 <- r1;
      (result_27, result_26, tmp__trace) <@ __shuffle8 (param_51, param_50);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_27;
      r1 <- result_26;
      param_49 <- r2;
      param_48 <- r3;
      (result_25, result_24, tmp__trace) <@ __shuffle8 (param_49, param_48);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r2 <- result_25;
      r3 <- result_24;
      param_47 <- r4;
      param_46 <- r5;
      (result_23, result_22, tmp__trace) <@ __shuffle8 (param_47, param_46);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r4 <- result_23;
      r5 <- result_22;
      param_45 <- r6;
      param_44 <- r7;
      (result_21, result_20, tmp__trace) <@ __shuffle8 (param_45, param_44);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r6 <- result_21;
      r7 <- result_20;
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (384 + (392 * i))) /\ (((384 + (392 * i)) + 4) <= 800)))]);
      zeta0 <-
      (VPBROADCAST_8u32 (BArray800.get32d jzetas_inv_exp (384 + (392 * i))));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (388 + (392 * i))) /\ (((388 + (392 * i)) + 4) <= 800)))]);
      zeta1 <-
      (VPBROADCAST_8u32 (BArray800.get32d jzetas_inv_exp (388 + (392 * i))));
      param_43 <- r0;
      param_42 <- r2;
      param_41 <- r4;
      param_40 <- r6;
      param_39 <- r1;
      param_38 <- r3;
      param_37 <- r5;
      param_36 <- r7;
      param_35 <- zeta0;
      param_34 <- zeta0;
      param_33 <- zeta1;
      param_32 <- zeta1;
      param_31 <- qx16;
      (result_19, result_18, result_17, result_16, result_15, result_14,
      result_13, result_12, tmp__trace) <@ __invntt___butterfly64x (param_43,
      param_42, param_41, param_40, param_39, param_38, param_37, param_36,
      param_35, param_34, param_33, param_32, param_31);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_19;
      b_r2 <- true;
      r2 <- result_18;
      b_r4 <- true;
      r4 <- result_17;
      b_r6 <- true;
      r6 <- result_16;
      r1 <- result_15;
      r3 <- result_14;
      r5 <- result_13;
      r7 <- result_12;
      param_30 <- r0;
      param_29 <- qx16;
      param_28 <- vx16;
      (result_11, tmp__trace) <@ __red16x (param_30, param_29, param_28);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      b_r0 <- true;
      r0 <- result_11;
      if ((i = 0)) {
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert, ((0 <= (256 * i)) /\ (((256 * i) + 32) <= 512)))]);
        rp <- (BArray512.set256d rp (256 * i) r0);
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (32 + (256 * i))) /\ (((32 + (256 * i)) + 32) <= 512)))]);
        rp <- (BArray512.set256d rp (32 + (256 * i)) r2);
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (64 + (256 * i))) /\ (((64 + (256 * i)) + 32) <= 512)))]);
        rp <- (BArray512.set256d rp (64 + (256 * i)) r4);
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (96 + (256 * i))) /\ (((96 + (256 * i)) + 32) <= 512)))]);
        rp <- (BArray512.set256d rp (96 + (256 * i)) r6);
      } else {
        
      }
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (128 + (256 * i))) /\ (((128 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (128 + (256 * i)) r1);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (160 + (256 * i))) /\ (((160 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (160 + (256 * i)) r3);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (192 + (256 * i))) /\ (((192 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (192 + (256 * i)) r5);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (224 + (256 * i))) /\ (((224 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (224 + (256 * i)) r7);
      i <- (i + 1);
    }
    zeta0 <- (VPBROADCAST_8u32 (BArray800.get32d jzetas_inv_exp 784));
    zeta1 <- (VPBROADCAST_8u32 (BArray800.get32d jzetas_inv_exp 788));
    i <- 0;
    while ((i < 2)) {
      if ((i = 0)) {
        trace__poly_invntt <- (trace__poly_invntt ++ [(Assert, b_r6)]);
        r7 <- r6;
        trace__poly_invntt <- (trace__poly_invntt ++ [(Assert, b_r4)]);
        r6 <- r4;
        trace__poly_invntt <- (trace__poly_invntt ++ [(Assert, b_r2)]);
        r5 <- r2;
        trace__poly_invntt <- (trace__poly_invntt ++ [(Assert, b_r0)]);
        r4 <- r0;
      } else {
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (256 + (128 * i))) /\ (((256 + (128 * i)) + 32) <= 512)))]);
        r4 <- (BArray512.get256d rp (256 + (128 * i)));
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (288 + (128 * i))) /\ (((288 + (128 * i)) + 32) <= 512)))]);
        r5 <- (BArray512.get256d rp (288 + (128 * i)));
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (320 + (128 * i))) /\ (((320 + (128 * i)) + 32) <= 512)))]);
        r6 <- (BArray512.get256d rp (320 + (128 * i)));
        trace__poly_invntt <-
        (trace__poly_invntt ++
        [(Assert,
         ((0 <= (352 + (128 * i))) /\ (((352 + (128 * i)) + 32) <= 512)))]);
        r7 <- (BArray512.get256d rp (352 + (128 * i)));
      }
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert, ((0 <= (128 * i)) /\ (((128 * i) + 32) <= 512)))]);
      r0 <- (BArray512.get256d rp (128 * i));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (32 + (128 * i))) /\ (((32 + (128 * i)) + 32) <= 512)))]);
      r1 <- (BArray512.get256d rp (32 + (128 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (64 + (128 * i))) /\ (((64 + (128 * i)) + 32) <= 512)))]);
      r2 <- (BArray512.get256d rp (64 + (128 * i)));
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (96 + (128 * i))) /\ (((96 + (128 * i)) + 32) <= 512)))]);
      r3 <- (BArray512.get256d rp (96 + (128 * i)));
      param_27 <- r0;
      param_26 <- r1;
      param_25 <- r2;
      param_24 <- r3;
      param_23 <- r4;
      param_22 <- r5;
      param_21 <- r6;
      param_20 <- r7;
      param_19 <- zeta0;
      param_18 <- zeta0;
      param_17 <- zeta1;
      param_16 <- zeta1;
      param_15 <- qx16;
      (result_10, result_9, result_8, result_7, result_6, result_5, result_4,
      result_3, tmp__trace) <@ __invntt___butterfly64x (param_27, param_26,
      param_25, param_24, param_23, param_22, param_21, param_20, param_19,
      param_18, param_17, param_16, param_15);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r0 <- result_10;
      r1 <- result_9;
      r2 <- result_8;
      r3 <- result_7;
      b_r4 <- true;
      r4 <- result_6;
      r5 <- result_5;
      b_r6 <- true;
      r6 <- result_4;
      r7 <- result_3;
      flox16 <- (BArray32.get256 jflox16 0);
      fhix16 <- (BArray32.get256 jfhix16 0);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (256 + (128 * i))) /\ (((256 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (256 + (128 * i)) r4);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (288 + (128 * i))) /\ (((288 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (288 + (128 * i)) r5);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (320 + (128 * i))) /\ (((320 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (320 + (128 * i)) r6);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (352 + (128 * i))) /\ (((352 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (352 + (128 * i)) r7);
      param_14 <- r0;
      param_13 <- flox16;
      param_12 <- fhix16;
      param_11 <- qx16;
      (result_2, tmp__trace) <@ __fqmulprecomp16x (param_14, param_13,
      param_12, param_11);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      b_r0 <- true;
      r0 <- result_2;
      param_10 <- r1;
      param_9 <- flox16;
      param_8 <- fhix16;
      param_7 <- qx16;
      (result_1, tmp__trace) <@ __fqmulprecomp16x (param_10, param_9,
      param_8, param_7);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r1 <- result_1;
      param_6 <- r2;
      param_5 <- flox16;
      param_4 <- fhix16;
      param_3 <- qx16;
      (result_0, tmp__trace) <@ __fqmulprecomp16x (param_6, param_5, 
      param_4, param_3);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      b_r2 <- true;
      r2 <- result_0;
      param_2 <- r3;
      param_1 <- flox16;
      param_0 <- fhix16;
      param <- qx16;
      (result, tmp__trace) <@ __fqmulprecomp16x (param_2, param_1, param_0,
      param);
      trace__poly_invntt <- (trace__poly_invntt ++ tmp__trace);
      r3 <- result;
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert, ((0 <= (128 * i)) /\ (((128 * i) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (128 * i) r0);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (32 + (128 * i))) /\ (((32 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (32 + (128 * i)) r1);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (64 + (128 * i))) /\ (((64 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (64 + (128 * i)) r2);
      trace__poly_invntt <-
      (trace__poly_invntt ++
      [(Assert,
       ((0 <= (96 + (128 * i))) /\ (((96 + (128 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (96 + (128 * i)) r3);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_invntt);
  }
  proc __butterfly64x (rl0:W256.t, rl1:W256.t, rl2:W256.t, rl3:W256.t,
                       rh0:W256.t, rh1:W256.t, rh2:W256.t, rh3:W256.t,
                       zl0:W256.t, zl1:W256.t, zh0:W256.t, zh1:W256.t,
                       qx16:W256.t) : W256.t * W256.t * W256.t * W256.t *
                                      W256.t * W256.t * W256.t * W256.t *
                                      trace = {
    var t0:W256.t;
    var t1:W256.t;
    var t2:W256.t;
    var t3:W256.t;
    var t4:W256.t;
    var t5:W256.t;
    var t6:W256.t;
    var t7:W256.t;
    var trace___butterfly64x:trace;
    trace___butterfly64x <- [];
    t0 <- (VPMULL_16u16 zl0 rh0);
    t1 <- (VPMULH_16u16 zh0 rh0);
    t2 <- (VPMULL_16u16 zl0 rh1);
    t3 <- (VPMULH_16u16 zh0 rh1);
    t4 <- (VPMULL_16u16 zl1 rh2);
    t5 <- (VPMULH_16u16 zh1 rh2);
    t6 <- (VPMULL_16u16 zl1 rh3);
    t7 <- (VPMULH_16u16 zh1 rh3);
    t0 <- (VPMULH_16u16 t0 qx16);
    t2 <- (VPMULH_16u16 t2 qx16);
    t4 <- (VPMULH_16u16 t4 qx16);
    t6 <- (VPMULH_16u16 t6 qx16);
    rh1 <- (VPSUB_16u16 rl1 t3);
    rl1 <- (VPADD_16u16 t3 rl1);
    rh0 <- (VPSUB_16u16 rl0 t1);
    rl0 <- (VPADD_16u16 t1 rl0);
    rh3 <- (VPSUB_16u16 rl3 t7);
    rl3 <- (VPADD_16u16 t7 rl3);
    rh2 <- (VPSUB_16u16 rl2 t5);
    rl2 <- (VPADD_16u16 t5 rl2);
    rh0 <- (VPADD_16u16 t0 rh0);
    rl0 <- (VPSUB_16u16 rl0 t0);
    rh1 <- (VPADD_16u16 t2 rh1);
    rl1 <- (VPSUB_16u16 rl1 t2);
    rh2 <- (VPADD_16u16 t4 rh2);
    rl2 <- (VPSUB_16u16 rl2 t4);
    rh3 <- (VPADD_16u16 t6 rh3);
    rl3 <- (VPSUB_16u16 rl3 t6);
    return (rl0, rl1, rl2, rl3, rh0, rh1, rh2, rh3, trace___butterfly64x);
  }
  proc _poly_ntt (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                      BArray512.t * trace = {
    var qx16:W256.t;
    var zeta0:W256.t;
    var zeta1:W256.t;
    var r0:W256.t;
    var r1:W256.t;
    var r2:W256.t;
    var r3:W256.t;
    var r4:W256.t;
    var r5:W256.t;
    var r6:W256.t;
    var r7:W256.t;
    var i:int;
    var zeta2:W256.t;
    var zeta3:W256.t;
    var vx16:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var result:W256.t;
    var param_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var result_0:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var param_7:W256.t;
    var result_1:W256.t;
    var param_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var result_2:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var param_13:W256.t;
    var result_3:W256.t;
    var param_14:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_4:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var param_19:W256.t;
    var result_5:W256.t;
    var param_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_6:W256.t;
    var param_23:W256.t;
    var param_24:W256.t;
    var param_25:W256.t;
    var param_26:W256.t;
    var param_27:W256.t;
    var param_28:W256.t;
    var param_29:W256.t;
    var param_30:W256.t;
    var param_31:W256.t;
    var param_32:W256.t;
    var param_33:W256.t;
    var param_34:W256.t;
    var param_35:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var param_36:W256.t;
    var param_37:W256.t;
    var param_38:W256.t;
    var param_39:W256.t;
    var param_40:W256.t;
    var param_41:W256.t;
    var param_42:W256.t;
    var param_43:W256.t;
    var param_44:W256.t;
    var param_45:W256.t;
    var param_46:W256.t;
    var param_47:W256.t;
    var param_48:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var result_19:W256.t;
    var result_20:W256.t;
    var result_21:W256.t;
    var result_22:W256.t;
    var param_49:W256.t;
    var param_50:W256.t;
    var result_23:W256.t;
    var result_24:W256.t;
    var param_51:W256.t;
    var param_52:W256.t;
    var result_25:W256.t;
    var result_26:W256.t;
    var param_53:W256.t;
    var param_54:W256.t;
    var result_27:W256.t;
    var result_28:W256.t;
    var param_55:W256.t;
    var param_56:W256.t;
    var result_29:W256.t;
    var result_30:W256.t;
    var param_57:W256.t;
    var param_58:W256.t;
    var param_59:W256.t;
    var param_60:W256.t;
    var param_61:W256.t;
    var param_62:W256.t;
    var param_63:W256.t;
    var param_64:W256.t;
    var param_65:W256.t;
    var param_66:W256.t;
    var param_67:W256.t;
    var param_68:W256.t;
    var param_69:W256.t;
    var result_31:W256.t;
    var result_32:W256.t;
    var result_33:W256.t;
    var result_34:W256.t;
    var result_35:W256.t;
    var result_36:W256.t;
    var result_37:W256.t;
    var result_38:W256.t;
    var param_70:W256.t;
    var param_71:W256.t;
    var result_39:W256.t;
    var result_40:W256.t;
    var param_72:W256.t;
    var param_73:W256.t;
    var result_41:W256.t;
    var result_42:W256.t;
    var param_74:W256.t;
    var param_75:W256.t;
    var result_43:W256.t;
    var result_44:W256.t;
    var param_76:W256.t;
    var param_77:W256.t;
    var result_45:W256.t;
    var result_46:W256.t;
    var param_78:W256.t;
    var param_79:W256.t;
    var param_80:W256.t;
    var param_81:W256.t;
    var param_82:W256.t;
    var param_83:W256.t;
    var param_84:W256.t;
    var param_85:W256.t;
    var param_86:W256.t;
    var param_87:W256.t;
    var param_88:W256.t;
    var param_89:W256.t;
    var param_90:W256.t;
    var result_47:W256.t;
    var result_48:W256.t;
    var result_49:W256.t;
    var result_50:W256.t;
    var result_51:W256.t;
    var result_52:W256.t;
    var result_53:W256.t;
    var result_54:W256.t;
    var param_91:W256.t;
    var param_92:W256.t;
    var result_55:W256.t;
    var result_56:W256.t;
    var param_93:W256.t;
    var param_94:W256.t;
    var result_57:W256.t;
    var result_58:W256.t;
    var param_95:W256.t;
    var param_96:W256.t;
    var result_59:W256.t;
    var result_60:W256.t;
    var param_97:W256.t;
    var param_98:W256.t;
    var result_61:W256.t;
    var result_62:W256.t;
    var param_99:W256.t;
    var param_100:W256.t;
    var param_101:W256.t;
    var param_102:W256.t;
    var param_103:W256.t;
    var param_104:W256.t;
    var param_105:W256.t;
    var param_106:W256.t;
    var param_107:W256.t;
    var param_108:W256.t;
    var param_109:W256.t;
    var param_110:W256.t;
    var param_111:W256.t;
    var result_63:W256.t;
    var result_64:W256.t;
    var result_65:W256.t;
    var result_66:W256.t;
    var result_67:W256.t;
    var result_68:W256.t;
    var result_69:W256.t;
    var result_70:W256.t;
    var param_112:W256.t;
    var param_113:W256.t;
    var result_71:W256.t;
    var result_72:W256.t;
    var param_114:W256.t;
    var param_115:W256.t;
    var result_73:W256.t;
    var result_74:W256.t;
    var param_116:W256.t;
    var param_117:W256.t;
    var result_75:W256.t;
    var result_76:W256.t;
    var param_118:W256.t;
    var param_119:W256.t;
    var result_77:W256.t;
    var result_78:W256.t;
    var param_120:W256.t;
    var param_121:W256.t;
    var param_122:W256.t;
    var param_123:W256.t;
    var param_124:W256.t;
    var param_125:W256.t;
    var param_126:W256.t;
    var param_127:W256.t;
    var param_128:W256.t;
    var param_129:W256.t;
    var param_130:W256.t;
    var param_131:W256.t;
    var param_132:W256.t;
    var result_79:W256.t;
    var result_80:W256.t;
    var result_81:W256.t;
    var result_82:W256.t;
    var result_83:W256.t;
    var result_84:W256.t;
    var result_85:W256.t;
    var result_86:W256.t;
    var param_133:W256.t;
    var param_134:W256.t;
    var param_135:W256.t;
    var param_136:W256.t;
    var param_137:W256.t;
    var param_138:W256.t;
    var param_139:W256.t;
    var param_140:W256.t;
    var param_141:W256.t;
    var param_142:W256.t;
    var param_143:W256.t;
    var param_144:W256.t;
    var param_145:W256.t;
    var result_87:W256.t;
    var result_88:W256.t;
    var result_89:W256.t;
    var result_90:W256.t;
    var result_91:W256.t;
    var result_92:W256.t;
    var result_93:W256.t;
    var result_94:W256.t;
    var param_146:W256.t;
    var param_147:W256.t;
    var param_148:W256.t;
    var param_149:W256.t;
    var param_150:W256.t;
    var param_151:W256.t;
    var param_152:W256.t;
    var param_153:W256.t;
    var param_154:W256.t;
    var param_155:W256.t;
    var param_156:W256.t;
    var param_157:W256.t;
    var param_158:W256.t;
    var result_95:W256.t;
    var result_96:W256.t;
    var result_97:W256.t;
    var result_98:W256.t;
    var result_99:W256.t;
    var result_100:W256.t;
    var result_101:W256.t;
    var result_102:W256.t;
    var trace__poly_ntt:trace;
    trace__poly_ntt <- [];
    trace__poly_ntt <- (trace__poly_ntt ++ [(Assert, (is_init b_rp 0 512))]);
    qx16 <- (BArray32.get256 jqx16 0);
    zeta0 <- (VPBROADCAST_8u32 (BArray800.get32 jzetas_exp 0));
    zeta1 <- (VPBROADCAST_8u32 (BArray800.get32 jzetas_exp 1));
    r0 <- (BArray512.get256d rp 0);
    r1 <- (BArray512.get256d rp 32);
    r2 <- (BArray512.get256d rp 64);
    r3 <- (BArray512.get256d rp 96);
    r4 <- (BArray512.get256d rp 256);
    r5 <- (BArray512.get256d rp 288);
    r6 <- (BArray512.get256d rp 320);
    r7 <- (BArray512.get256d rp 352);
    param_158 <- r0;
    param_157 <- r1;
    param_156 <- r2;
    param_155 <- r3;
    param_154 <- r4;
    param_153 <- r5;
    param_152 <- r6;
    param_151 <- r7;
    param_150 <- zeta0;
    param_149 <- zeta0;
    param_148 <- zeta1;
    param_147 <- zeta1;
    param_146 <- qx16;
    (result_102, result_101, result_100, result_99, result_98, result_97,
    result_96, result_95, tmp__trace) <@ __butterfly64x (param_158,
    param_157, param_156, param_155, param_154, param_153, param_152,
    param_151, param_150, param_149, param_148, param_147, param_146);
    trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
    r0 <- result_102;
    r1 <- result_101;
    r2 <- result_100;
    r3 <- result_99;
    r4 <- result_98;
    r5 <- result_97;
    r6 <- result_96;
    r7 <- result_95;
    rp <- (BArray512.set256d rp 0 r0);
    rp <- (BArray512.set256d rp 32 r1);
    rp <- (BArray512.set256d rp 64 r2);
    rp <- (BArray512.set256d rp 96 r3);
    rp <- (BArray512.set256d rp 256 r4);
    rp <- (BArray512.set256d rp 288 r5);
    rp <- (BArray512.set256d rp 320 r6);
    rp <- (BArray512.set256d rp 352 r7);
    r0 <- (BArray512.get256d rp 128);
    r1 <- (BArray512.get256d rp 160);
    r2 <- (BArray512.get256d rp 192);
    r3 <- (BArray512.get256d rp 224);
    r4 <- (BArray512.get256d rp 384);
    r5 <- (BArray512.get256d rp 416);
    r6 <- (BArray512.get256d rp 448);
    r7 <- (BArray512.get256d rp 480);
    param_145 <- r0;
    param_144 <- r1;
    param_143 <- r2;
    param_142 <- r3;
    param_141 <- r4;
    param_140 <- r5;
    param_139 <- r6;
    param_138 <- r7;
    param_137 <- zeta0;
    param_136 <- zeta0;
    param_135 <- zeta1;
    param_134 <- zeta1;
    param_133 <- qx16;
    (result_94, result_93, result_92, result_91, result_90, result_89,
    result_88, result_87, tmp__trace) <@ __butterfly64x (param_145,
    param_144, param_143, param_142, param_141, param_140, param_139,
    param_138, param_137, param_136, param_135, param_134, param_133);
    trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
    r0 <- result_94;
    r1 <- result_93;
    r2 <- result_92;
    r3 <- result_91;
    r4 <- result_90;
    r5 <- result_89;
    r6 <- result_88;
    r7 <- result_87;
    rp <- (BArray512.set256d rp 384 r4);
    rp <- (BArray512.set256d rp 416 r5);
    rp <- (BArray512.set256d rp 448 r6);
    rp <- (BArray512.set256d rp 480 r7);
    i <- 0;
    while ((i < 2)) {
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert, ((0 <= (8 + (392 * i))) /\ (((8 + (392 * i)) + 4) <= 800)))]);
      zeta0 <-
      (VPBROADCAST_8u32 (BArray800.get32d jzetas_exp (8 + (392 * i))));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert, ((0 <= (12 + (392 * i))) /\ (((12 + (392 * i)) + 4) <= 800)))]);
      zeta1 <-
      (VPBROADCAST_8u32 (BArray800.get32d jzetas_exp (12 + (392 * i))));
      if ((i = 0)) {
        r4 <- r0;
        r5 <- r1;
        r6 <- r2;
        r7 <- r3;
      } else {
        trace__poly_ntt <-
        (trace__poly_ntt ++
        [(Assert,
         ((0 <= (128 + (256 * i))) /\ (((128 + (256 * i)) + 32) <= 512)))]);
        r4 <- (BArray512.get256d rp (128 + (256 * i)));
        trace__poly_ntt <-
        (trace__poly_ntt ++
        [(Assert,
         ((0 <= (160 + (256 * i))) /\ (((160 + (256 * i)) + 32) <= 512)))]);
        r5 <- (BArray512.get256d rp (160 + (256 * i)));
        trace__poly_ntt <-
        (trace__poly_ntt ++
        [(Assert,
         ((0 <= (192 + (256 * i))) /\ (((192 + (256 * i)) + 32) <= 512)))]);
        r6 <- (BArray512.get256d rp (192 + (256 * i)));
        trace__poly_ntt <-
        (trace__poly_ntt ++
        [(Assert,
         ((0 <= (224 + (256 * i))) /\ (((224 + (256 * i)) + 32) <= 512)))]);
        r7 <- (BArray512.get256d rp (224 + (256 * i)));
      }
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert, ((0 <= (256 * i)) /\ (((256 * i) + 32) <= 512)))]);
      r0 <- (BArray512.get256d rp (256 * i));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (32 + (256 * i))) /\ (((32 + (256 * i)) + 32) <= 512)))]);
      r1 <- (BArray512.get256d rp (32 + (256 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (64 + (256 * i))) /\ (((64 + (256 * i)) + 32) <= 512)))]);
      r2 <- (BArray512.get256d rp (64 + (256 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (96 + (256 * i))) /\ (((96 + (256 * i)) + 32) <= 512)))]);
      r3 <- (BArray512.get256d rp (96 + (256 * i)));
      param_132 <- r0;
      param_131 <- r1;
      param_130 <- r2;
      param_129 <- r3;
      param_128 <- r4;
      param_127 <- r5;
      param_126 <- r6;
      param_125 <- r7;
      param_124 <- zeta0;
      param_123 <- zeta0;
      param_122 <- zeta1;
      param_121 <- zeta1;
      param_120 <- qx16;
      (result_86, result_85, result_84, result_83, result_82, result_81,
      result_80, result_79, tmp__trace) <@ __butterfly64x (param_132,
      param_131, param_130, param_129, param_128, param_127, param_126,
      param_125, param_124, param_123, param_122, param_121, param_120);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_86;
      r1 <- result_85;
      r2 <- result_84;
      r3 <- result_83;
      r4 <- result_82;
      r5 <- result_81;
      r6 <- result_80;
      r7 <- result_79;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (16 + (392 * i))) /\ (((16 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_exp (16 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (48 + (392 * i))) /\ (((48 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_exp (48 + (392 * i)));
      param_119 <- r0;
      param_118 <- r4;
      (result_78, result_77, tmp__trace) <@ __shuffle8 (param_119,
      param_118);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_78;
      r4 <- result_77;
      param_117 <- r1;
      param_116 <- r5;
      (result_76, result_75, tmp__trace) <@ __shuffle8 (param_117,
      param_116);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r1 <- result_76;
      r5 <- result_75;
      param_115 <- r2;
      param_114 <- r6;
      (result_74, result_73, tmp__trace) <@ __shuffle8 (param_115,
      param_114);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r2 <- result_74;
      r6 <- result_73;
      param_113 <- r3;
      param_112 <- r7;
      (result_72, result_71, tmp__trace) <@ __shuffle8 (param_113,
      param_112);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r3 <- result_72;
      r7 <- result_71;
      param_111 <- r0;
      param_110 <- r4;
      param_109 <- r1;
      param_108 <- r5;
      param_107 <- r2;
      param_106 <- r6;
      param_105 <- r3;
      param_104 <- r7;
      param_103 <- zeta0;
      param_102 <- zeta0;
      param_101 <- zeta1;
      param_100 <- zeta1;
      param_99 <- qx16;
      (result_70, result_69, result_68, result_67, result_66, result_65,
      result_64, result_63, tmp__trace) <@ __butterfly64x (param_111,
      param_110, param_109, param_108, param_107, param_106, param_105,
      param_104, param_103, param_102, param_101, param_100, param_99);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_70;
      r4 <- result_69;
      r1 <- result_68;
      r5 <- result_67;
      r2 <- result_66;
      r6 <- result_65;
      r3 <- result_64;
      r7 <- result_63;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (80 + (392 * i))) /\ (((80 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_exp (80 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (112 + (392 * i))) /\ (((112 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_exp (112 + (392 * i)));
      param_98 <- r0;
      param_97 <- r2;
      (result_62, result_61, tmp__trace) <@ __shuffle4 (param_98, param_97);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_62;
      r2 <- result_61;
      param_96 <- r4;
      param_95 <- r6;
      (result_60, result_59, tmp__trace) <@ __shuffle4 (param_96, param_95);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r4 <- result_60;
      r6 <- result_59;
      param_94 <- r1;
      param_93 <- r3;
      (result_58, result_57, tmp__trace) <@ __shuffle4 (param_94, param_93);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r1 <- result_58;
      r3 <- result_57;
      param_92 <- r5;
      param_91 <- r7;
      (result_56, result_55, tmp__trace) <@ __shuffle4 (param_92, param_91);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r5 <- result_56;
      r7 <- result_55;
      param_90 <- r0;
      param_89 <- r2;
      param_88 <- r4;
      param_87 <- r6;
      param_86 <- r1;
      param_85 <- r3;
      param_84 <- r5;
      param_83 <- r7;
      param_82 <- zeta0;
      param_81 <- zeta0;
      param_80 <- zeta1;
      param_79 <- zeta1;
      param_78 <- qx16;
      (result_54, result_53, result_52, result_51, result_50, result_49,
      result_48, result_47, tmp__trace) <@ __butterfly64x (param_90,
      param_89, param_88, param_87, param_86, param_85, param_84, param_83,
      param_82, param_81, param_80, param_79, param_78);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_54;
      r2 <- result_53;
      r4 <- result_52;
      r6 <- result_51;
      r1 <- result_50;
      r3 <- result_49;
      r5 <- result_48;
      r7 <- result_47;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (144 + (392 * i))) /\ (((144 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_exp (144 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (176 + (392 * i))) /\ (((176 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_exp (176 + (392 * i)));
      param_77 <- r0;
      param_76 <- r1;
      (result_46, result_45, tmp__trace) <@ __shuffle2 (param_77, param_76);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_46;
      r1 <- result_45;
      param_75 <- r2;
      param_74 <- r3;
      (result_44, result_43, tmp__trace) <@ __shuffle2 (param_75, param_74);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r2 <- result_44;
      r3 <- result_43;
      param_73 <- r4;
      param_72 <- r5;
      (result_42, result_41, tmp__trace) <@ __shuffle2 (param_73, param_72);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r4 <- result_42;
      r5 <- result_41;
      param_71 <- r6;
      param_70 <- r7;
      (result_40, result_39, tmp__trace) <@ __shuffle2 (param_71, param_70);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r6 <- result_40;
      r7 <- result_39;
      param_69 <- r0;
      param_68 <- r1;
      param_67 <- r2;
      param_66 <- r3;
      param_65 <- r4;
      param_64 <- r5;
      param_63 <- r6;
      param_62 <- r7;
      param_61 <- zeta0;
      param_60 <- zeta0;
      param_59 <- zeta1;
      param_58 <- zeta1;
      param_57 <- qx16;
      (result_38, result_37, result_36, result_35, result_34, result_33,
      result_32, result_31, tmp__trace) <@ __butterfly64x (param_69,
      param_68, param_67, param_66, param_65, param_64, param_63, param_62,
      param_61, param_60, param_59, param_58, param_57);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_38;
      r1 <- result_37;
      r2 <- result_36;
      r3 <- result_35;
      r4 <- result_34;
      r5 <- result_33;
      r6 <- result_32;
      r7 <- result_31;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (208 + (392 * i))) /\ (((208 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_exp (208 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (240 + (392 * i))) /\ (((240 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_exp (240 + (392 * i)));
      param_56 <- r0;
      param_55 <- r4;
      (result_30, result_29, tmp__trace) <@ __shuffle1 (param_56, param_55);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_30;
      r4 <- result_29;
      param_54 <- r1;
      param_53 <- r5;
      (result_28, result_27, tmp__trace) <@ __shuffle1 (param_54, param_53);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r1 <- result_28;
      r5 <- result_27;
      param_52 <- r2;
      param_51 <- r6;
      (result_26, result_25, tmp__trace) <@ __shuffle1 (param_52, param_51);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r2 <- result_26;
      r6 <- result_25;
      param_50 <- r3;
      param_49 <- r7;
      (result_24, result_23, tmp__trace) <@ __shuffle1 (param_50, param_49);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r3 <- result_24;
      r7 <- result_23;
      param_48 <- r0;
      param_47 <- r4;
      param_46 <- r1;
      param_45 <- r5;
      param_44 <- r2;
      param_43 <- r6;
      param_42 <- r3;
      param_41 <- r7;
      param_40 <- zeta0;
      param_39 <- zeta0;
      param_38 <- zeta1;
      param_37 <- zeta1;
      param_36 <- qx16;
      (result_22, result_21, result_20, result_19, result_18, result_17,
      result_16, result_15, tmp__trace) <@ __butterfly64x (param_48,
      param_47, param_46, param_45, param_44, param_43, param_42, param_41,
      param_40, param_39, param_38, param_37, param_36);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_22;
      r4 <- result_21;
      r1 <- result_20;
      r5 <- result_19;
      r2 <- result_18;
      r6 <- result_17;
      r3 <- result_16;
      r7 <- result_15;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (272 + (392 * i))) /\ (((272 + (392 * i)) + 32) <= 800)))]);
      zeta0 <- (BArray800.get256d jzetas_exp (272 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (304 + (392 * i))) /\ (((304 + (392 * i)) + 32) <= 800)))]);
      zeta2 <- (BArray800.get256d jzetas_exp (304 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (336 + (392 * i))) /\ (((336 + (392 * i)) + 32) <= 800)))]);
      zeta1 <- (BArray800.get256d jzetas_exp (336 + (392 * i)));
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (368 + (392 * i))) /\ (((368 + (392 * i)) + 32) <= 800)))]);
      zeta3 <- (BArray800.get256d jzetas_exp (368 + (392 * i)));
      param_35 <- r0;
      param_34 <- r4;
      param_33 <- r2;
      param_32 <- r6;
      param_31 <- r1;
      param_30 <- r5;
      param_29 <- r3;
      param_28 <- r7;
      param_27 <- zeta0;
      param_26 <- zeta1;
      param_25 <- zeta2;
      param_24 <- zeta3;
      param_23 <- qx16;
      (result_14, result_13, result_12, result_11, result_10, result_9,
      result_8, result_7, tmp__trace) <@ __butterfly64x (param_35, param_34,
      param_33, param_32, param_31, param_30, param_29, param_28, param_27,
      param_26, param_25, param_24, param_23);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_14;
      r4 <- result_13;
      r2 <- result_12;
      r6 <- result_11;
      r1 <- result_10;
      r5 <- result_9;
      r3 <- result_8;
      r7 <- result_7;
      vx16 <- (BArray32.get256 jvx16 0);
      param_22 <- r0;
      param_21 <- qx16;
      param_20 <- vx16;
      (result_6, tmp__trace) <@ __red16x (param_22, param_21, param_20);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r0 <- result_6;
      param_19 <- r4;
      param_18 <- qx16;
      param_17 <- vx16;
      (result_5, tmp__trace) <@ __red16x (param_19, param_18, param_17);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r4 <- result_5;
      param_16 <- r2;
      param_15 <- qx16;
      param_14 <- vx16;
      (result_4, tmp__trace) <@ __red16x (param_16, param_15, param_14);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r2 <- result_4;
      param_13 <- r6;
      param_12 <- qx16;
      param_11 <- vx16;
      (result_3, tmp__trace) <@ __red16x (param_13, param_12, param_11);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r6 <- result_3;
      param_10 <- r1;
      param_9 <- qx16;
      param_8 <- vx16;
      (result_2, tmp__trace) <@ __red16x (param_10, param_9, param_8);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r1 <- result_2;
      param_7 <- r5;
      param_6 <- qx16;
      param_5 <- vx16;
      (result_1, tmp__trace) <@ __red16x (param_7, param_6, param_5);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r5 <- result_1;
      param_4 <- r3;
      param_3 <- qx16;
      param_2 <- vx16;
      (result_0, tmp__trace) <@ __red16x (param_4, param_3, param_2);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r3 <- result_0;
      param_1 <- r7;
      param_0 <- qx16;
      param <- vx16;
      (result, tmp__trace) <@ __red16x (param_1, param_0, param);
      trace__poly_ntt <- (trace__poly_ntt ++ tmp__trace);
      r7 <- result;
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert, ((0 <= (256 * i)) /\ (((256 * i) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (256 * i) r0);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (32 + (256 * i))) /\ (((32 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (32 + (256 * i)) r4);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (64 + (256 * i))) /\ (((64 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (64 + (256 * i)) r1);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (96 + (256 * i))) /\ (((96 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (96 + (256 * i)) r5);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (128 + (256 * i))) /\ (((128 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (128 + (256 * i)) r2);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (160 + (256 * i))) /\ (((160 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (160 + (256 * i)) r6);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (192 + (256 * i))) /\ (((192 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (192 + (256 * i)) r3);
      trace__poly_ntt <-
      (trace__poly_ntt ++
      [(Assert,
       ((0 <= (224 + (256 * i))) /\ (((224 + (256 * i)) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (224 + (256 * i)) r7);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace__poly_ntt);
  }
  proc __poly_reduce (rp:BArray512.t, b_rp:BArray512.t) : BArray512.t *
                                                          BArray512.t * trace = {
    var qx16:W256.t;
    var vx16:W256.t;
    var i:int;
    var r:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var param_1:W256.t;
    var result:W256.t;
    var trace___poly_reduce:trace;
    trace___poly_reduce <- [];
    trace___poly_reduce <-
    (trace___poly_reduce ++ [(Assert, (is_init b_rp 0 512))]);
    qx16 <- (BArray32.get256 jqx16 0);
    vx16 <- (BArray32.get256 jvx16 0);
    i <- 0;
    while ((i < 16)) {
      trace___poly_reduce <-
      (trace___poly_reduce ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      r <- (BArray512.get256d rp (32 * i));
      param_1 <- r;
      param_0 <- qx16;
      param <- vx16;
      (result, tmp__trace) <@ __red16x (param_1, param_0, param);
      trace___poly_reduce <- (trace___poly_reduce ++ tmp__trace);
      r <- result;
      trace___poly_reduce <-
      (trace___poly_reduce ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      rp <- (BArray512.set256d rp (32 * i) r);
      i <- (i + 1);
    }
    b_rp <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, trace___poly_reduce);
  }
  proc _poly_sub (rp:BArray512.t, b_rp:BArray512.t, ap:BArray512.t,
                  b_ap:BArray512.t, bp:BArray512.t, b_bp:BArray512.t) : 
  BArray512.t * BArray512.t * trace = {
    var i:int;
    var a:W256.t;
    var b:W256.t;
    var r:W256.t;
    var trace__poly_sub:trace;
    trace__poly_sub <- [];
    trace__poly_sub <-
    (trace__poly_sub ++
    [(Assert, ((is_init b_ap 0 512) /\ (is_init b_bp 0 512)))]);
    i <- 0;
    while ((i < 16)) {
      trace__poly_sub <-
      (trace__poly_sub ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      a <- (BArray512.get256d ap (32 * i));
      trace__poly_sub <-
      (trace__poly_sub ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      b <- (BArray512.get256d bp (32 * i));
      r <- (VPSUB_16u16 a b);
      trace__poly_sub <-
      (trace__poly_sub ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (32 * i)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256d rp (32 * i) r);
      i <- (i + 1);
    }
    return (rp, b_rp, trace__poly_sub);
  }
  proc _i_poly_tobytes (rp:BArray384.t, b_rp:BArray384.t, a:BArray512.t,
                        b_a:BArray512.t) : BArray384.t * BArray384.t *
                                           BArray512.t * BArray512.t * trace = {
    var i:int;
    var t0:W256.t;
    var t1:W256.t;
    var t2:W256.t;
    var t3:W256.t;
    var t4:W256.t;
    var t5:W256.t;
    var t6:W256.t;
    var t7:W256.t;
    var tt:W256.t;
    var ttt:W256.t;
    var param:W256.t;
    var param_0:W256.t;
    var result:W256.t;
    var result_0:W256.t;
    var param_1:W256.t;
    var param_2:W256.t;
    var result_1:W256.t;
    var result_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var result_3:W256.t;
    var result_4:W256.t;
    var param_5:W256.t;
    var param_6:W256.t;
    var result_5:W256.t;
    var result_6:W256.t;
    var param_7:W256.t;
    var param_8:W256.t;
    var result_7:W256.t;
    var result_8:W256.t;
    var param_9:W256.t;
    var param_10:W256.t;
    var result_9:W256.t;
    var result_10:W256.t;
    var param_11:W256.t;
    var param_12:W256.t;
    var result_11:W256.t;
    var result_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var result_13:W256.t;
    var result_14:W256.t;
    var param_15:W256.t;
    var param_16:W256.t;
    var result_15:W256.t;
    var result_16:W256.t;
    var param_17:W256.t;
    var param_18:W256.t;
    var result_17:W256.t;
    var result_18:W256.t;
    var param_19:W256.t;
    var param_20:W256.t;
    var result_19:W256.t;
    var result_20:W256.t;
    var param_21:W256.t;
    var param_22:W256.t;
    var result_21:W256.t;
    var result_22:W256.t;
    var param_23:BArray512.t;
    var result_23:BArray512.t;
    var b_result:BArray512.t;
    var trace__i_poly_tobytes:trace;
    b_result <- witness;
    param_23 <- witness;
    result_23 <- witness;
    trace__i_poly_tobytes <- [];
    trace__i_poly_tobytes <-
    (trace__i_poly_tobytes ++ [(Assert, (is_init b_a 0 512))]);
    param_23 <- a;
    (result_23, b_result, tmp__trace) <@ _poly_csubq (param_23,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
    trace__i_poly_tobytes <-
    (trace__i_poly_tobytes ++ [(Assert, (is_init b_result 0 512))]);
    a <- result_23;
    i <- 0;
    while ((i < 2)) {
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert, ((0 <= ((8 * i) * 32)) /\ ((((8 * i) * 32) + 32) <= 512)))]);
      t0 <- (BArray512.get256 a (8 * i));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 1) * 32)) /\ (((((8 * i) + 1) * 32) + 32) <= 512)))]);
      t1 <- (BArray512.get256 a ((8 * i) + 1));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 2) * 32)) /\ (((((8 * i) + 2) * 32) + 32) <= 512)))]);
      t2 <- (BArray512.get256 a ((8 * i) + 2));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 3) * 32)) /\ (((((8 * i) + 3) * 32) + 32) <= 512)))]);
      t3 <- (BArray512.get256 a ((8 * i) + 3));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 4) * 32)) /\ (((((8 * i) + 4) * 32) + 32) <= 512)))]);
      t4 <- (BArray512.get256 a ((8 * i) + 4));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 5) * 32)) /\ (((((8 * i) + 5) * 32) + 32) <= 512)))]);
      t5 <- (BArray512.get256 a ((8 * i) + 5));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 6) * 32)) /\ (((((8 * i) + 6) * 32) + 32) <= 512)))]);
      t6 <- (BArray512.get256 a ((8 * i) + 6));
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= (((8 * i) + 7) * 32)) /\ (((((8 * i) + 7) * 32) + 32) <= 512)))]);
      t7 <- (BArray512.get256 a ((8 * i) + 7));
      tt <- (VPSLL_16u16 t1 (W128.of_int 12));
      tt <- (tt `|` t0);
      t0 <- (VPSRL_16u16 t1 (W128.of_int 4));
      t1 <- (VPSLL_16u16 t2 (W128.of_int 8));
      t0 <- (t0 `|` t1);
      t1 <- (VPSRL_16u16 t2 (W128.of_int 8));
      t2 <- (VPSLL_16u16 t3 (W128.of_int 4));
      t1 <- (t1 `|` t2);
      t2 <- (VPSLL_16u16 t5 (W128.of_int 12));
      t2 <- (t2 `|` t4);
      t3 <- (VPSRL_16u16 t5 (W128.of_int 4));
      t4 <- (VPSLL_16u16 t6 (W128.of_int 8));
      t3 <- (t3 `|` t4);
      t4 <- (VPSRL_16u16 t6 (W128.of_int 8));
      t5 <- (VPSLL_16u16 t7 (W128.of_int 4));
      t4 <- (t4 `|` t5);
      param_22 <- tt;
      param_21 <- t0;
      (result_22, result_21, tmp__trace) <@ __shuffle1 (param_22, param_21);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      ttt <- result_22;
      t0 <- result_21;
      param_20 <- t1;
      param_19 <- t2;
      (result_20, result_19, tmp__trace) <@ __shuffle1 (param_20, param_19);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      tt <- result_20;
      t2 <- result_19;
      param_18 <- t3;
      param_17 <- t4;
      (result_18, result_17, tmp__trace) <@ __shuffle1 (param_18, param_17);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t1 <- result_18;
      t4 <- result_17;
      param_16 <- ttt;
      param_15 <- tt;
      (result_16, result_15, tmp__trace) <@ __shuffle2 (param_16, param_15);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t3 <- result_16;
      tt <- result_15;
      param_14 <- t1;
      param_13 <- t0;
      (result_14, result_13, tmp__trace) <@ __shuffle2 (param_14, param_13);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      ttt <- result_14;
      t0 <- result_13;
      param_12 <- t2;
      param_11 <- t4;
      (result_12, result_11, tmp__trace) <@ __shuffle2 (param_12, param_11);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t1 <- result_12;
      t4 <- result_11;
      param_10 <- t3;
      param_9 <- ttt;
      (result_10, result_9, tmp__trace) <@ __shuffle4 (param_10, param_9);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t2 <- result_10;
      ttt <- result_9;
      param_8 <- t1;
      param_7 <- tt;
      (result_8, result_7, tmp__trace) <@ __shuffle4 (param_8, param_7);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t3 <- result_8;
      tt <- result_7;
      param_6 <- t0;
      param_5 <- t4;
      (result_6, result_5, tmp__trace) <@ __shuffle4 (param_6, param_5);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t1 <- result_6;
      t4 <- result_5;
      param_4 <- t2;
      param_3 <- t3;
      (result_4, result_3, tmp__trace) <@ __shuffle8 (param_4, param_3);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t0 <- result_4;
      t3 <- result_3;
      param_2 <- t1;
      param_1 <- ttt;
      (result_2, result_1, tmp__trace) <@ __shuffle8 (param_2, param_1);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t2 <- result_2;
      ttt <- result_1;
      param_0 <- tt;
      param <- t4;
      (result_0, result, tmp__trace) <@ __shuffle8 (param_0, param);
      trace__i_poly_tobytes <- (trace__i_poly_tobytes ++ tmp__trace);
      t1 <- result_0;
      t4 <- result;
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert, ((0 <= (192 * i)) /\ (((192 * i) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp (192 * i)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp (192 * i) t0);
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= ((192 * i) + 32)) /\ ((((192 * i) + 32) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp ((192 * i) + 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp ((192 * i) + 32) t2);
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= ((192 * i) + 64)) /\ ((((192 * i) + 64) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp ((192 * i) + 64)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp ((192 * i) + 64) t1);
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= ((192 * i) + 96)) /\ ((((192 * i) + 96) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp ((192 * i) + 96)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp ((192 * i) + 96) t3);
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= ((192 * i) + 128)) /\ ((((192 * i) + 128) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp ((192 * i) + 128)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp ((192 * i) + 128) ttt);
      trace__i_poly_tobytes <-
      (trace__i_poly_tobytes ++
      [(Assert,
       ((0 <= ((192 * i) + 160)) /\ ((((192 * i) + 160) + 32) <= 384)))]);
      b_rp <-
      (BArray384.set256d b_rp ((192 * i) + 160)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray384.set256d rp ((192 * i) + 160) t4);
      i <- (i + 1);
    }
    b_a <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, a, b_a, trace__i_poly_tobytes);
  }
  proc _i_poly_tomsg (rp:BArray32.t, b_rp:BArray32.t, a:BArray512.t,
                      b_a:BArray512.t) : BArray32.t * BArray32.t *
                                         BArray512.t * BArray512.t * trace = {
    var px16:BArray32.t;
    var hq:W256.t;
    var hhq:W256.t;
    var i:int;
    var f0:W256.t;
    var f1:W256.t;
    var g0:W256.t;
    var g1:W256.t;
    var c:W32.t;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var trace__i_poly_tomsg:trace;
    b_result <- witness;
    param <- witness;
    px16 <- witness;
    result <- witness;
    trace__i_poly_tomsg <- [];
    trace__i_poly_tomsg <-
    (trace__i_poly_tomsg ++ [(Assert, (is_init b_a 0 512))]);
    param <- a;
    (result, b_result, tmp__trace) <@ _poly_csubq (param,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace__i_poly_tomsg <- (trace__i_poly_tomsg ++ tmp__trace);
    trace__i_poly_tomsg <-
    (trace__i_poly_tomsg ++ [(Assert, (is_init b_result 0 512))]);
    a <- result;
    px16 <- hqx16_m1;
    hq <- (BArray32.get256 px16 0);
    px16 <- hhqx16;
    hhq <- (BArray32.get256 px16 0);
    i <- 0;
    while ((i < 8)) {
      trace__i_poly_tomsg <-
      (trace__i_poly_tomsg ++
      [(Assert, ((0 <= ((2 * i) * 32)) /\ ((((2 * i) * 32) + 32) <= 512)))]);
      f0 <- (BArray512.get256 a (2 * i));
      trace__i_poly_tomsg <-
      (trace__i_poly_tomsg ++
      [(Assert,
       ((0 <= (((2 * i) + 1) * 32)) /\ (((((2 * i) + 1) * 32) + 32) <= 512)))]);
      f1 <- (BArray512.get256 a ((2 * i) + 1));
      f0 <- (VPSUB_16u16 hq f0);
      f1 <- (VPSUB_16u16 hq f1);
      g0 <- (VPSRA_16u16 f0 (W128.of_int 15));
      g1 <- (VPSRA_16u16 f1 (W128.of_int 15));
      f0 <- (VPXOR_256 f0 g0);
      f1 <- (VPXOR_256 f1 g1);
      f0 <- (VPSUB_16u16 f0 hhq);
      f1 <- (VPSUB_16u16 f1 hhq);
      f0 <- (VPACKSS_16u16 f0 f1);
      f0 <- (VPERMQ f0 (W8.of_int 216));
      c <- (MOVEMASK_32u8 f0);
      trace__i_poly_tomsg <-
      (trace__i_poly_tomsg ++
      [(Assert, ((0 <= (i * 4)) /\ (((i * 4) + 4) <= 32)))]);
      b_rp <- (BArray32.set32d b_rp (i * 4) (W32.of_int 4294967295));
      rp <- (BArray32.set32 rp i c);
      i <- (i + 1);
    }
    b_a <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, a, b_a, trace__i_poly_tomsg);
  }
  proc _i_poly_compress (rp:BArray160.t, b_rp:BArray160.t, a:BArray512.t,
                         b_a:BArray512.t) : BArray160.t * BArray160.t *
                                            BArray512.t * BArray512.t * trace = {
    var v:W256.t;
    var shift1:W256.t;
    var mask:W256.t;
    var shift2:W256.t;
    var shift3:W256.t;
    var sllvdidx:W256.t;
    var shufbidx:W256.t;
    var i:int;
    var f0:W256.t;
    var f1:W256.t;
    var t0:W128.t;
    var t1:W128.t;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var trace__i_poly_compress:trace;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace__i_poly_compress <- [];
    trace__i_poly_compress <-
    (trace__i_poly_compress ++ [(Assert, (is_init b_a 0 512))]);
    param <- a;
    (result, b_result, tmp__trace) <@ _poly_csubq (param,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace__i_poly_compress <- (trace__i_poly_compress ++ tmp__trace);
    trace__i_poly_compress <-
    (trace__i_poly_compress ++ [(Assert, (is_init b_result 0 512))]);
    a <- result;
    v <- (BArray32.get256 jvx16 0);
    shift1 <- (VPBROADCAST_16u16 pc_shift1_s);
    mask <- (VPBROADCAST_16u16 pc_mask_s);
    shift2 <- (VPBROADCAST_16u16 pc_shift2_s);
    shift3 <- (VPBROADCAST_8u32 pc_shift3_s);
    sllvdidx <- (VPBROADCAST_4u64 pc_sllvdidx_s);
    shufbidx <- (BArray32.get256 pc_shufbidx_s 0);
    i <- 0;
    while ((i < 8)) {
      trace__i_poly_compress <-
      (trace__i_poly_compress ++
      [(Assert, ((0 <= ((2 * i) * 32)) /\ ((((2 * i) * 32) + 32) <= 512)))]);
      f0 <- (BArray512.get256 a (2 * i));
      trace__i_poly_compress <-
      (trace__i_poly_compress ++
      [(Assert,
       ((0 <= (((2 * i) + 1) * 32)) /\ (((((2 * i) + 1) * 32) + 32) <= 512)))]);
      f1 <- (BArray512.get256 a ((2 * i) + 1));
      f0 <- (VPMULH_16u16 f0 v);
      f1 <- (VPMULH_16u16 f1 v);
      f0 <- (VPMULHRS_16u16 f0 shift1);
      f1 <- (VPMULHRS_16u16 f1 shift1);
      f0 <- (VPAND_256 f0 mask);
      f1 <- (VPAND_256 f1 mask);
      f0 <- (VPACKUS_16u16 f0 f1);
      f0 <- (VPMADDUBSW_256 f0 shift2);
      f0 <- (VPMADDWD_256 f0 shift3);
      f0 <- (VPSLLV_8u32 f0 sllvdidx);
      f0 <- (VPSRLV_4u64 f0 sllvdidx);
      f0 <- (VPSHUFB_256 f0 shufbidx);
      t0 <- (truncateu128 f0);
      t1 <- (VEXTRACTI128 f0 (W8.of_int 1));
      t0 <- (BLENDV_16u8 t0 t1 (truncateu128 shufbidx));
      trace__i_poly_compress <-
      (trace__i_poly_compress ++
      [(Assert, ((0 <= (20 * i)) /\ (((20 * i) + 16) <= 160)))]);
      b_rp <-
      (BArray160.set128d b_rp (20 * i)
      (W128.of_int 340282366920938463463374607431768211455));
      rp <- (BArray160.set128d rp (20 * i) t0);
      trace__i_poly_compress <-
      (trace__i_poly_compress ++
      [(Assert, ((0 <= ((20 * i) + 16)) /\ ((((20 * i) + 16) + 4) <= 160)))]);
      b_rp <-
      (BArray160.set32d b_rp ((20 * i) + 16) (W32.of_int 4294967295));
      rp <- (BArray160.set32d rp ((20 * i) + 16) (truncateu32 t1));
      i <- (i + 1);
    }
    b_a <- (BArray512.init_arr (W8.of_int 255) 512);
    return (rp, b_rp, a, b_a, trace__i_poly_compress);
  }
  proc _i_poly_decompress (rp:BArray512.t, b_rp:BArray512.t, a:BArray160.t,
                           b_a:BArray160.t) : BArray512.t * BArray512.t *
                                              trace = {
    var q:W256.t;
    var shufbidx:W256.t;
    var mask:W256.t;
    var shift:W256.t;
    var i:int;
    var t:W128.t;
    var ti:W16.t;
    var sh:W128.t;
    var f:W256.t;
    var trace__i_poly_decompress:trace;
    trace__i_poly_decompress <- [];
    trace__i_poly_decompress <-
    (trace__i_poly_decompress ++ [(Assert, (is_init b_a 0 160))]);
    q <- (BArray32.get256 jqx16 0);
    shufbidx <- (BArray32.get256 pd_jshufbidx 0);
    mask <- (BArray32.get256 pd_mask_s 0);
    shift <- (BArray32.get256 pd_shift_s 0);
    i <- 0;
    while ((i < 16)) {
      trace__i_poly_decompress <-
      (trace__i_poly_decompress ++
      [(Assert, ((0 <= (10 * i)) /\ (((10 * i) + 8) <= 160)))]);
      t <- (zeroextu128 (BArray160.get64d a (10 * i)));
      trace__i_poly_decompress <-
      (trace__i_poly_decompress ++
      [(Assert, ((0 <= ((10 * i) + 8)) /\ ((((10 * i) + 8) + 2) <= 160)))]);
      ti <- (BArray160.get16d a ((10 * i) + 8));
      t <- (VPINSR_8u16 t ti (W8.of_int 4));
      sh <- t;
      f <- (VPBROADCAST_2u128 sh);
      f <- (VPSHUFB_256 f shufbidx);
      f <- (VPAND_256 f mask);
      f <- (VPMULL_16u16 f shift);
      f <- (VPMULHRS_16u16 f q);
      trace__i_poly_decompress <-
      (trace__i_poly_decompress ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 512)))]);
      b_rp <-
      (BArray512.set256d b_rp (i * 32)
      (W256.of_int
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      ));
      rp <- (BArray512.set256 rp i f);
      i <- (i + 1);
    }
    return (rp, b_rp, trace__i_poly_decompress);
  }
  proc __polyvec_add2 (r:BArray2048.t, b_r:BArray2048.t, b:BArray2048.t,
                       b_b:BArray2048.t) : BArray2048.t * BArray2048.t *
                                           trace = {
    var i:int;
    var param:BArray512.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_param_0:BArray512.t;
    var trace___polyvec_add2:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    param <- witness;
    param_0 <- witness;
    result <- witness;
    trace___polyvec_add2 <- [];
    trace___polyvec_add2 <-
    (trace___polyvec_add2 ++ [(Assert, (is_init b_r 0 2048))]);
    trace___polyvec_add2 <-
    (trace___polyvec_add2 ++ [(Assert, (is_init b_b 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___polyvec_add2 <-
      (trace___polyvec_add2 ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_add2 <-
      (trace___polyvec_add2 ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_add2 <-
      (trace___polyvec_add2 ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param_0 <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param_0 <- (SBArray2048_512.get_sub16 r (256 * i));
      b_param <- (SBArray2048_512.get_sub16 b_b (256 * i));
      param <- (SBArray2048_512.get_sub16 b (256 * i));
      (result, b_result, tmp__trace) <@ _poly_add2 (param_0, b_param_0,
      param, b_param);
      trace___polyvec_add2 <- (trace___polyvec_add2 ++ tmp__trace);
      trace___polyvec_add2 <-
      (trace___polyvec_add2 ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    b_r <- (BArray2048.init_arr (W8.of_int 255) 2048);
    return (r, b_r, trace___polyvec_add2);
  }
  proc __polyvec_csubq (r:BArray2048.t, b_r:BArray2048.t) : BArray2048.t *
                                                            BArray2048.t *
                                                            trace = {
    var i:int;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var trace___polyvec_csubq:trace;
    b_param <- witness;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace___polyvec_csubq <- [];
    trace___polyvec_csubq <-
    (trace___polyvec_csubq ++ [(Assert, (is_init b_r 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___polyvec_csubq <-
      (trace___polyvec_csubq ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_csubq <-
      (trace___polyvec_csubq ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param <- (SBArray2048_512.get_sub16 r (256 * i));
      (result, b_result, tmp__trace) <@ _poly_csubq (param, b_param);
      trace___polyvec_csubq <- (trace___polyvec_csubq ++ tmp__trace);
      trace___polyvec_csubq <-
      (trace___polyvec_csubq ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    b_r <- (BArray2048.init_arr (W8.of_int 255) 2048);
    return (r, b_r, trace___polyvec_csubq);
  }
  proc __polyvec_invntt (r:BArray2048.t, b_r:BArray2048.t) : BArray2048.t *
                                                             BArray2048.t *
                                                             trace = {
    var i:int;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var trace___polyvec_invntt:trace;
    b_param <- witness;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace___polyvec_invntt <- [];
    trace___polyvec_invntt <-
    (trace___polyvec_invntt ++ [(Assert, (is_init b_r 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___polyvec_invntt <-
      (trace___polyvec_invntt ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_invntt <-
      (trace___polyvec_invntt ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param <- (SBArray2048_512.get_sub16 r (256 * i));
      (result, b_result, tmp__trace) <@ _poly_invntt (param, b_param);
      trace___polyvec_invntt <- (trace___polyvec_invntt ++ tmp__trace);
      trace___polyvec_invntt <-
      (trace___polyvec_invntt ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    b_r <- (BArray2048.init_arr (W8.of_int 255) 2048);
    return (r, b_r, trace___polyvec_invntt);
  }
  proc __polyvec_ntt (r:BArray2048.t, b_r:BArray2048.t) : BArray2048.t *
                                                          BArray2048.t *
                                                          trace = {
    var i:int;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var trace___polyvec_ntt:trace;
    b_param <- witness;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace___polyvec_ntt <- [];
    trace___polyvec_ntt <-
    (trace___polyvec_ntt ++ [(Assert, (is_init b_r 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___polyvec_ntt <-
      (trace___polyvec_ntt ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_ntt <-
      (trace___polyvec_ntt ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param <- (SBArray2048_512.get_sub16 r (256 * i));
      (result, b_result, tmp__trace) <@ _poly_ntt (param, b_param);
      trace___polyvec_ntt <- (trace___polyvec_ntt ++ tmp__trace);
      trace___polyvec_ntt <-
      (trace___polyvec_ntt ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    b_r <- (BArray2048.init_arr (W8.of_int 255) 2048);
    return (r, b_r, trace___polyvec_ntt);
  }
  proc __polyvec_reduce (r:BArray2048.t, b_r:BArray2048.t) : BArray2048.t *
                                                             BArray2048.t *
                                                             trace = {
    var i:int;
    var param:BArray512.t;
    var result:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var trace___polyvec_reduce:trace;
    b_param <- witness;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace___polyvec_reduce <- [];
    trace___polyvec_reduce <-
    (trace___polyvec_reduce ++ [(Assert, (is_init b_r 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___polyvec_reduce <-
      (trace___polyvec_reduce ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_reduce <-
      (trace___polyvec_reduce ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param <- (SBArray2048_512.get_sub16 r (256 * i));
      (result, b_result, tmp__trace) <@ __poly_reduce (param, b_param);
      trace___polyvec_reduce <- (trace___polyvec_reduce ++ tmp__trace);
      trace___polyvec_reduce <-
      (trace___polyvec_reduce ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    b_r <- (BArray2048.init_arr (W8.of_int 255) 2048);
    return (r, b_r, trace___polyvec_reduce);
  }
  proc __i_polyvec_frombytes (a:BArray1536.t, b_a:BArray1536.t) : BArray2048.t *
                                                                  BArray2048.t *
                                                                  trace = {
    var r:BArray2048.t;
    var i:int;
    var param:BArray384.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var b_r:BArray2048.t;
    var b_result:BArray512.t;
    var b_param:BArray384.t;
    var b_param_0:BArray512.t;
    var trace___i_polyvec_frombytes:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_r <- witness;
    b_result <- witness;
    param <- witness;
    param_0 <- witness;
    r <- witness;
    result <- witness;
    trace___i_polyvec_frombytes <- [];
    trace___i_polyvec_frombytes <-
    (trace___i_polyvec_frombytes ++ [(Assert, (is_init b_a 0 1536))]);
    b_r <- (BArray2048.init_arr (W8.of_int 0) 2048);
    i <- 0;
    while ((i < 4)) {
      trace___i_polyvec_frombytes <-
      (trace___i_polyvec_frombytes ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___i_polyvec_frombytes <-
      (trace___i_polyvec_frombytes ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___i_polyvec_frombytes <-
      (trace___i_polyvec_frombytes ++
      [(Assert, ((0 <= (384 * i)) /\ (((384 * i) + 384) <= 1536)))]);
      b_param_0 <- (SBArray2048_512.get_sub16 b_r (256 * i));
      param_0 <- (SBArray2048_512.get_sub16 r (256 * i));
      b_param <- (SBArray1536_384.get_sub8 b_a (384 * i));
      param <- (SBArray1536_384.get_sub8 a (384 * i));
      (result, b_result, tmp__trace) <@ _i_poly_frombytes (param_0,
      b_param_0, param, b_param);
      trace___i_polyvec_frombytes <-
      (trace___i_polyvec_frombytes ++ tmp__trace);
      trace___i_polyvec_frombytes <-
      (trace___i_polyvec_frombytes ++ [(Assert, (is_init b_result 0 512))]);
      b_r <-
      (SBArray2048_512.set_sub16 b_r (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      r <- (SBArray2048_512.set_sub16 r (256 * i) result);
      i <- (i + 1);
    }
    return (r, b_r, trace___i_polyvec_frombytes);
  }
  proc __i_polyvec_tobytes (r:BArray1536.t, b_r:BArray1536.t, a:BArray2048.t,
                            b_a:BArray2048.t) : BArray1536.t * BArray1536.t *
                                                trace = {
    var i:int;
    var param:BArray512.t;
    var param_0:BArray384.t;
    var result:BArray512.t;
    var result_0:BArray384.t;
    var b_result:BArray512.t;
    var b_result_0:BArray384.t;
    var b_param:BArray512.t;
    var b_param_0:BArray384.t;
    var trace___i_polyvec_tobytes:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    result <- witness;
    result_0 <- witness;
    trace___i_polyvec_tobytes <- [];
    trace___i_polyvec_tobytes <-
    (trace___i_polyvec_tobytes ++ [(Assert, (is_init b_a 0 2048))]);
    i <- 0;
    while ((i < 4)) {
      trace___i_polyvec_tobytes <-
      (trace___i_polyvec_tobytes ++
      [(Assert, ((0 <= (384 * i)) /\ (((384 * i) + 384) <= 1536)))]);
      trace___i_polyvec_tobytes <-
      (trace___i_polyvec_tobytes ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___i_polyvec_tobytes <-
      (trace___i_polyvec_tobytes ++
      [(Assert, ((0 <= (384 * i)) /\ (((384 * i) + 384) <= 1536)))]);
      trace___i_polyvec_tobytes <-
      (trace___i_polyvec_tobytes ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param_0 <- (SBArray1536_384.get_sub8 b_r (384 * i));
      param_0 <- (SBArray1536_384.get_sub8 r (384 * i));
      b_param <- (SBArray2048_512.get_sub16 b_a (256 * i));
      param <- (SBArray2048_512.get_sub16 a (256 * i));
      (result_0, b_result_0, result, b_result, tmp__trace) <@ _i_poly_tobytes (
      param_0, b_param_0, param, b_param);
      trace___i_polyvec_tobytes <- (trace___i_polyvec_tobytes ++ tmp__trace);
      trace___i_polyvec_tobytes <-
      (trace___i_polyvec_tobytes ++
      [(Assert, ((is_init b_result_0 0 384) /\ (is_init b_result 0 512)))]);
      b_r <-
      (SBArray1536_384.set_sub8 b_r (384 * i)
      (BArray384.init_arr (W8.of_int 255) 384));
      r <- (SBArray1536_384.set_sub8 r (384 * i) result_0);
      b_a <-
      (SBArray2048_512.set_sub16 b_a (256 * i)
      (BArray512.init_arr (W8.of_int 255) 512));
      a <- (SBArray2048_512.set_sub16 a (256 * i) result);
      i <- (i + 1);
    }
    return (r, b_r, trace___i_polyvec_tobytes);
  }
  proc __polyvec_pointwise_acc (r:BArray512.t, b_r:BArray512.t,
                                a:BArray2048.t, b_a:BArray2048.t,
                                b:BArray2048.t, b_b:BArray2048.t) : BArray512.t *
                                                                    BArray512.t *
                                                                    trace = {
    var t:BArray512.t;
    var i:int;
    var param:BArray512.t;
    var param_0:BArray512.t;
    var result:BArray512.t;
    var param_1:BArray512.t;
    var param_2:BArray512.t;
    var param_3:BArray512.t;
    var result_0:BArray512.t;
    var param_4:BArray512.t;
    var param_5:BArray512.t;
    var param_6:BArray512.t;
    var result_1:BArray512.t;
    var b_result:BArray512.t;
    var b_t:BArray512.t;
    var b_result_0:BArray512.t;
    var b_param:BArray512.t;
    var b_param_0:BArray512.t;
    var b_param_1:BArray512.t;
    var b_result_1:BArray512.t;
    var b_param_2:BArray512.t;
    var b_param_3:BArray512.t;
    var b_param_4:BArray512.t;
    var trace___polyvec_pointwise_acc:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_t <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    t <- witness;
    trace___polyvec_pointwise_acc <- [];
    trace___polyvec_pointwise_acc <-
    (trace___polyvec_pointwise_acc ++
    [(Assert, ((is_init b_a 0 2048) /\ (is_init b_b 0 2048)))]);
    b_t <- (BArray512.init_arr (W8.of_int 0) 512);
    b_param_4 <- b_r;
    param_6 <- r;
    b_param_3 <- (SBArray2048_512.get_sub16 b_a 0);
    param_5 <- (SBArray2048_512.get_sub16 a 0);
    b_param_2 <- (SBArray2048_512.get_sub16 b_b 0);
    param_4 <- (SBArray2048_512.get_sub16 b 0);
    (result_1, b_result_1, tmp__trace) <@ _poly_basemul (param_6, b_param_4,
    param_5, b_param_3, param_4, b_param_2);
    trace___polyvec_pointwise_acc <-
    (trace___polyvec_pointwise_acc ++ tmp__trace);
    trace___polyvec_pointwise_acc <-
    (trace___polyvec_pointwise_acc ++ [(Assert, (is_init b_result_1 0 512))]);
    r <- result_1;
    i <- 1;
    while ((i < 4)) {
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++
      [(Assert,
       ((0 <= ((256 * i) * 2)) /\ ((((256 * i) * 2) + 512) <= 2048)))]);
      b_param_1 <- b_t;
      param_3 <- t;
      b_param_0 <- (SBArray2048_512.get_sub16 b_a (256 * i));
      param_2 <- (SBArray2048_512.get_sub16 a (256 * i));
      b_param <- (SBArray2048_512.get_sub16 b_b (256 * i));
      param_1 <- (SBArray2048_512.get_sub16 b (256 * i));
      (result_0, b_result_0, tmp__trace) <@ _poly_basemul (param_3,
      b_param_1, param_2, b_param_0, param_1, b_param);
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++ tmp__trace);
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++
      [(Assert, (is_init b_result_0 0 512))]);
      b_t <- (BArray512.init_arr (W8.of_int 255) 512);
      t <- result_0;
      param_0 <- r;
      param <- t;
      (result, b_result, tmp__trace) <@ _poly_add2 (param_0,
      (BArray512.init_arr (W8.of_int 255) 512), param,
      (BArray512.init_arr (W8.of_int 255) 512));
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++ tmp__trace);
      trace___polyvec_pointwise_acc <-
      (trace___polyvec_pointwise_acc ++ [(Assert, (is_init b_result 0 512))]);
      r <- result;
      i <- (i + 1);
    }
    b_r <- (BArray512.init_arr (W8.of_int 255) 512);
    return (r, b_r, trace___polyvec_pointwise_acc);
  }
  proc __i_polyvec_decompress (r:BArray2048.t, b_r:BArray2048.t,
                               rp:BArray1568.t, b_rp:BArray1568.t) : 
  BArray2048.t * BArray2048.t * trace = {
    var q:W256.t;
    var shufbidx:W256.t;
    var srlvdidx:W256.t;
    var srlvqidx:W256.t;
    var shift:W256.t;
    var mask:W256.t;
    var i:int;
    var k:int;
    var f:W256.t;
    var trace___i_polyvec_decompress:trace;
    trace___i_polyvec_decompress <- [];
    trace___i_polyvec_decompress <-
    (trace___i_polyvec_decompress ++ [(Assert, (is_init b_rp 0 1568))]);
    q <- (BArray32.get256 jqx16 0);
    shufbidx <- (BArray32.get256 pvd_shufbidx_s 0);
    srlvdidx <- (BArray32.get256 pvd_srlvdidx_s 0);
    srlvqidx <- (BArray32.get256 pvd_srlvqidx_s 0);
    shift <- (BArray32.get256 pvd_shift_s 0);
    mask <- (VPBROADCAST_16u16 pvd_mask_s);
    k <- 0;
    while ((k < 4)) {
      i <- 0;
      while ((i < 16)) {
        trace___i_polyvec_decompress <-
        (trace___i_polyvec_decompress ++
        [(Assert,
         ((0 <= ((352 * k) + (22 * i))) /\
         ((((352 * k) + (22 * i)) + 32) <= 1568)))]);
        f <- (BArray1568.get256d rp ((352 * k) + (22 * i)));
        f <- (VPERMQ f (W8.of_int 148));
        f <- (VPSHUFB_256 f shufbidx);
        f <- (VPSRLV_8u32 f srlvdidx);
        f <- (VPSRLV_4u64 f srlvqidx);
        f <- (VPMULL_16u16 f shift);
        f <- (VPSRL_16u16 f (W128.of_int 1));
        f <- (VPAND_256 f mask);
        f <- (VPMULHRS_16u16 f q);
        trace___i_polyvec_decompress <-
        (trace___i_polyvec_decompress ++
        [(Assert,
         ((0 <= (((16 * k) + i) * 32)) /\
         (((((16 * k) + i) * 32) + 32) <= 2048)))]);
        b_r <-
        (BArray2048.set256d b_r (((16 * k) + i) * 32)
        (W256.of_int
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        ));
        r <- (BArray2048.set256 r ((16 * k) + i) f);
        i <- (i + 1);
      }
      k <- (k + 1);
    }
    return (r, b_r, trace___i_polyvec_decompress);
  }
  proc __i_polyvec_compress (rp:BArray1410.t, b_rp:BArray1410.t,
                             a:BArray2048.t, b_a:BArray2048.t) : BArray1410.t *
                                                                 BArray1410.t *
                                                                 trace = {
    var v:W256.t;
    var v8:W256.t;
    var off:W256.t;
    var shift1:W256.t;
    var mask:W256.t;
    var shift2:W256.t;
    var sllvdidx:W256.t;
    var srlvqidx:W256.t;
    var shufbidx:W256.t;
    var i:int;
    var f0:W256.t;
    var f1:W256.t;
    var f2:W256.t;
    var t0:W128.t;
    var t1:W128.t;
    var param:BArray2048.t;
    var result:BArray2048.t;
    var b_result:BArray2048.t;
    var trace___i_polyvec_compress:trace;
    b_result <- witness;
    param <- witness;
    result <- witness;
    trace___i_polyvec_compress <- [];
    trace___i_polyvec_compress <-
    (trace___i_polyvec_compress ++ [(Assert, (is_init b_a 0 2048))]);
    param <- a;
    (result, b_result, tmp__trace) <@ __polyvec_csubq (param,
    (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___i_polyvec_compress <- (trace___i_polyvec_compress ++ tmp__trace);
    trace___i_polyvec_compress <-
    (trace___i_polyvec_compress ++ [(Assert, (is_init b_result 0 2048))]);
    a <- result;
    v <- (BArray32.get256 jvx16 0);
    v8 <- (VPSLL_16u16 v (W128.of_int 3));
    off <- (VPBROADCAST_16u16 pvc_off_s);
    shift1 <- (VPBROADCAST_16u16 pvc_shift1_s);
    mask <- (VPBROADCAST_16u16 pvc_mask_s);
    shift2 <- (VPBROADCAST_4u64 pvc_shift2_s);
    sllvdidx <- (VPBROADCAST_4u64 pvc_sllvdidx_s);
    srlvqidx <- (BArray32.get256 pvc_srlvqidx 0);
    shufbidx <- (BArray32.get256 pvc_shufbidx_s 0);
    i <- 0;
    while ((i < 64)) {
      trace___i_polyvec_compress <-
      (trace___i_polyvec_compress ++
      [(Assert, ((0 <= (i * 32)) /\ (((i * 32) + 32) <= 2048)))]);
      f0 <- (BArray2048.get256 a i);
      f1 <- (VPMULL_16u16 f0 v8);
      f2 <- (VPADD_16u16 f0 off);
      f0 <- (VPSLL_16u16 f0 (W128.of_int 3));
      f0 <- (VPMULH_16u16 f0 v);
      f2 <- (VPSUB_16u16 f1 f2);
      f1 <- (VPANDN_256 f1 f2);
      f1 <- (VPSRL_16u16 f1 (W128.of_int 15));
      f0 <- (VPSUB_16u16 f0 f1);
      f0 <- (VPMULHRS_16u16 f0 shift1);
      f0 <- (VPAND_256 f0 mask);
      f0 <- (VPMADDWD_256 f0 shift2);
      f0 <- (VPSLLV_8u32 f0 sllvdidx);
      f1 <- (VPSRLDQ_256 f0 (W8.of_int 8));
      f0 <- (VPSRLV_4u64 f0 srlvqidx);
      f1 <- (VPSLL_4u64 f1 (W128.of_int 34));
      f0 <- (VPOR_256 f0 f1);
      f0 <- (VPSHUFB_256 f0 shufbidx);
      t0 <- (truncateu128 f0);
      t1 <- (VEXTRACTI128 f0 (W8.of_int 1));
      t0 <- (BLENDV_16u8 t0 t1 (truncateu128 shufbidx));
      trace___i_polyvec_compress <-
      (trace___i_polyvec_compress ++
      [(Assert, ((0 <= (22 * i)) /\ (((22 * i) + 16) <= 1410)))]);
      b_rp <-
      (BArray1410.set128d b_rp (22 * i)
      (W128.of_int 340282366920938463463374607431768211455));
      rp <- (BArray1410.set128d rp (22 * i) t0);
      trace___i_polyvec_compress <-
      (trace___i_polyvec_compress ++
      [(Assert, ((0 <= ((22 * i) + 16)) /\ ((((22 * i) + 16) + 8) <= 1410)))]);
      b_rp <-
      (BArray1410.set64d b_rp ((22 * i) + 16)
      (W64.of_int 18446744073709551615));
      rp <- (BArray1410.set64d rp ((22 * i) + 16) (truncateu64 t1));
      i <- (i + 1);
    }
    return (rp, b_rp, trace___i_polyvec_compress);
  }
  proc __gen_matrix_buf_rejection_filter48 (pol:BArray512.t,
                                            b_pol:BArray512.t, counter:W64.t,
                                            buf:BArray536.t,
                                            b_buf:BArray536.t,
                                            buf_offset:W64.t,
                                            load_shuffle:W256.t, mask:W256.t,
                                            bounds:W256.t, sst:BArray2048.t,
                                            b_sst:BArray2048.t, ones:W256.t,
                                            ms:W64.t) : BArray512.t *
                                                        BArray512.t * W64.t *
                                                        trace = {
    var f0:W256.t;
    var f1:W256.t;
    var g0:W256.t;
    var g1:W256.t;
    var good:W64.t;
    var t0_0:W64.t;
    var shuffle_0:W256.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var t0_1:W64.t;
    var shuffle_0_1:W128.t;
    var t1_0:W64.t;
    var shuffle_1:W256.t;
    var t1_1:W64.t;
    var shuffle_1_1:W128.t;
    var shuffle_t:W256.t;
    var  _0:bool;
    var  _1:bool;
    var  _2:bool;
    var  _3:bool;
    var trace___gen_matrix_buf_rejection_filter48:trace;
    trace___gen_matrix_buf_rejection_filter48 <- [];
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((((((is_init b_buf 0 536) /\ (is_init b_sst 0 2048)) /\
        (0 <= (W64.to_uint counter))) /\
       (((W64.to_uint counter) + 32) <= 256)) /\
      (0 <= (W64.to_uint buf_offset))) /\
     ((((W64.to_uint buf_offset) + 24) + 32) <= 536)))]);
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= (W64.to_uint buf_offset)) /\
     (((W64.to_uint buf_offset) + 32) <= 536)))]);
    f0 <-
    (VPERMQ (BArray536.get256d buf (W64.to_uint buf_offset)) (W8.of_int 148));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= ((W64.to_uint buf_offset) + 24)) /\
     ((((W64.to_uint buf_offset) + 24) + 32) <= 536)))]);
    f1 <-
    (VPERMQ (BArray536.get256d buf ((W64.to_uint buf_offset) + 24))
    (W8.of_int 148));
    f0 <- (VPSHUFB_256 f0 load_shuffle);
    f1 <- (VPSHUFB_256 f1 load_shuffle);
    g0 <- (VPSRL_16u16 f0 (W128.of_int 4));
    g1 <- (VPSRL_16u16 f1 (W128.of_int 4));
    f0 <- (VPBLEND_16u16 f0 g0 (W8.of_int 170));
    f1 <- (VPBLEND_16u16 f1 g1 (W8.of_int 170));
    f0 <- (VPAND_256 f0 mask);
    f1 <- (VPAND_256 f1 mask);
    g0 <- (VPCMPGT_16u16 bounds f0);
    g1 <- (VPCMPGT_16u16 bounds f1);
    g0 <- (VPACKSS_16u16 g0 g1);
    good <- (zeroextu64 (MOVEMASK_32u8 g0));
    good <- (protect_64 good ms);
    t0_0 <- good;
    t0_0 <- (t0_0 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= ((W64.to_uint t0_0) * 8)) /\
     ((((W64.to_uint t0_0) * 8) + 8) <= 2048)))]);
    shuffle_0 <-
    (zeroextu256 (VMOV_64 (BArray2048.get64 sst (W64.to_uint t0_0))));
    (_of_, _cf_, _sf_,  _0, _zf_, t0_0) <- (POPCNT_64 t0_0);
    t0_0 <- (t0_0 + counter);
    t0_1 <- good;
    t0_1 <- (t0_1 `>>` (W8.of_int 16));
    t0_1 <- (t0_1 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= ((W64.to_uint t0_1) * 8)) /\
     ((((W64.to_uint t0_1) * 8) + 8) <= 2048)))]);
    shuffle_0_1 <- (VMOV_64 (BArray2048.get64 sst (W64.to_uint t0_1)));
    (_of_, _cf_, _sf_,  _1, _zf_, t0_1) <- (POPCNT_64 t0_1);
    t0_1 <- (t0_1 + t0_0);
    t1_0 <- good;
    t1_0 <- (t1_0 `>>` (W8.of_int 8));
    t1_0 <- (t1_0 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= ((W64.to_uint t1_0) * 8)) /\
     ((((W64.to_uint t1_0) * 8) + 8) <= 2048)))]);
    shuffle_1 <-
    (zeroextu256 (VMOV_64 (BArray2048.get64 sst (W64.to_uint t1_0))));
    (_of_, _cf_, _sf_,  _2, _zf_, t1_0) <- (POPCNT_64 t1_0);
    t1_0 <- (t1_0 + t0_1);
    t1_1 <- good;
    t1_1 <- (t1_1 `>>` (W8.of_int 24));
    t1_1 <- (t1_1 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= ((W64.to_uint t1_1) * 8)) /\
     ((((W64.to_uint t1_1) * 8) + 8) <= 2048)))]);
    shuffle_1_1 <- (VMOV_64 (BArray2048.get64 sst (W64.to_uint t1_1)));
    (_of_, _cf_, _sf_,  _3, _zf_, t1_1) <- (POPCNT_64 t1_1);
    t1_1 <- (t1_1 + t1_0);
    shuffle_0 <- (VINSERTI128 shuffle_0 shuffle_0_1 (W8.of_int 1));
    shuffle_1 <- (VINSERTI128 shuffle_1 shuffle_1_1 (W8.of_int 1));
    shuffle_t <- (VPADD_32u8 shuffle_0 ones);
    shuffle_0 <- (VPUNPCKL_32u8 shuffle_0 shuffle_t);
    shuffle_t <- (VPADD_32u8 shuffle_1 ones);
    shuffle_1 <- (VPUNPCKL_32u8 shuffle_1 shuffle_t);
    f0 <- (VPSHUFB_256 f0 shuffle_0);
    f1 <- (VPSHUFB_256 f1 shuffle_1);
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= (W64.to_uint ((W64.of_int 2) * counter))) /\
     (((W64.to_uint ((W64.of_int 2) * counter)) + 16) <= 512)))]);
    b_pol <-
    (BArray512.set128d b_pol (W64.to_uint ((W64.of_int 2) * counter))
    (W128.of_int 340282366920938463463374607431768211455));
    pol <-
    (BArray512.set128d pol (W64.to_uint ((W64.of_int 2) * counter))
    (truncateu128 f0));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= (W64.to_uint ((W64.of_int 2) * t0_0))) /\
     (((W64.to_uint ((W64.of_int 2) * t0_0)) + 16) <= 512)))]);
    b_pol <-
    (BArray512.set128d b_pol (W64.to_uint ((W64.of_int 2) * t0_0))
    (W128.of_int 340282366920938463463374607431768211455));
    pol <-
    (BArray512.set128d pol (W64.to_uint ((W64.of_int 2) * t0_0))
    (VEXTRACTI128 f0 (W8.of_int 1)));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= (W64.to_uint ((W64.of_int 2) * t0_1))) /\
     (((W64.to_uint ((W64.of_int 2) * t0_1)) + 16) <= 512)))]);
    b_pol <-
    (BArray512.set128d b_pol (W64.to_uint ((W64.of_int 2) * t0_1))
    (W128.of_int 340282366920938463463374607431768211455));
    pol <-
    (BArray512.set128d pol (W64.to_uint ((W64.of_int 2) * t0_1))
    (truncateu128 f1));
    trace___gen_matrix_buf_rejection_filter48 <-
    (trace___gen_matrix_buf_rejection_filter48 ++
    [(Assert,
     ((0 <= (W64.to_uint ((W64.of_int 2) * t1_0))) /\
     (((W64.to_uint ((W64.of_int 2) * t1_0)) + 16) <= 512)))]);
    b_pol <-
    (BArray512.set128d b_pol (W64.to_uint ((W64.of_int 2) * t1_0))
    (W128.of_int 340282366920938463463374607431768211455));
    pol <-
    (BArray512.set128d pol (W64.to_uint ((W64.of_int 2) * t1_0))
    (VEXTRACTI128 f1 (W8.of_int 1)));
    counter <- t1_1;
    return (pol, b_pol, counter, trace___gen_matrix_buf_rejection_filter48);
  }
  proc __write_u128_boundchk (pol:BArray512.t, b_pol:BArray512.t, ctr:W64.t,
                              data:W128.t, ms:W64.t) : BArray512.t *
                                                       BArray512.t * W64.t *
                                                       trace = {
    var condition_8:bool;
    var data_u64:W64.t;
    var condition_4:bool;
    var condition_2:bool;
    var condition_1:bool;
    var trace___write_u128_boundchk:trace;
    trace___write_u128_boundchk <- [];
    condition_8 <- (ctr \ule (W64.of_int 248));
    if (condition_8) {
      ms <- (update_msf condition_8 ms);
      trace___write_u128_boundchk <-
      (trace___write_u128_boundchk ++
      [(Assert,
       ((0 <= (2 * (W64.to_uint ctr))) /\
       (((2 * (W64.to_uint ctr)) + 16) <= 512)))]);
      b_pol <-
      (BArray512.set128d b_pol (2 * (W64.to_uint ctr))
      (W128.of_int 340282366920938463463374607431768211455));
      pol <- (BArray512.set128d pol (2 * (W64.to_uint ctr)) data);
    } else {
      ms <- (update_msf (! condition_8) ms);
      data_u64 <- (MOVV_64 (truncateu64 data));
      condition_4 <- (ctr \ule (W64.of_int 252));
      if (condition_4) {
        ms <- (update_msf condition_4 ms);
        trace___write_u128_boundchk <-
        (trace___write_u128_boundchk ++
        [(Assert,
         ((0 <= (2 * (W64.to_uint ctr))) /\
         (((2 * (W64.to_uint ctr)) + 8) <= 512)))]);
        b_pol <-
        (BArray512.set64d b_pol (2 * (W64.to_uint ctr))
        (W64.of_int 18446744073709551615));
        pol <- (BArray512.set64d pol (2 * (W64.to_uint ctr)) data_u64);
        data_u64 <- (VPEXTR_64 data (W8.of_int 1));
        ctr <- (ctr + (W64.of_int 4));
      } else {
        ms <- (update_msf (! condition_4) ms);
      }
      condition_2 <- (ctr \ule (W64.of_int 254));
      if (condition_2) {
        ms <- (update_msf condition_2 ms);
        trace___write_u128_boundchk <-
        (trace___write_u128_boundchk ++
        [(Assert,
         ((0 <= (2 * (W64.to_uint ctr))) /\
         (((2 * (W64.to_uint ctr)) + 4) <= 512)))]);
        b_pol <-
        (BArray512.set32d b_pol (2 * (W64.to_uint ctr))
        (W32.of_int 4294967295));
        pol <-
        (BArray512.set32d pol (2 * (W64.to_uint ctr)) (truncateu32 data_u64));
        data_u64 <- (data_u64 `>>` (W8.of_int 32));
        ctr <- (ctr + (W64.of_int 2));
      } else {
        ms <- (update_msf (! condition_2) ms);
      }
      condition_1 <- (ctr \ule (W64.of_int 255));
      if (condition_1) {
        ms <- (update_msf condition_1 ms);
        trace___write_u128_boundchk <-
        (trace___write_u128_boundchk ++
        [(Assert,
         ((0 <= (2 * (W64.to_uint ctr))) /\
         (((2 * (W64.to_uint ctr)) + 2) <= 512)))]);
        b_pol <-
        (BArray512.set16d b_pol (2 * (W64.to_uint ctr)) (W16.of_int 65535));
        pol <-
        (BArray512.set16d pol (2 * (W64.to_uint ctr)) (truncateu16 data_u64));
      } else {
        ms <- (update_msf (! condition_1) ms);
      }
    }
    return (pol, b_pol, ms, trace___write_u128_boundchk);
  }
  proc __gen_matrix_buf_rejection_filter24 (pol:BArray512.t,
                                            b_pol:BArray512.t, counter:W64.t,
                                            buf:BArray536.t,
                                            b_buf:BArray536.t,
                                            buf_offset:W64.t,
                                            load_shuffle:W256.t, mask:W256.t,
                                            bounds:W256.t, sst:BArray2048.t,
                                            b_sst:BArray2048.t, ones:W256.t,
                                            ms:W64.t) : BArray512.t *
                                                        BArray512.t * W64.t *
                                                        W64.t * trace = {
    var f0:W256.t;
    var g0:W256.t;
    var g1:W256.t;
    var good:W64.t;
    var t0_0:W64.t;
    var shuffle_0:W256.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var t0_1:W64.t;
    var shuffle_0_1:W128.t;
    var shuffle_t:W256.t;
    var t128:W128.t;
    var param:W64.t;
    var param_0:W128.t;
    var param_1:W64.t;
    var param_2:BArray512.t;
    var result:W64.t;
    var result_0:BArray512.t;
    var param_3:W64.t;
    var param_4:W128.t;
    var param_5:W64.t;
    var param_6:BArray512.t;
    var result_1:W64.t;
    var result_2:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_result_0:BArray512.t;
    var b_param_0:BArray512.t;
    var  _0:bool;
    var  _1:bool;
    var trace___gen_matrix_buf_rejection_filter24:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param_2 <- witness;
    param_6 <- witness;
    result_0 <- witness;
    result_2 <- witness;
    trace___gen_matrix_buf_rejection_filter24 <- [];
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++
    [(Assert,
     (((((is_init b_buf 0 536) /\ (is_init b_sst 0 2048)) /\
       (0 <= (W64.to_uint counter))) /\
      (0 <= (W64.to_uint buf_offset))) /\
     (((W64.to_uint buf_offset) + 32) <= 536)))]);
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++
    [(Assert,
     ((0 <= (W64.to_uint buf_offset)) /\
     (((W64.to_uint buf_offset) + 32) <= 536)))]);
    f0 <-
    (VPERMQ (BArray536.get256d buf (W64.to_uint buf_offset)) (W8.of_int 148));
    f0 <- (VPSHUFB_256 f0 load_shuffle);
    g0 <- (VPSRL_16u16 f0 (W128.of_int 4));
    f0 <- (VPBLEND_16u16 f0 g0 (W8.of_int 170));
    f0 <- (VPAND_256 f0 mask);
    g0 <- (VPCMPGT_16u16 bounds f0);
    g1 <- (set0_256);
    g0 <- (VPACKSS_16u16 g0 g1);
    good <- (zeroextu64 (MOVEMASK_32u8 g0));
    good <- (protect_64 good ms);
    t0_0 <- good;
    t0_0 <- (t0_0 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++
    [(Assert,
     ((0 <= ((W64.to_uint t0_0) * 8)) /\
     ((((W64.to_uint t0_0) * 8) + 8) <= 2048)))]);
    shuffle_0 <-
    (zeroextu256 (VMOV_64 (BArray2048.get64 sst (W64.to_uint t0_0))));
    (_of_, _cf_, _sf_,  _0, _zf_, t0_0) <- (POPCNT_64 t0_0);
    t0_0 <- (t0_0 + counter);
    t0_1 <- good;
    t0_1 <- (t0_1 `>>` (W8.of_int 16));
    t0_1 <- (t0_1 `&` (W64.of_int 255));
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++
    [(Assert,
     ((0 <= ((W64.to_uint t0_1) * 8)) /\
     ((((W64.to_uint t0_1) * 8) + 8) <= 2048)))]);
    shuffle_0_1 <- (VMOV_64 (BArray2048.get64 sst (W64.to_uint t0_1)));
    (_of_, _cf_, _sf_,  _1, _zf_, t0_1) <- (POPCNT_64 t0_1);
    t0_1 <- (t0_1 + t0_0);
    shuffle_0 <- (VINSERTI128 shuffle_0 shuffle_0_1 (W8.of_int 1));
    shuffle_t <- (VPADD_32u8 shuffle_0 ones);
    shuffle_0 <- (VPUNPCKL_32u8 shuffle_0 shuffle_t);
    f0 <- (VPSHUFB_256 f0 shuffle_0);
    t128 <- (truncateu128 f0);
    b_param_0 <- b_pol;
    param_6 <- pol;
    param_5 <- counter;
    param_4 <- t128;
    param_3 <- ms;
    (result_2, b_result_0, result_1, tmp__trace) <@ __write_u128_boundchk (
    param_6, b_param_0, param_5, param_4, param_3);
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++ tmp__trace);
    b_pol <- b_result_0;
    pol <- result_2;
    ms <- result_1;
    t128 <- (VEXTRACTI128 f0 (W8.of_int 1));
    b_param <- b_pol;
    param_2 <- pol;
    param_1 <- t0_0;
    param_0 <- t128;
    param <- ms;
    (result_0, b_result, result, tmp__trace) <@ __write_u128_boundchk (
    param_2, b_param, param_1, param_0, param);
    trace___gen_matrix_buf_rejection_filter24 <-
    (trace___gen_matrix_buf_rejection_filter24 ++ tmp__trace);
    b_pol <- b_result;
    pol <- result_0;
    ms <- result;
    counter <- t0_1;
    return (pol, b_pol, counter, ms,
           trace___gen_matrix_buf_rejection_filter24);
  }
  proc _gen_matrix_buf_rejection (pol:BArray512.t, b_pol:BArray512.t,
                                  counter:W64.t, buf:BArray536.t,
                                  b_buf:BArray536.t, buf_offset:W64.t) : 
  BArray512.t * BArray512.t * W64.t * trace = {
    var ms:W64.t;
    var load_shuffle:W256.t;
    var mask:W256.t;
    var bounds:W256.t;
    var ones:W256.t;
    var sst:BArray2048.t;
    var saved_buf_offset:W64.t;
    var condition_loop:bool;
    var param:W64.t;
    var param_0:W256.t;
    var param_1:BArray2048.t;
    var param_2:W256.t;
    var param_3:W256.t;
    var param_4:W256.t;
    var param_5:W64.t;
    var param_6:BArray536.t;
    var param_7:W64.t;
    var param_8:BArray512.t;
    var result:W64.t;
    var result_0:W64.t;
    var result_1:BArray512.t;
    var param_9:W64.t;
    var param_10:W256.t;
    var param_11:BArray2048.t;
    var param_12:W256.t;
    var param_13:W256.t;
    var param_14:W256.t;
    var param_15:W64.t;
    var param_16:BArray536.t;
    var param_17:W64.t;
    var param_18:BArray512.t;
    var result_2:W64.t;
    var result_3:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_result_0:BArray512.t;
    var b_param_0:BArray512.t;
    var trace__gen_matrix_buf_rejection:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param_1 <- witness;
    param_6 <- witness;
    param_8 <- witness;
    param_11 <- witness;
    param_16 <- witness;
    param_18 <- witness;
    result_1 <- witness;
    result_3 <- witness;
    sst <- witness;
    trace__gen_matrix_buf_rejection <- [];
    trace__gen_matrix_buf_rejection <-
    (trace__gen_matrix_buf_rejection ++
    [(Assert,
     (((((is_init b_buf 0 536) /\ (0 <= (W64.to_uint counter))) /\
       ((W64.to_uint counter) <= 256)) /\
      (0 <= (W64.to_uint buf_offset))) /\
     ((W64.to_uint buf_offset) < 536)))]);
    ms <- (init_msf);
    load_shuffle <- (BArray32.get256 sample_load_shuffle 0);
    mask <- sample_mask;
    bounds <- sample_q;
    ones <- sample_ones;
    sst <- sample_shuffle_table;
    saved_buf_offset <- buf_offset;
    buf_offset <- buf_offset;
    condition_loop <- (buf_offset \ult (W64.of_int 457));
    while (condition_loop) {
      ms <- (update_msf condition_loop ms);
      condition_loop <- (counter \ult (W64.of_int 225));
      if (condition_loop) {
        ms <- (update_msf condition_loop ms);
        b_param_0 <- b_pol;
        param_18 <- pol;
        param_17 <- counter;
        param_16 <- buf;
        param_15 <- buf_offset;
        param_14 <- load_shuffle;
        param_13 <- mask;
        param_12 <- bounds;
        param_11 <- sst;
        param_10 <- ones;
        param_9 <- ms;
        (result_3, b_result_0, result_2, tmp__trace) <@ __gen_matrix_buf_rejection_filter48 (
        param_18, b_param_0, param_17, param_16,
        (BArray536.init_arr (W8.of_int 255) 536), param_15, param_14,
        param_13, param_12, param_11,
        (BArray2048.init_arr (W8.of_int 255) 2048), param_10, param_9);
        trace__gen_matrix_buf_rejection <-
        (trace__gen_matrix_buf_rejection ++ tmp__trace);
        trace__gen_matrix_buf_rejection <-
        (trace__gen_matrix_buf_rejection ++
        [(Assert,
         (((W64.to_uint param_17) <= (W64.to_uint result_2)) /\
         ((W64.to_uint result_2) <= 256)))]);
        b_pol <- b_result_0;
        pol <- result_3;
        counter <- result_2;
        saved_buf_offset <- (saved_buf_offset + (W64.of_int 48));
        buf_offset <- saved_buf_offset;
        buf_offset <- (protect_64 buf_offset ms);
      } else {
        ms <- (update_msf (! condition_loop) ms);
        buf_offset <- (W64.of_int 504);
      }
      condition_loop <- (buf_offset \ult (W64.of_int 457));
    }
    ms <- (update_msf (! condition_loop) ms);
    buf_offset <- saved_buf_offset;
    buf_offset <- (protect_64 buf_offset ms);
    condition_loop <- (buf_offset \ult (W64.of_int 481));
    while (condition_loop) {
      ms <- (update_msf condition_loop ms);
      condition_loop <- (counter \ult (W64.of_int 256));
      if (condition_loop) {
        ms <- (update_msf condition_loop ms);
        (* Erased call to spill *)
        b_param <- b_pol;
        param_8 <- pol;
        param_7 <- counter;
        param_6 <- buf;
        param_5 <- buf_offset;
        param_4 <- load_shuffle;
        param_3 <- mask;
        param_2 <- bounds;
        param_1 <- sst;
        param_0 <- ones;
        param <- ms;
        (result_1, b_result, result_0, result, tmp__trace) <@ __gen_matrix_buf_rejection_filter24 (
        param_8, b_param, param_7, param_6,
        (BArray536.init_arr (W8.of_int 255) 536), param_5, param_4, param_3,
        param_2, param_1, (BArray2048.init_arr (W8.of_int 255) 2048),
        param_0, param);
        trace__gen_matrix_buf_rejection <-
        (trace__gen_matrix_buf_rejection ++ tmp__trace);
        trace__gen_matrix_buf_rejection <-
        (trace__gen_matrix_buf_rejection ++
        [(Assert,
         (((W64.of_int (W64.to_uint param_7)) \ule result_0) /\
         ((W64.to_uint result_0) <= 256)))]);
        b_pol <- b_result;
        pol <- result_1;
        counter <- result_0;
        ms <- result;
        (* Erased call to unspill *)
        buf_offset <- (protect_64 buf_offset ms);
        buf_offset <- (buf_offset + (W64.of_int 24));
      } else {
        ms <- (update_msf (! condition_loop) ms);
        buf_offset <- (W64.of_int 504);
      }
      condition_loop <- (buf_offset \ult (W64.of_int 481));
    }
    return (pol, b_pol, counter, trace__gen_matrix_buf_rejection);
  }
  proc gen_matrix_get_indexes (b:W64.t, _t:W64.t) : W64.t * trace = {
    var t:W64.t;
    var idxs:BArray64.t;
    var trace_gen_matrix_get_indexes:trace;
    idxs <- witness;
    trace_gen_matrix_get_indexes <- [];
    trace_gen_matrix_get_indexes <-
    (trace_gen_matrix_get_indexes ++
    [(Assert,
     (((W64.of_int 0) \ule (b + (_t `<<` (W8.of_int 5)))) /\
     ((b + (_t `<<` (W8.of_int 5))) \ule (W64.of_int 56))))]);
    idxs <- gen_matrix_indexes;
    t <- _t;
    t <- (t `<<` (W8.of_int 5));
    b <- (b + t);
    trace_gen_matrix_get_indexes <-
    (trace_gen_matrix_get_indexes ++
    [(Assert, ((0 <= (W64.to_uint b)) /\ (((W64.to_uint b) + 8) <= 64)))]);
    t <- (BArray64.get64d idxs (W64.to_uint b));
    return (t, trace_gen_matrix_get_indexes);
  }
  proc __gen_matrix_fill_polynomial (pol:BArray512.t, b_pol:BArray512.t,
                                     buf:BArray536.t, b_buf:BArray536.t) : 
  BArray512.t * BArray512.t * BArray536.t * BArray536.t * trace = {
    var buf_offset:W64.t;
    var counter:W64.t;
    var param:W64.t;
    var param_0:BArray536.t;
    var param_1:W64.t;
    var param_2:BArray512.t;
    var result:W64.t;
    var result_0:BArray512.t;
    var param_3:BArray536.t;
    var result_1:BArray536.t;
    var param_4:W64.t;
    var param_5:BArray536.t;
    var param_6:W64.t;
    var param_7:BArray512.t;
    var result_2:W64.t;
    var result_3:BArray512.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_result_0:BArray536.t;
    var b_result_1:BArray512.t;
    var b_param_0:BArray512.t;
    var trace___gen_matrix_fill_polynomial:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    param_0 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_5 <- witness;
    param_7 <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_3 <- witness;
    trace___gen_matrix_fill_polynomial <- [];
    trace___gen_matrix_fill_polynomial <-
    (trace___gen_matrix_fill_polynomial ++ [(Assert, (is_init b_buf 0 536))]);
    buf_offset <- (W64.of_int 0);
    counter <- (W64.of_int 0);
    b_param_0 <- b_pol;
    param_7 <- pol;
    param_6 <- counter;
    param_5 <- buf;
    param_4 <- buf_offset;
    (result_3, b_result_1, result_2, tmp__trace) <@ _gen_matrix_buf_rejection (
    param_7, b_param_0, param_6, param_5,
    (BArray536.init_arr (W8.of_int 255) 536), param_4);
    trace___gen_matrix_fill_polynomial <-
    (trace___gen_matrix_fill_polynomial ++ tmp__trace);
    trace___gen_matrix_fill_polynomial <-
    (trace___gen_matrix_fill_polynomial ++
    [(Assert,
     (((W64.of_int (W64.to_uint param_6)) \ule result_2) /\
     ((W64.to_uint result_2) <= 256)))]);
    b_pol <- b_result_1;
    pol <- result_3;
    counter <- result_2;
    buf_offset <- (W64.of_int 336);
    while ((counter \ult (W64.of_int 256))) {
      param_3 <- buf;
      (result_1, b_result_0, tmp__trace) <@ _shake128_next_state (param_3,
      (BArray536.init_arr (W8.of_int 255) 536));
      trace___gen_matrix_fill_polynomial <-
      (trace___gen_matrix_fill_polynomial ++ tmp__trace);
      trace___gen_matrix_fill_polynomial <-
      (trace___gen_matrix_fill_polynomial ++
      [(Assert, (is_init b_result_0 0 536))]);
      buf <- result_1;
      b_param <- b_pol;
      param_2 <- pol;
      param_1 <- counter;
      param_0 <- buf;
      param <- buf_offset;
      (result_0, b_result, result, tmp__trace) <@ _gen_matrix_buf_rejection (
      param_2, b_param, param_1, param_0,
      (BArray536.init_arr (W8.of_int 255) 536), param);
      trace___gen_matrix_fill_polynomial <-
      (trace___gen_matrix_fill_polynomial ++ tmp__trace);
      trace___gen_matrix_fill_polynomial <-
      (trace___gen_matrix_fill_polynomial ++
      [(Assert,
       (((W64.of_int (W64.to_uint param_1)) \ule result) /\
       ((W64.to_uint result) <= 256)))]);
      b_pol <- b_result;
      pol <- result_0;
      counter <- result;
    }
    b_buf <- (BArray536.init_arr (W8.of_int 255) 536);
    return (pol, b_pol, buf, b_buf, trace___gen_matrix_fill_polynomial);
  }
  proc _gen_matrix_sample_four_polynomials (polx4:BArray2048.t,
                                            b_polx4:BArray2048.t,
                                            buf:BArray2144.t,
                                            b_buf:BArray2144.t,
                                            rho:BArray32.t, b_rho:BArray32.t,
                                            pos_entry:W64.t, transposed:W64.t) : 
  BArray2048.t * BArray2048.t * BArray2144.t * BArray2144.t * trace = {
    var indexes:BArray8.t;
    var state:BArray800.t;
    var stx4:BArray800.t;
    var pol:BArray512.t;
    var param:BArray536.t;
    var param_0:BArray512.t;
    var result:BArray536.t;
    var result_0:BArray512.t;
    var param_1:BArray536.t;
    var param_2:BArray512.t;
    var result_1:BArray536.t;
    var result_2:BArray512.t;
    var param_3:BArray536.t;
    var param_4:BArray512.t;
    var result_3:BArray536.t;
    var result_4:BArray512.t;
    var param_5:BArray536.t;
    var param_6:BArray512.t;
    var result_5:BArray536.t;
    var result_6:BArray512.t;
    var param_7:BArray2144.t;
    var param_8:BArray800.t;
    var result_7:BArray2144.t;
    var result_8:BArray800.t;
    var param_9:BArray8.t;
    var param_10:BArray32.t;
    var param_11:BArray800.t;
    var result_9:BArray800.t;
    var param_12:W64.t;
    var param_13:W64.t;
    var result_10:W64.t;
    var b_pol:BArray512.t;
    var b_result:BArray536.t;
    var b_result_0:BArray512.t;
    var b_param:BArray536.t;
    var b_param_0:BArray512.t;
    var b_result_1:BArray536.t;
    var b_result_2:BArray512.t;
    var b_param_1:BArray536.t;
    var b_param_2:BArray512.t;
    var b_result_3:BArray536.t;
    var b_result_4:BArray512.t;
    var b_param_3:BArray536.t;
    var b_param_4:BArray512.t;
    var b_result_5:BArray536.t;
    var b_result_6:BArray512.t;
    var b_param_5:BArray536.t;
    var b_param_6:BArray512.t;
    var b_result_7:BArray2144.t;
    var b_result_8:BArray800.t;
    var b_param_7:BArray2144.t;
    var b_stx4:BArray800.t;
    var b_result_9:BArray800.t;
    var b_param_8:BArray8.t;
    var b_param_9:BArray800.t;
    var b_indexes:BArray8.t;
    var b_state:BArray800.t;
    var trace__gen_matrix_sample_four_polynomials:trace;
    b_indexes <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_pol <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_state <- witness;
    b_stx4 <- witness;
    indexes <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    pol <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    state <- witness;
    stx4 <- witness;
    trace__gen_matrix_sample_four_polynomials <- [];
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert,
     (((is_init b_rho 0 32) /\
      ((W64.of_int 0) \ule (pos_entry + (transposed `<<` (W8.of_int 5))))) /\
     ((pos_entry + (transposed `<<` (W8.of_int 5))) \ule (W64.of_int 56))))]);
    b_indexes <- (BArray8.init_arr (W8.of_int 0) 8);
    b_state <- (BArray800.init_arr (W8.of_int 0) 800);
    param_13 <- pos_entry;
    param_12 <- transposed;
    (result_10, tmp__trace) <@ gen_matrix_get_indexes (param_13, param_12);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    b_indexes <-
    (BArray8.set64d b_indexes 0 (W64.of_int 18446744073709551615));
    indexes <- (BArray8.set64d indexes 0 result_10);
    b_stx4 <- b_state;
    stx4 <- state;
    b_param_9 <- b_stx4;
    param_11 <- stx4;
    param_10 <- rho;
    b_param_8 <- b_indexes;
    param_9 <- indexes;
    (result_9, b_result_9, tmp__trace) <@ _shake128x4_absorb_A32_A2 (
    param_11, b_param_9, param_10, (BArray32.init_arr (W8.of_int 255) 32),
    param_9, b_param_8);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, (is_init b_result_9 0 800))]);
    stx4 <- result_9;
    param_8 <- stx4;
    b_param_7 <- b_buf;
    param_7 <- buf;
    (result_8, b_result_8, result_7, b_result_7, tmp__trace) <@ _shake128x4_squeeze3blocks (
    param_8, (BArray800.init_arr (W8.of_int 255) 800), param_7, b_param_7);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, (is_init b_result_7 0 2144))]);
    b_buf <- (BArray2144.init_arr (W8.of_int 255) 2144);
    buf <- result_7;
    b_pol <- (SBArray2048_512.get_sub16 b_polx4 0);
    pol <- (SBArray2048_512.get_sub16 polx4 0);
    b_param_6 <- b_pol;
    param_6 <- pol;
    b_param_5 <- (SBArray2144_536.get_sub8 b_buf 0);
    param_5 <- (SBArray2144_536.get_sub8 buf 0);
    (result_6, b_result_6, result_5, b_result_5, tmp__trace) <@ __gen_matrix_fill_polynomial (
    param_6, b_param_6, param_5, b_param_5);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, ((is_init b_result_6 0 512) /\ (is_init b_result_5 0 536)))]);
    pol <- result_6;
    b_buf <-
    (SBArray2144_536.set_sub8 b_buf 0
    (BArray536.init_arr (W8.of_int 255) 536));
    buf <- (SBArray2144_536.set_sub8 buf 0 result_5);
    b_polx4 <-
    (SBArray2048_512.set_sub16 b_polx4 0
    (BArray512.init_arr (W8.of_int 255) 512));
    polx4 <- (SBArray2048_512.set_sub16 polx4 0 pol);
    b_pol <- (SBArray2048_512.get_sub16 b_polx4 256);
    pol <- (SBArray2048_512.get_sub16 polx4 256);
    b_param_4 <- b_pol;
    param_4 <- pol;
    b_param_3 <- (SBArray2144_536.get_sub8 b_buf 536);
    param_3 <- (SBArray2144_536.get_sub8 buf 536);
    (result_4, b_result_4, result_3, b_result_3, tmp__trace) <@ __gen_matrix_fill_polynomial (
    param_4, b_param_4, param_3, b_param_3);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, ((is_init b_result_4 0 512) /\ (is_init b_result_3 0 536)))]);
    pol <- result_4;
    b_buf <-
    (SBArray2144_536.set_sub8 b_buf 536
    (BArray536.init_arr (W8.of_int 255) 536));
    buf <- (SBArray2144_536.set_sub8 buf 536 result_3);
    b_polx4 <-
    (SBArray2048_512.set_sub16 b_polx4 256
    (BArray512.init_arr (W8.of_int 255) 512));
    polx4 <- (SBArray2048_512.set_sub16 polx4 256 pol);
    b_pol <- (SBArray2048_512.get_sub16 b_polx4 512);
    pol <- (SBArray2048_512.get_sub16 polx4 512);
    b_param_2 <- b_pol;
    param_2 <- pol;
    b_param_1 <- (SBArray2144_536.get_sub8 b_buf 1072);
    param_1 <- (SBArray2144_536.get_sub8 buf 1072);
    (result_2, b_result_2, result_1, b_result_1, tmp__trace) <@ __gen_matrix_fill_polynomial (
    param_2, b_param_2, param_1, b_param_1);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, ((is_init b_result_2 0 512) /\ (is_init b_result_1 0 536)))]);
    pol <- result_2;
    b_buf <-
    (SBArray2144_536.set_sub8 b_buf 1072
    (BArray536.init_arr (W8.of_int 255) 536));
    buf <- (SBArray2144_536.set_sub8 buf 1072 result_1);
    b_polx4 <-
    (SBArray2048_512.set_sub16 b_polx4 512
    (BArray512.init_arr (W8.of_int 255) 512));
    polx4 <- (SBArray2048_512.set_sub16 polx4 512 pol);
    b_pol <- (SBArray2048_512.get_sub16 b_polx4 768);
    pol <- (SBArray2048_512.get_sub16 polx4 768);
    b_param_0 <- b_pol;
    param_0 <- pol;
    b_param <- (SBArray2144_536.get_sub8 b_buf 1608);
    param <- (SBArray2144_536.get_sub8 buf 1608);
    (result_0, b_result_0, result, b_result, tmp__trace) <@ __gen_matrix_fill_polynomial (
    param_0, b_param_0, param, b_param);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++ tmp__trace);
    trace__gen_matrix_sample_four_polynomials <-
    (trace__gen_matrix_sample_four_polynomials ++
    [(Assert, ((is_init b_result_0 0 512) /\ (is_init b_result 0 536)))]);
    pol <- result_0;
    b_buf <-
    (SBArray2144_536.set_sub8 b_buf 1608
    (BArray536.init_arr (W8.of_int 255) 536));
    buf <- (SBArray2144_536.set_sub8 buf 1608 result);
    b_polx4 <-
    (SBArray2048_512.set_sub16 b_polx4 768
    (BArray512.init_arr (W8.of_int 255) 512));
    polx4 <- (SBArray2048_512.set_sub16 polx4 768 pol);
    return (polx4, b_polx4, buf, b_buf,
           trace__gen_matrix_sample_four_polynomials);
  }
  proc _gen_matrix_avx2 (matrix:BArray8192.t, b_matrix:BArray8192.t,
                         rho:BArray32.t, b_rho:BArray32.t, transposed:W64.t) : 
  BArray8192.t * BArray8192.t * trace = {
    var buf_s:BArray2144.t;
    var buf:BArray2144.t;
    var i:int;
    var pos_entry:W64.t;
    var polx4:BArray2048.t;
    var j:int;
    var param:BArray512.t;
    var result:BArray512.t;
    var param_0:W64.t;
    var param_1:W64.t;
    var param_2:BArray32.t;
    var param_3:BArray2144.t;
    var param_4:BArray2048.t;
    var result_0:BArray2144.t;
    var result_1:BArray2048.t;
    var b_result:BArray512.t;
    var b_param:BArray512.t;
    var b_polx4:BArray2048.t;
    var b_buf:BArray2144.t;
    var b_result_0:BArray2144.t;
    var b_result_1:BArray2048.t;
    var b_param_0:BArray2144.t;
    var b_param_1:BArray2048.t;
    var b_buf_s:BArray2144.t;
    var trace__gen_matrix_avx2:trace;
    b_buf <- witness;
    b_buf_s <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_polx4 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    buf <- witness;
    buf_s <- witness;
    param <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    polx4 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    trace__gen_matrix_avx2 <- [];
    trace__gen_matrix_avx2 <-
    (trace__gen_matrix_avx2 ++
    [(Assert,
     (((is_init b_rho 0 32) /\ ((W64.of_int 0) \ule transposed)) /\
     (transposed \ule (W64.of_int 1))))]);
    b_buf_s <- (BArray2144.init_arr (W8.of_int 0) 2144);
    (* Erased call to spill *)
    b_buf <- b_buf_s;
    buf <- buf_s;
    i <- 0;
    while ((i < 4)) {
      pos_entry <- (W64.of_int (8 * i));
      trace__gen_matrix_avx2 <-
      (trace__gen_matrix_avx2 ++
      [(Assert,
       ((0 <= (((4 * i) * 256) * 2)) /\
       (((((4 * i) * 256) * 2) + 2048) <= 8192)))]);
      b_polx4 <- (SBArray8192_2048.get_sub16 b_matrix ((4 * i) * 256));
      polx4 <- (SBArray8192_2048.get_sub16 matrix ((4 * i) * 256));
      (* Erased call to unspill *)
      b_param_1 <- b_polx4;
      param_4 <- polx4;
      b_param_0 <- b_buf;
      param_3 <- buf;
      param_2 <- rho;
      param_1 <- pos_entry;
      param_0 <- transposed;
      (result_1, b_result_1, result_0, b_result_0, tmp__trace) <@ _gen_matrix_sample_four_polynomials (
      param_4, b_param_1, param_3, b_param_0, param_2,
      (BArray32.init_arr (W8.of_int 255) 32), param_1, param_0);
      trace__gen_matrix_avx2 <- (trace__gen_matrix_avx2 ++ tmp__trace);
      trace__gen_matrix_avx2 <-
      (trace__gen_matrix_avx2 ++ [(Assert, (is_init b_result_1 0 2048))]);
      polx4 <- result_1;
      b_buf <- b_result_0;
      buf <- result_0;
      trace__gen_matrix_avx2 <-
      (trace__gen_matrix_avx2 ++
      [(Assert,
       ((0 <= (((i * 4) * 256) * 2)) /\
       (((((i * 4) * 256) * 2) + 2048) <= 8192)))]);
      b_matrix <-
      (SBArray8192_2048.set_sub16 b_matrix ((i * 4) * 256)
      (BArray2048.init_arr (W8.of_int 255) 2048));
      matrix <- (SBArray8192_2048.set_sub16 matrix ((i * 4) * 256) polx4);
      i <- (i + 1);
    }
    i <- 0;
    while ((i < 4)) {
      j <- 0;
      while ((j < 4)) {
        trace__gen_matrix_avx2 <-
        (trace__gen_matrix_avx2 ++
        [(Assert,
         ((0 <= (((i * 1024) + (j * 256)) * 2)) /\
         (((((i * 1024) + (j * 256)) * 2) + 512) <= 8192)))]);
        trace__gen_matrix_avx2 <-
        (trace__gen_matrix_avx2 ++
        [(Assert,
         ((0 <= (((i * 1024) + (j * 256)) * 2)) /\
         (((((i * 1024) + (j * 256)) * 2) + 512) <= 8192)))]);
        b_param <-
        (SBArray8192_512.get_sub16 b_matrix ((i * 1024) + (j * 256)));
        param <- (SBArray8192_512.get_sub16 matrix ((i * 1024) + (j * 256)));
        (result, b_result, tmp__trace) <@ _nttunpack (param, b_param);
        trace__gen_matrix_avx2 <- (trace__gen_matrix_avx2 ++ tmp__trace);
        trace__gen_matrix_avx2 <-
        (trace__gen_matrix_avx2 ++ [(Assert, (is_init b_result 0 512))]);
        b_matrix <-
        (SBArray8192_512.set_sub16 b_matrix ((i * 1024) + (j * 256))
        (BArray512.init_arr (W8.of_int 255) 512));
        matrix <-
        (SBArray8192_512.set_sub16 matrix ((i * 1024) + (j * 256)) result);
        j <- (j + 1);
      }
      i <- (i + 1);
    }
    return (matrix, b_matrix, trace__gen_matrix_avx2);
  }
  proc __indcpa_keypair (pk:BArray1568.t, b_pk:BArray1568.t, sk:BArray1536.t,
                         b_sk:BArray1536.t, randomnessp:BArray32.t,
                         b_randomnessp:BArray32.t) : BArray1568.t *
                                                     BArray1568.t *
                                                     BArray1536.t *
                                                     BArray1536.t * trace = {
    var i:int;
    var t64:W64.t;
    var inbuf:BArray33.t;
    var buf:BArray64.t;
    var publicseed:BArray32.t;
    var noiseseed:BArray32.t;
    var transposed:W64.t;
    var aa:BArray8192.t;
    var nonce:W8.t;
    var skpv:BArray2048.t;
    var e:BArray2048.t;
    var pkpv:BArray2048.t;
    var param:BArray2048.t;
    var param_0:BArray1536.t;
    var result:BArray1536.t;
    var param_1:BArray2048.t;
    var param_2:BArray1536.t;
    var result_0:BArray1536.t;
    var param_3:BArray2048.t;
    var result_1:BArray2048.t;
    var param_4:BArray2048.t;
    var param_5:BArray2048.t;
    var result_2:BArray2048.t;
    var param_6:BArray512.t;
    var result_3:BArray512.t;
    var param_7:BArray2048.t;
    var param_8:BArray2048.t;
    var param_9:BArray512.t;
    var result_4:BArray512.t;
    var param_10:BArray2048.t;
    var result_5:BArray2048.t;
    var param_11:BArray2048.t;
    var result_6:BArray2048.t;
    var param_12:W8.t;
    var param_13:BArray32.t;
    var param_14:BArray512.t;
    var param_15:BArray512.t;
    var param_16:BArray512.t;
    var param_17:BArray512.t;
    var result_7:BArray512.t;
    var result_8:BArray512.t;
    var result_9:BArray512.t;
    var result_10:BArray512.t;
    var param_18:W8.t;
    var param_19:BArray32.t;
    var param_20:BArray512.t;
    var param_21:BArray512.t;
    var param_22:BArray512.t;
    var param_23:BArray512.t;
    var result_11:BArray512.t;
    var result_12:BArray512.t;
    var result_13:BArray512.t;
    var result_14:BArray512.t;
    var param_24:W64.t;
    var param_25:BArray32.t;
    var param_26:BArray8192.t;
    var result_15:BArray8192.t;
    var param_27:BArray33.t;
    var param_28:BArray64.t;
    var result_16:BArray64.t;
    var b_publicseed:BArray32.t;
    var b_result:BArray1536.t;
    var b_param:BArray1536.t;
    var b_pkpv:BArray2048.t;
    var b_result_0:BArray1536.t;
    var b_param_0:BArray1536.t;
    var b_skpv:BArray2048.t;
    var b_result_1:BArray2048.t;
    var b_result_2:BArray2048.t;
    var b_param_1:BArray2048.t;
    var b_e:BArray2048.t;
    var b_result_3:BArray512.t;
    var b_param_2:BArray512.t;
    var b_result_4:BArray512.t;
    var b_param_3:BArray2048.t;
    var b_param_4:BArray512.t;
    var b_aa:BArray8192.t;
    var b_result_5:BArray2048.t;
    var b_param_5:BArray2048.t;
    var b_result_6:BArray2048.t;
    var b_param_6:BArray2048.t;
    var b_result_7:BArray512.t;
    var b_result_8:BArray512.t;
    var b_result_9:BArray512.t;
    var b_result_10:BArray512.t;
    var b_param_7:BArray32.t;
    var b_param_8:BArray512.t;
    var b_param_9:BArray512.t;
    var b_param_10:BArray512.t;
    var b_param_11:BArray512.t;
    var b_noiseseed:BArray32.t;
    var b_result_11:BArray512.t;
    var b_result_12:BArray512.t;
    var b_result_13:BArray512.t;
    var b_result_14:BArray512.t;
    var b_param_12:BArray32.t;
    var b_param_13:BArray512.t;
    var b_param_14:BArray512.t;
    var b_param_15:BArray512.t;
    var b_param_16:BArray512.t;
    var b_result_15:BArray8192.t;
    var b_param_17:BArray32.t;
    var b_param_18:BArray8192.t;
    var b_buf:BArray64.t;
    var b_result_16:BArray64.t;
    var b_param_19:BArray33.t;
    var b_param_20:BArray64.t;
    var b_inbuf:BArray33.t;
    var trace___indcpa_keypair:trace;
    aa <- witness;
    b_aa <- witness;
    b_buf <- witness;
    b_e <- witness;
    b_inbuf <- witness;
    b_noiseseed <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    b_param_11 <- witness;
    b_param_12 <- witness;
    b_param_13 <- witness;
    b_param_14 <- witness;
    b_param_15 <- witness;
    b_param_16 <- witness;
    b_param_17 <- witness;
    b_param_18 <- witness;
    b_param_19 <- witness;
    b_param_20 <- witness;
    b_pkpv <- witness;
    b_publicseed <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_result_10 <- witness;
    b_result_11 <- witness;
    b_result_12 <- witness;
    b_result_13 <- witness;
    b_result_14 <- witness;
    b_result_15 <- witness;
    b_result_16 <- witness;
    b_skpv <- witness;
    buf <- witness;
    e <- witness;
    inbuf <- witness;
    noiseseed <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    param_15 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_19 <- witness;
    param_20 <- witness;
    param_21 <- witness;
    param_22 <- witness;
    param_23 <- witness;
    param_25 <- witness;
    param_26 <- witness;
    param_27 <- witness;
    param_28 <- witness;
    pkpv <- witness;
    publicseed <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_12 <- witness;
    result_13 <- witness;
    result_14 <- witness;
    result_15 <- witness;
    result_16 <- witness;
    skpv <- witness;
    trace___indcpa_keypair <- [];
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_randomnessp 0 32))]);
    b_publicseed <- (BArray32.init_arr (W8.of_int 0) 32);
    b_noiseseed <- (BArray32.init_arr (W8.of_int 0) 32);
    b_inbuf <- (BArray33.init_arr (W8.of_int 0) 33);
    b_buf <- (BArray64.init_arr (W8.of_int 0) 64);
    b_skpv <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_e <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_pkpv <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_aa <- (BArray8192.init_arr (W8.of_int 0) 8192);
    (* Erased call to spill *)
    i <- 0;
    while ((i < 4)) {
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 32)))]);
      t64 <- (BArray32.get64 randomnessp i);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 33)))]);
      b_inbuf <-
      (BArray33.set64d b_inbuf (i * 8) (W64.of_int 18446744073709551615));
      inbuf <- (BArray33.set64 inbuf i t64);
      i <- (i + 1);
    }
    b_inbuf <- (BArray33.set8d b_inbuf 32 (W8.of_int 255));
    inbuf <- (BArray33.set8 inbuf 32 (W8.of_int 4));
    b_param_20 <- b_buf;
    param_28 <- buf;
    b_param_19 <- b_inbuf;
    param_27 <- inbuf;
    (result_16, b_result_16, tmp__trace) <@ _sha3_512A_A33 (param_28,
    b_param_20, param_27, b_param_19);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_16 0 64))]);
    buf <- result_16;
    i <- 0;
    while ((i < 4)) {
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 64)))]);
      t64 <- (BArray64.get64 buf i);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 32)))]);
      b_publicseed <-
      (BArray32.set64d b_publicseed (i * 8) (W64.of_int 18446744073709551615)
      );
      publicseed <- (BArray32.set64 publicseed i t64);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= ((i + 4) * 8)) /\ ((((i + 4) * 8) + 8) <= 64)))]);
      t64 <- (BArray64.get64 buf (i + 4));
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 32)))]);
      b_noiseseed <-
      (BArray32.set64d b_noiseseed (i * 8) (W64.of_int 18446744073709551615));
      noiseseed <- (BArray32.set64 noiseseed i t64);
      i <- (i + 1);
    }
    transposed <- (W64.of_int 0);
    b_param_18 <- b_aa;
    param_26 <- aa;
    b_param_17 <- b_publicseed;
    param_25 <- publicseed;
    param_24 <- transposed;
    (result_15, b_result_15, tmp__trace) <@ _gen_matrix_avx2 (param_26,
    b_param_18, param_25, b_param_17, param_24);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_15 0 8192))]);
    b_aa <- (BArray8192.init_arr (W8.of_int 255) 8192);
    aa <- result_15;
    nonce <- (W8.of_int 0);
    b_param_16 <- (SBArray2048_512.get_sub16 b_skpv 0);
    param_23 <- (SBArray2048_512.get_sub16 skpv 0);
    b_param_15 <- (SBArray2048_512.get_sub16 b_skpv 256);
    param_22 <- (SBArray2048_512.get_sub16 skpv 256);
    b_param_14 <- (SBArray2048_512.get_sub16 b_skpv 512);
    param_21 <- (SBArray2048_512.get_sub16 skpv 512);
    b_param_13 <- (SBArray2048_512.get_sub16 b_skpv 768);
    param_20 <- (SBArray2048_512.get_sub16 skpv 768);
    b_param_12 <- b_noiseseed;
    param_19 <- noiseseed;
    param_18 <- nonce;
    (result_14, b_result_14, result_13, b_result_13, result_12, b_result_12,
    result_11, b_result_11, tmp__trace) <@ _poly_getnoise_eta1_4x (param_23,
    b_param_16, param_22, b_param_15, param_21, b_param_14, param_20,
    b_param_13, param_19, b_param_12, param_18);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++
    [(Assert,
     ((((is_init b_result_14 0 512) /\ (is_init b_result_13 0 512)) /\
      (is_init b_result_12 0 512)) /\
     (is_init b_result_11 0 512)))]);
    b_skpv <-
    (SBArray2048_512.set_sub16 b_skpv 0
    (BArray512.init_arr (W8.of_int 255) 512));
    skpv <- (SBArray2048_512.set_sub16 skpv 0 result_14);
    b_skpv <-
    (SBArray2048_512.set_sub16 b_skpv 256
    (BArray512.init_arr (W8.of_int 255) 512));
    skpv <- (SBArray2048_512.set_sub16 skpv 256 result_13);
    b_skpv <-
    (SBArray2048_512.set_sub16 b_skpv 512
    (BArray512.init_arr (W8.of_int 255) 512));
    skpv <- (SBArray2048_512.set_sub16 skpv 512 result_12);
    b_skpv <-
    (SBArray2048_512.set_sub16 b_skpv 768
    (BArray512.init_arr (W8.of_int 255) 512));
    skpv <- (SBArray2048_512.set_sub16 skpv 768 result_11);
    nonce <- (W8.of_int 4);
    b_param_11 <- (SBArray2048_512.get_sub16 b_e 0);
    param_17 <- (SBArray2048_512.get_sub16 e 0);
    b_param_10 <- (SBArray2048_512.get_sub16 b_e 256);
    param_16 <- (SBArray2048_512.get_sub16 e 256);
    b_param_9 <- (SBArray2048_512.get_sub16 b_e 512);
    param_15 <- (SBArray2048_512.get_sub16 e 512);
    b_param_8 <- (SBArray2048_512.get_sub16 b_e 768);
    param_14 <- (SBArray2048_512.get_sub16 e 768);
    b_param_7 <- b_noiseseed;
    param_13 <- noiseseed;
    param_12 <- nonce;
    (result_10, b_result_10, result_9, b_result_9, result_8, b_result_8,
    result_7, b_result_7, tmp__trace) <@ _poly_getnoise_eta1_4x (param_17,
    b_param_11, param_16, b_param_10, param_15, b_param_9, param_14,
    b_param_8, param_13, b_param_7, param_12);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++
    [(Assert,
     ((((is_init b_result_10 0 512) /\ (is_init b_result_9 0 512)) /\
      (is_init b_result_8 0 512)) /\
     (is_init b_result_7 0 512)))]);
    b_e <-
    (SBArray2048_512.set_sub16 b_e 0 (BArray512.init_arr (W8.of_int 255) 512)
    );
    e <- (SBArray2048_512.set_sub16 e 0 result_10);
    b_e <-
    (SBArray2048_512.set_sub16 b_e 256
    (BArray512.init_arr (W8.of_int 255) 512));
    e <- (SBArray2048_512.set_sub16 e 256 result_9);
    b_e <-
    (SBArray2048_512.set_sub16 b_e 512
    (BArray512.init_arr (W8.of_int 255) 512));
    e <- (SBArray2048_512.set_sub16 e 512 result_8);
    b_e <-
    (SBArray2048_512.set_sub16 b_e 768
    (BArray512.init_arr (W8.of_int 255) 512));
    e <- (SBArray2048_512.set_sub16 e 768 result_7);
    b_param_6 <- b_skpv;
    param_11 <- skpv;
    (result_6, b_result_6, tmp__trace) <@ __polyvec_ntt (param_11,
    b_param_6);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_6 0 2048))]);
    skpv <- result_6;
    b_param_5 <- b_e;
    param_10 <- e;
    (result_5, b_result_5, tmp__trace) <@ __polyvec_ntt (param_10,
    b_param_5);
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_5 0 2048))]);
    e <- result_5;
    i <- 0;
    while ((i < 4)) {
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert,
       ((0 <= ((i * 256) * 2)) /\ ((((i * 256) * 2) + 512) <= 2048)))]);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert,
       ((0 <= ((i * 256) * 2)) /\ ((((i * 256) * 2) + 512) <= 2048)))]);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert,
       ((0 <= ((i * 1024) * 2)) /\ ((((i * 1024) * 2) + 2048) <= 8192)))]);
      b_param_4 <- (SBArray2048_512.get_sub16 b_pkpv (i * 256));
      param_9 <- (SBArray2048_512.get_sub16 pkpv (i * 256));
      b_param_3 <- (SBArray8192_2048.get_sub16 b_aa (i * 1024));
      param_8 <- (SBArray8192_2048.get_sub16 aa (i * 1024));
      param_7 <- skpv;
      (result_4, b_result_4, tmp__trace) <@ __polyvec_pointwise_acc (
      param_9, b_param_4, param_8, b_param_3, param_7,
      (BArray2048.init_arr (W8.of_int 255) 2048));
      trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++ [(Assert, (is_init b_result_4 0 512))]);
      b_pkpv <-
      (SBArray2048_512.set_sub16 b_pkpv (i * 256)
      (BArray512.init_arr (W8.of_int 255) 512));
      pkpv <- (SBArray2048_512.set_sub16 pkpv (i * 256) result_4);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert,
       ((0 <= ((i * 256) * 2)) /\ ((((i * 256) * 2) + 512) <= 2048)))]);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert,
       ((0 <= ((i * 256) * 2)) /\ ((((i * 256) * 2) + 512) <= 2048)))]);
      b_param_2 <- (SBArray2048_512.get_sub16 b_pkpv (i * 256));
      param_6 <- (SBArray2048_512.get_sub16 pkpv (i * 256));
      (result_3, b_result_3, tmp__trace) <@ _poly_frommont (param_6,
      b_param_2);
      trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++ [(Assert, (is_init b_result_3 0 512))]);
      b_pkpv <-
      (SBArray2048_512.set_sub16 b_pkpv (i * 256)
      (BArray512.init_arr (W8.of_int 255) 512));
      pkpv <- (SBArray2048_512.set_sub16 pkpv (i * 256) result_3);
      i <- (i + 1);
    }
    b_param_1 <- b_pkpv;
    param_5 <- pkpv;
    param_4 <- e;
    (result_2, b_result_2, tmp__trace) <@ __polyvec_add2 (param_5, b_param_1,
    param_4, (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_2 0 2048))]);
    pkpv <- result_2;
    param_3 <- pkpv;
    (result_1, b_result_1, tmp__trace) <@ __polyvec_reduce (param_3,
    (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_1 0 2048))]);
    pkpv <- result_1;
    (* Erased call to unspill *)
    b_param_0 <- b_sk;
    param_2 <- sk;
    param_1 <- skpv;
    (result_0, b_result_0, tmp__trace) <@ __i_polyvec_tobytes (param_2,
    b_param_0, param_1, (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result_0 0 1536))]);
    sk <- result_0;
    b_param <- (SBArray1568_1536.get_sub8 b_pk 0);
    param_0 <- (SBArray1568_1536.get_sub8 pk 0);
    param <- pkpv;
    (result, b_result, tmp__trace) <@ __i_polyvec_tobytes (param_0, b_param,
    param, (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_keypair <- (trace___indcpa_keypair ++ tmp__trace);
    trace___indcpa_keypair <-
    (trace___indcpa_keypair ++ [(Assert, (is_init b_result 0 1536))]);
    b_pk <-
    (SBArray1568_1536.set_sub8 b_pk 0
    (BArray1536.init_arr (W8.of_int 255) 1536));
    pk <- (SBArray1568_1536.set_sub8 pk 0 result);
    i <- 0;
    while ((i < 4)) {
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 32)))]);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, (is_init b_publicseed (i * 8) 8))]);
      t64 <- (BArray32.get64 publicseed i);
      trace___indcpa_keypair <-
      (trace___indcpa_keypair ++
      [(Assert, ((0 <= ((i + 192) * 8)) /\ ((((i + 192) * 8) + 8) <= 1568)))]);
      b_pk <-
      (BArray1568.set64d b_pk ((i + 192) * 8)
      (W64.of_int 18446744073709551615));
      pk <- (BArray1568.set64d pk ((i + 192) * 8) t64);
      i <- (i + 1);
    }
    b_sk <- (BArray1536.init_arr (W8.of_int 255) 1536);
    return (pk, b_pk, sk, b_sk, trace___indcpa_keypair);
  }
  proc __indcpa_enc (ct:BArray1568.t, b_ct:BArray1568.t, msgp:BArray32.t,
                     b_msgp:BArray32.t, pk:BArray1568.t, b_pk:BArray1568.t,
                     noiseseed:BArray32.t, b_noiseseed:BArray32.t) : 
  BArray1568.t * BArray1568.t * trace = {
    var pkpv:BArray2048.t;
    var w:int;
    var t64:W64.t;
    var publicseed:BArray32.t;
    var k:BArray512.t;
    var transposed:W64.t;
    var aat:BArray8192.t;
    var nonce:W8.t;
    var sp_0:BArray2048.t;
    var ep:BArray2048.t;
    var epp:BArray512.t;
    var bp:BArray2048.t;
    var v:BArray512.t;
    var param:BArray512.t;
    var param_0:BArray160.t;
    var result:BArray512.t;
    var result_0:BArray160.t;
    var param_1:BArray2048.t;
    var param_2:BArray1410.t;
    var result_1:BArray1410.t;
    var param_3:BArray512.t;
    var result_2:BArray512.t;
    var param_4:BArray2048.t;
    var result_3:BArray2048.t;
    var param_5:BArray512.t;
    var param_6:BArray512.t;
    var result_4:BArray512.t;
    var param_7:BArray512.t;
    var param_8:BArray512.t;
    var result_5:BArray512.t;
    var param_9:BArray2048.t;
    var param_10:BArray2048.t;
    var result_6:BArray2048.t;
    var param_11:BArray512.t;
    var result_7:BArray512.t;
    var param_12:BArray2048.t;
    var result_8:BArray2048.t;
    var param_13:BArray2048.t;
    var param_14:BArray2048.t;
    var param_15:BArray512.t;
    var result_9:BArray512.t;
    var param_16:BArray2048.t;
    var param_17:BArray2048.t;
    var param_18:BArray512.t;
    var result_10:BArray512.t;
    var param_19:BArray2048.t;
    var result_11:BArray2048.t;
    var param_20:W8.t;
    var param_21:BArray32.t;
    var param_22:BArray512.t;
    var result_12:BArray512.t;
    var param_23:W8.t;
    var param_24:BArray32.t;
    var param_25:BArray512.t;
    var param_26:BArray512.t;
    var param_27:BArray512.t;
    var param_28:BArray512.t;
    var result_13:BArray512.t;
    var result_14:BArray512.t;
    var result_15:BArray512.t;
    var result_16:BArray512.t;
    var param_29:W8.t;
    var param_30:BArray32.t;
    var param_31:BArray512.t;
    var param_32:BArray512.t;
    var param_33:BArray512.t;
    var param_34:BArray512.t;
    var result_17:BArray512.t;
    var result_18:BArray512.t;
    var result_19:BArray512.t;
    var result_20:BArray512.t;
    var param_35:W64.t;
    var param_36:BArray32.t;
    var param_37:BArray8192.t;
    var result_21:BArray8192.t;
    var param_38:BArray32.t;
    var param_39:BArray512.t;
    var result_22:BArray512.t;
    var param_40:BArray1536.t;
    var result_23:BArray2048.t;
    var b_v:BArray512.t;
    var b_result:BArray512.t;
    var b_result_0:BArray160.t;
    var b_param:BArray160.t;
    var b_result_1:BArray1410.t;
    var b_param_0:BArray1410.t;
    var b_bp:BArray2048.t;
    var b_result_2:BArray512.t;
    var b_result_3:BArray2048.t;
    var b_result_4:BArray512.t;
    var b_k:BArray512.t;
    var b_result_5:BArray512.t;
    var b_epp:BArray512.t;
    var b_result_6:BArray2048.t;
    var b_param_1:BArray2048.t;
    var b_ep:BArray2048.t;
    var b_result_7:BArray512.t;
    var b_result_8:BArray2048.t;
    var b_param_2:BArray2048.t;
    var b_result_9:BArray512.t;
    var b_param_3:BArray512.t;
    var b_sp:BArray2048.t;
    var b_result_10:BArray512.t;
    var b_param_4:BArray2048.t;
    var b_param_5:BArray512.t;
    var b_aat:BArray8192.t;
    var b_result_11:BArray2048.t;
    var b_param_6:BArray2048.t;
    var b_result_12:BArray512.t;
    var b_param_7:BArray512.t;
    var b_result_13:BArray512.t;
    var b_result_14:BArray512.t;
    var b_result_15:BArray512.t;
    var b_result_16:BArray512.t;
    var b_param_8:BArray512.t;
    var b_param_9:BArray512.t;
    var b_param_10:BArray512.t;
    var b_param_11:BArray512.t;
    var b_result_17:BArray512.t;
    var b_result_18:BArray512.t;
    var b_result_19:BArray512.t;
    var b_result_20:BArray512.t;
    var b_param_12:BArray512.t;
    var b_param_13:BArray512.t;
    var b_param_14:BArray512.t;
    var b_param_15:BArray512.t;
    var b_result_21:BArray8192.t;
    var b_param_16:BArray32.t;
    var b_param_17:BArray8192.t;
    var b_publicseed:BArray32.t;
    var b_result_22:BArray512.t;
    var b_param_18:BArray512.t;
    var b_result_23:BArray2048.t;
    var b_param_19:BArray1536.t;
    var trace___indcpa_enc:trace;
    aat <- witness;
    b_aat <- witness;
    b_bp <- witness;
    b_ep <- witness;
    b_epp <- witness;
    b_k <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_param_10 <- witness;
    b_param_11 <- witness;
    b_param_12 <- witness;
    b_param_13 <- witness;
    b_param_14 <- witness;
    b_param_15 <- witness;
    b_param_16 <- witness;
    b_param_17 <- witness;
    b_param_18 <- witness;
    b_param_19 <- witness;
    b_publicseed <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_result_9 <- witness;
    b_result_10 <- witness;
    b_result_11 <- witness;
    b_result_12 <- witness;
    b_result_13 <- witness;
    b_result_14 <- witness;
    b_result_15 <- witness;
    b_result_16 <- witness;
    b_result_17 <- witness;
    b_result_18 <- witness;
    b_result_19 <- witness;
    b_result_20 <- witness;
    b_result_21 <- witness;
    b_result_22 <- witness;
    b_result_23 <- witness;
    b_sp <- witness;
    b_v <- witness;
    bp <- witness;
    ep <- witness;
    epp <- witness;
    k <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    param_15 <- witness;
    param_16 <- witness;
    param_17 <- witness;
    param_18 <- witness;
    param_19 <- witness;
    param_21 <- witness;
    param_22 <- witness;
    param_24 <- witness;
    param_25 <- witness;
    param_26 <- witness;
    param_27 <- witness;
    param_28 <- witness;
    param_30 <- witness;
    param_31 <- witness;
    param_32 <- witness;
    param_33 <- witness;
    param_34 <- witness;
    param_36 <- witness;
    param_37 <- witness;
    param_38 <- witness;
    param_39 <- witness;
    param_40 <- witness;
    pkpv <- witness;
    publicseed <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    result_9 <- witness;
    result_10 <- witness;
    result_11 <- witness;
    result_12 <- witness;
    result_13 <- witness;
    result_14 <- witness;
    result_15 <- witness;
    result_16 <- witness;
    result_17 <- witness;
    result_18 <- witness;
    result_19 <- witness;
    result_20 <- witness;
    result_21 <- witness;
    result_22 <- witness;
    result_23 <- witness;
    sp_0 <- witness;
    v <- witness;
    trace___indcpa_enc <- [];
    trace___indcpa_enc <-
    (trace___indcpa_enc ++
    [(Assert,
     (((is_init b_msgp 0 32) /\ (is_init b_pk 0 1568)) /\
     (is_init b_noiseseed 0 32)))]);
    b_publicseed <- (BArray32.init_arr (W8.of_int 0) 32);
    b_k <- (BArray512.init_arr (W8.of_int 0) 512);
    b_epp <- (BArray512.init_arr (W8.of_int 0) 512);
    b_v <- (BArray512.init_arr (W8.of_int 0) 512);
    b_sp <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_ep <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_bp <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_aat <- (BArray8192.init_arr (W8.of_int 0) 8192);
    (* Erased call to spill *)
    b_param_19 <- (SBArray1568_1536.get_sub8 b_pk 0);
    param_40 <- (SBArray1568_1536.get_sub8 pk 0);
    (result_23, b_result_23, tmp__trace) <@ __i_polyvec_frombytes (param_40,
    b_param_19);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_23 0 2048))]);
    pkpv <- result_23;
    w <- 0;
    while ((w < 4)) {
      trace___indcpa_enc <-
      (trace___indcpa_enc ++
      [(Assert, ((0 <= ((192 + w) * 8)) /\ ((((192 + w) * 8) + 8) <= 1568)))]);
      t64 <- (BArray1568.get64d pk ((192 + w) * 8));
      trace___indcpa_enc <-
      (trace___indcpa_enc ++
      [(Assert, ((0 <= (w * 8)) /\ (((w * 8) + 8) <= 32)))]);
      b_publicseed <-
      (BArray32.set64d b_publicseed (w * 8) (W64.of_int 18446744073709551615)
      );
      publicseed <- (BArray32.set64 publicseed w t64);
      w <- (w + 1);
    }
    b_param_18 <- b_k;
    param_39 <- k;
    param_38 <- msgp;
    (result_22, b_result_22, tmp__trace) <@ _i_poly_frommsg (param_39,
    b_param_18, param_38, (BArray32.init_arr (W8.of_int 255) 32));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_22 0 512))]);
    k <- result_22;
    transposed <- (W64.of_int 1);
    b_param_17 <- b_aat;
    param_37 <- aat;
    b_param_16 <- b_publicseed;
    param_36 <- publicseed;
    param_35 <- transposed;
    (result_21, b_result_21, tmp__trace) <@ _gen_matrix_avx2 (param_37,
    b_param_17, param_36, b_param_16, param_35);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_21 0 8192))]);
    b_aat <- (BArray8192.init_arr (W8.of_int 255) 8192);
    aat <- result_21;
    nonce <- (W8.of_int 0);
    b_param_15 <- (SBArray2048_512.get_sub16 b_sp 0);
    param_34 <- (SBArray2048_512.get_sub16 sp_0 0);
    b_param_14 <- (SBArray2048_512.get_sub16 b_sp 256);
    param_33 <- (SBArray2048_512.get_sub16 sp_0 256);
    b_param_13 <- (SBArray2048_512.get_sub16 b_sp 512);
    param_32 <- (SBArray2048_512.get_sub16 sp_0 512);
    b_param_12 <- (SBArray2048_512.get_sub16 b_sp 768);
    param_31 <- (SBArray2048_512.get_sub16 sp_0 768);
    param_30 <- noiseseed;
    param_29 <- nonce;
    (result_20, b_result_20, result_19, b_result_19, result_18, b_result_18,
    result_17, b_result_17, tmp__trace) <@ _poly_getnoise_eta1_4x (param_34,
    b_param_15, param_33, b_param_14, param_32, b_param_13, param_31,
    b_param_12, param_30, (BArray32.init_arr (W8.of_int 255) 32), param_29);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++
    [(Assert,
     ((((is_init b_result_20 0 512) /\ (is_init b_result_19 0 512)) /\
      (is_init b_result_18 0 512)) /\
     (is_init b_result_17 0 512)))]);
    b_sp <-
    (SBArray2048_512.set_sub16 b_sp 0
    (BArray512.init_arr (W8.of_int 255) 512));
    sp_0 <- (SBArray2048_512.set_sub16 sp_0 0 result_20);
    b_sp <-
    (SBArray2048_512.set_sub16 b_sp 256
    (BArray512.init_arr (W8.of_int 255) 512));
    sp_0 <- (SBArray2048_512.set_sub16 sp_0 256 result_19);
    b_sp <-
    (SBArray2048_512.set_sub16 b_sp 512
    (BArray512.init_arr (W8.of_int 255) 512));
    sp_0 <- (SBArray2048_512.set_sub16 sp_0 512 result_18);
    b_sp <-
    (SBArray2048_512.set_sub16 b_sp 768
    (BArray512.init_arr (W8.of_int 255) 512));
    sp_0 <- (SBArray2048_512.set_sub16 sp_0 768 result_17);
    nonce <- (W8.of_int 4);
    b_param_11 <- (SBArray2048_512.get_sub16 b_ep 0);
    param_28 <- (SBArray2048_512.get_sub16 ep 0);
    b_param_10 <- (SBArray2048_512.get_sub16 b_ep 256);
    param_27 <- (SBArray2048_512.get_sub16 ep 256);
    b_param_9 <- (SBArray2048_512.get_sub16 b_ep 512);
    param_26 <- (SBArray2048_512.get_sub16 ep 512);
    b_param_8 <- (SBArray2048_512.get_sub16 b_ep 768);
    param_25 <- (SBArray2048_512.get_sub16 ep 768);
    param_24 <- noiseseed;
    param_23 <- nonce;
    (result_16, b_result_16, result_15, b_result_15, result_14, b_result_14,
    result_13, b_result_13, tmp__trace) <@ _poly_getnoise_eta1_4x (param_28,
    b_param_11, param_27, b_param_10, param_26, b_param_9, param_25,
    b_param_8, param_24, (BArray32.init_arr (W8.of_int 255) 32), param_23);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++
    [(Assert,
     ((((is_init b_result_16 0 512) /\ (is_init b_result_15 0 512)) /\
      (is_init b_result_14 0 512)) /\
     (is_init b_result_13 0 512)))]);
    b_ep <-
    (SBArray2048_512.set_sub16 b_ep 0
    (BArray512.init_arr (W8.of_int 255) 512));
    ep <- (SBArray2048_512.set_sub16 ep 0 result_16);
    b_ep <-
    (SBArray2048_512.set_sub16 b_ep 256
    (BArray512.init_arr (W8.of_int 255) 512));
    ep <- (SBArray2048_512.set_sub16 ep 256 result_15);
    b_ep <-
    (SBArray2048_512.set_sub16 b_ep 512
    (BArray512.init_arr (W8.of_int 255) 512));
    ep <- (SBArray2048_512.set_sub16 ep 512 result_14);
    b_ep <-
    (SBArray2048_512.set_sub16 b_ep 768
    (BArray512.init_arr (W8.of_int 255) 512));
    ep <- (SBArray2048_512.set_sub16 ep 768 result_13);
    nonce <- (W8.of_int 8);
    b_param_7 <- b_epp;
    param_22 <- epp;
    param_21 <- noiseseed;
    param_20 <- nonce;
    (result_12, b_result_12, tmp__trace) <@ _poly_getnoise_eta2 (param_22,
    b_param_7, param_21, (BArray32.init_arr (W8.of_int 255) 32), param_20);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_12 0 512))]);
    epp <- result_12;
    b_param_6 <- b_sp;
    param_19 <- sp_0;
    (result_11, b_result_11, tmp__trace) <@ __polyvec_ntt (param_19,
    b_param_6);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_11 0 2048))]);
    sp_0 <- result_11;
    w <- 0;
    while ((w < 4)) {
      trace___indcpa_enc <-
      (trace___indcpa_enc ++
      [(Assert,
       ((0 <= ((w * 256) * 2)) /\ ((((w * 256) * 2) + 512) <= 2048)))]);
      trace___indcpa_enc <-
      (trace___indcpa_enc ++
      [(Assert,
       ((0 <= ((w * 256) * 2)) /\ ((((w * 256) * 2) + 512) <= 2048)))]);
      trace___indcpa_enc <-
      (trace___indcpa_enc ++
      [(Assert,
       ((0 <= ((w * 1024) * 2)) /\ ((((w * 1024) * 2) + 2048) <= 8192)))]);
      b_param_5 <- (SBArray2048_512.get_sub16 b_bp (w * 256));
      param_18 <- (SBArray2048_512.get_sub16 bp (w * 256));
      b_param_4 <- (SBArray8192_2048.get_sub16 b_aat (w * 1024));
      param_17 <- (SBArray8192_2048.get_sub16 aat (w * 1024));
      param_16 <- sp_0;
      (result_10, b_result_10, tmp__trace) <@ __polyvec_pointwise_acc (
      param_18, b_param_5, param_17, b_param_4, param_16,
      (BArray2048.init_arr (W8.of_int 255) 2048));
      trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
      trace___indcpa_enc <-
      (trace___indcpa_enc ++ [(Assert, (is_init b_result_10 0 512))]);
      b_bp <-
      (SBArray2048_512.set_sub16 b_bp (w * 256)
      (BArray512.init_arr (W8.of_int 255) 512));
      bp <- (SBArray2048_512.set_sub16 bp (w * 256) result_10);
      w <- (w + 1);
    }
    b_param_3 <- b_v;
    param_15 <- v;
    param_14 <- pkpv;
    param_13 <- sp_0;
    (result_9, b_result_9, tmp__trace) <@ __polyvec_pointwise_acc (param_15,
    b_param_3, param_14, (BArray2048.init_arr (W8.of_int 255) 2048),
    param_13, (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_9 0 512))]);
    v <- result_9;
    b_param_2 <- b_bp;
    param_12 <- bp;
    (result_8, b_result_8, tmp__trace) <@ __polyvec_invntt (param_12,
    b_param_2);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_8 0 2048))]);
    bp <- result_8;
    param_11 <- v;
    (result_7, b_result_7, tmp__trace) <@ _poly_invntt (param_11,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_7 0 512))]);
    v <- result_7;
    param_10 <- bp;
    b_param_1 <- b_ep;
    param_9 <- ep;
    (result_6, b_result_6, tmp__trace) <@ __polyvec_add2 (param_10,
    (BArray2048.init_arr (W8.of_int 255) 2048), param_9, b_param_1);
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_6 0 2048))]);
    bp <- result_6;
    param_8 <- v;
    param_7 <- epp;
    (result_5, b_result_5, tmp__trace) <@ _poly_add2 (param_8,
    (BArray512.init_arr (W8.of_int 255) 512), param_7,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_5 0 512))]);
    v <- result_5;
    param_6 <- v;
    param_5 <- k;
    (result_4, b_result_4, tmp__trace) <@ _poly_add2 (param_6,
    (BArray512.init_arr (W8.of_int 255) 512), param_5,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_4 0 512))]);
    v <- result_4;
    param_4 <- bp;
    (result_3, b_result_3, tmp__trace) <@ __polyvec_reduce (param_4,
    (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_3 0 2048))]);
    bp <- result_3;
    param_3 <- v;
    (result_2, b_result_2, tmp__trace) <@ __poly_reduce (param_3,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_2 0 512))]);
    v <- result_2;
    (* Erased call to unspill *)
    b_param_0 <- (SBArray1568_1410.get_sub8 b_ct 0);
    param_2 <- (SBArray1568_1410.get_sub8 ct 0);
    param_1 <- bp;
    (result_1, b_result_1, tmp__trace) <@ __i_polyvec_compress (param_2,
    b_param_0, param_1, (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++ [(Assert, (is_init b_result_1 0 1410))]);
    b_ct <-
    (SBArray1568_1410.set_sub8 b_ct 0
    (BArray1410.init_arr (W8.of_int 255) 1410));
    ct <- (SBArray1568_1410.set_sub8 ct 0 result_1);
    b_param <- (SBArray1568_160.get_sub8 b_ct 1408);
    param_0 <- (SBArray1568_160.get_sub8 ct 1408);
    param <- v;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ _i_poly_compress (
    param_0, b_param, param, (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_enc <- (trace___indcpa_enc ++ tmp__trace);
    trace___indcpa_enc <-
    (trace___indcpa_enc ++
    [(Assert, ((is_init b_result_0 0 160) /\ (is_init b_result 0 512)))]);
    b_ct <-
    (SBArray1568_160.set_sub8 b_ct 1408
    (BArray160.init_arr (W8.of_int 255) 160));
    ct <- (SBArray1568_160.set_sub8 ct 1408 result_0);
    return (ct, b_ct, trace___indcpa_enc);
  }
  proc __indcpa_dec (msgp:BArray32.t, b_msgp:BArray32.t, ct:BArray1568.t,
                     b_ct:BArray1568.t, sk:BArray1536.t, b_sk:BArray1536.t) : 
  BArray32.t * BArray32.t * trace = {
    var bp:BArray2048.t;
    var v:BArray512.t;
    var skpv:BArray2048.t;
    var t:BArray512.t;
    var mp:BArray512.t;
    var param:BArray512.t;
    var param_0:BArray32.t;
    var result:BArray512.t;
    var result_0:BArray32.t;
    var param_1:BArray512.t;
    var result_1:BArray512.t;
    var param_2:BArray512.t;
    var param_3:BArray512.t;
    var param_4:BArray512.t;
    var result_2:BArray512.t;
    var param_5:BArray512.t;
    var result_3:BArray512.t;
    var param_6:BArray2048.t;
    var param_7:BArray2048.t;
    var param_8:BArray512.t;
    var result_4:BArray512.t;
    var param_9:BArray2048.t;
    var result_5:BArray2048.t;
    var param_10:BArray1536.t;
    var result_6:BArray2048.t;
    var param_11:BArray160.t;
    var param_12:BArray512.t;
    var result_7:BArray512.t;
    var param_13:BArray1568.t;
    var param_14:BArray2048.t;
    var result_8:BArray2048.t;
    var b_mp:BArray512.t;
    var b_result:BArray512.t;
    var b_result_0:BArray32.t;
    var b_param:BArray32.t;
    var b_result_1:BArray512.t;
    var b_result_2:BArray512.t;
    var b_param_0:BArray512.t;
    var b_t:BArray512.t;
    var b_v:BArray512.t;
    var b_result_3:BArray512.t;
    var b_result_4:BArray512.t;
    var b_param_1:BArray512.t;
    var b_bp:BArray2048.t;
    var b_result_5:BArray2048.t;
    var b_result_6:BArray2048.t;
    var b_result_7:BArray512.t;
    var b_param_2:BArray160.t;
    var b_param_3:BArray512.t;
    var b_result_8:BArray2048.t;
    var b_param_4:BArray2048.t;
    var trace___indcpa_dec:trace;
    b_bp <- witness;
    b_mp <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_result_4 <- witness;
    b_result_5 <- witness;
    b_result_6 <- witness;
    b_result_7 <- witness;
    b_result_8 <- witness;
    b_t <- witness;
    b_v <- witness;
    bp <- witness;
    mp <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    result_5 <- witness;
    result_6 <- witness;
    result_7 <- witness;
    result_8 <- witness;
    skpv <- witness;
    t <- witness;
    v <- witness;
    trace___indcpa_dec <- [];
    trace___indcpa_dec <-
    (trace___indcpa_dec ++
    [(Assert, ((is_init b_ct 0 1568) /\ (is_init b_sk 0 1536)))]);
    b_v <- (BArray512.init_arr (W8.of_int 0) 512);
    b_t <- (BArray512.init_arr (W8.of_int 0) 512);
    b_mp <- (BArray512.init_arr (W8.of_int 0) 512);
    b_bp <- (BArray2048.init_arr (W8.of_int 0) 2048);
    b_param_4 <- b_bp;
    param_14 <- bp;
    param_13 <- ct;
    (result_8, b_result_8, tmp__trace) <@ __i_polyvec_decompress (param_14,
    b_param_4, param_13, (BArray1568.init_arr (W8.of_int 255) 1568));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_8 0 2048))]);
    bp <- result_8;
    b_param_3 <- b_v;
    param_12 <- v;
    b_param_2 <- (SBArray1568_160.get_sub8 b_ct 1408);
    param_11 <- (SBArray1568_160.get_sub8 ct 1408);
    (result_7, b_result_7, tmp__trace) <@ _i_poly_decompress (param_12,
    b_param_3, param_11, b_param_2);
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_7 0 512))]);
    v <- result_7;
    param_10 <- sk;
    (result_6, b_result_6, tmp__trace) <@ __i_polyvec_frombytes (param_10,
    (BArray1536.init_arr (W8.of_int 255) 1536));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_6 0 2048))]);
    skpv <- result_6;
    param_9 <- bp;
    (result_5, b_result_5, tmp__trace) <@ __polyvec_ntt (param_9,
    (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_5 0 2048))]);
    bp <- result_5;
    b_param_1 <- b_t;
    param_8 <- t;
    param_7 <- skpv;
    param_6 <- bp;
    (result_4, b_result_4, tmp__trace) <@ __polyvec_pointwise_acc (param_8,
    b_param_1, param_7, (BArray2048.init_arr (W8.of_int 255) 2048), param_6,
    (BArray2048.init_arr (W8.of_int 255) 2048));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_4 0 512))]);
    t <- result_4;
    param_5 <- t;
    (result_3, b_result_3, tmp__trace) <@ _poly_invntt (param_5,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_3 0 512))]);
    t <- result_3;
    b_param_0 <- b_mp;
    param_4 <- mp;
    param_3 <- v;
    param_2 <- t;
    (result_2, b_result_2, tmp__trace) <@ _poly_sub (param_4, b_param_0,
    param_3, (BArray512.init_arr (W8.of_int 255) 512), param_2,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_2 0 512))]);
    mp <- result_2;
    param_1 <- mp;
    (result_1, b_result_1, tmp__trace) <@ __poly_reduce (param_1,
    (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++ [(Assert, (is_init b_result_1 0 512))]);
    mp <- result_1;
    b_param <- b_msgp;
    param_0 <- msgp;
    param <- mp;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ _i_poly_tomsg (
    param_0, b_param, param, (BArray512.init_arr (W8.of_int 255) 512));
    trace___indcpa_dec <- (trace___indcpa_dec ++ tmp__trace);
    trace___indcpa_dec <-
    (trace___indcpa_dec ++
    [(Assert, ((is_init b_result_0 0 32) /\ (is_init b_result 0 512)))]);
    msgp <- result_0;
    b_msgp <- (BArray32.init_arr (W8.of_int 255) 32);
    return (msgp, b_msgp, trace___indcpa_dec);
  }
  proc __verify (ct:BArray1568.t, b_ct:BArray1568.t, ctpc:BArray1568.t,
                 b_ctpc:BArray1568.t) : W64.t * trace = {
    var cnd:W64.t;
    var t64:W64.t;
    var h:W256.t;
    var i:int;
    var f:W256.t;
    var g:W256.t;
    var zf:bool;
    var  _0:bool;
    var  _1:bool;
    var  _2:bool;
    var  _3:bool;
    var trace___verify:trace;
    trace___verify <- [];
    trace___verify <- (trace___verify ++ [(Assert, (is_init b_ct 0 1568))]);
    trace___verify <-
    (trace___verify ++ [(Assert, (is_init b_ctpc 0 1568))]);
    cnd <- (W64.of_int 0);
    t64 <- (W64.of_int 1);
    h <- (set0_256);
    i <- 0;
    while ((i < 49)) {
      trace___verify <-
      (trace___verify ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 1568)))]);
      f <- (BArray1568.get256d ctpc (32 * i));
      trace___verify <-
      (trace___verify ++
      [(Assert, ((0 <= (32 * i)) /\ (((32 * i) + 32) <= 1568)))]);
      g <- (BArray1568.get256d ct (32 * i));
      f <- (VPXOR_256 f g);
      h <- (VPOR_256 h f);
      i <- (i + 1);
    }
    ( _0,  _1,  _2,  _3, zf) <- (VPTEST_256 h h);
    cnd <- ((! zf) ? t64 : cnd);
    return (cnd, trace___verify);
  }
  proc __cmov (dst:BArray32.t, b_dst:BArray32.t, src:BArray32.t,
               b_src:BArray32.t, cnd:W64.t) : BArray32.t * BArray32.t * trace = {
    var scnd:W64.t;
    var m:W256.t;
    var f:W256.t;
    var g:W256.t;
    var trace___cmov:trace;
    trace___cmov <- [];
    trace___cmov <- (trace___cmov ++ [(Assert, (is_init b_dst 0 32))]);
    trace___cmov <- (trace___cmov ++ [(Assert, (is_init b_src 0 32))]);
    cnd <- (- cnd);
    scnd <- cnd;
    m <- (VPBROADCAST_4u64 scnd);
    f <- (BArray32.get256d src 0);
    g <- (BArray32.get256d dst 0);
    f <- (BLENDV_32u8 f g m);
    dst <- (BArray32.set256d dst 0 f);
    b_dst <- (BArray32.init_arr (W8.of_int 255) 32);
    return (dst, b_dst, trace___cmov);
  }
  proc __crypto_kem_keypair_jazz (pk:BArray1568.t, b_pk:BArray1568.t,
                                  sk:BArray3168.t, b_sk:BArray3168.t,
                                  randomnessp:BArray64.t,
                                  b_randomnessp:BArray64.t) : BArray1568.t *
                                                              BArray1568.t *
                                                              BArray3168.t *
                                                              BArray3168.t *
                                                              trace = {
    var s_randomnessp:BArray64.t;
    var randomnessp1:BArray32.t;
    var skcpa:BArray1536.t;
    var sk_s:BArray3168.t;
    var i:int;
    var t64:W64.t;
    var param:BArray1568.t;
    var param_0:BArray32.t;
    var result:BArray32.t;
    var param_1:BArray32.t;
    var param_2:BArray1536.t;
    var param_3:BArray1568.t;
    var result_0:BArray1536.t;
    var result_1:BArray1568.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var b_skcpa:BArray1536.t;
    var b_sk_s:BArray3168.t;
    var b_result_0:BArray1536.t;
    var b_result_1:BArray1568.t;
    var b_param_0:BArray32.t;
    var b_param_1:BArray1536.t;
    var b_param_2:BArray1568.t;
    var b_randomnessp1:BArray32.t;
    var trace___crypto_kem_keypair_jazz:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_randomnessp1 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_sk_s <- witness;
    b_skcpa <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    randomnessp1 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    s_randomnessp <- witness;
    sk_s <- witness;
    skcpa <- witness;
    trace___crypto_kem_keypair_jazz <- [];
    trace___crypto_kem_keypair_jazz <-
    (trace___crypto_kem_keypair_jazz ++
    [(Assert, (is_init b_randomnessp 0 64))]);
    s_randomnessp <- randomnessp;
    b_randomnessp1 <- (SBArray64_32.get_sub8 b_randomnessp 0);
    randomnessp1 <- (SBArray64_32.get_sub8 randomnessp 0);
    b_skcpa <- (SBArray3168_1536.get_sub8 b_sk 0);
    skcpa <- (SBArray3168_1536.get_sub8 sk 0);
    b_sk_s <- b_sk;
    sk_s <- sk;
    b_param_2 <- b_pk;
    param_3 <- pk;
    b_param_1 <- b_skcpa;
    param_2 <- skcpa;
    b_param_0 <- b_randomnessp1;
    param_1 <- randomnessp1;
    (result_1, b_result_1, result_0, b_result_0, tmp__trace) <@ __indcpa_keypair (
    param_3, b_param_2, param_2, b_param_1, param_1, b_param_0);
    trace___crypto_kem_keypair_jazz <-
    (trace___crypto_kem_keypair_jazz ++ tmp__trace);
    trace___crypto_kem_keypair_jazz <-
    (trace___crypto_kem_keypair_jazz ++
    [(Assert, ((is_init b_result_1 0 1568) /\ (is_init b_result_0 0 1536)))]);
    pk <- result_1;
    skcpa <- result_0;
    b_sk <- b_sk_s;
    sk <- sk_s;
    b_sk <-
    (SBArray3168_1536.set_sub8 b_sk 0
    (BArray1536.init_arr (W8.of_int 255) 1536));
    sk <- (SBArray3168_1536.set_sub8 sk 0 skcpa);
    i <- 0;
    while ((i < 196)) {
      trace___crypto_kem_keypair_jazz <-
      (trace___crypto_kem_keypair_jazz ++
      [(Assert, ((0 <= (i * 8)) /\ (((i * 8) + 8) <= 1568)))]);
      t64 <- (BArray1568.get64 pk i);
      trace___crypto_kem_keypair_jazz <-
      (trace___crypto_kem_keypair_jazz ++
      [(Assert, ((0 <= ((192 + i) * 8)) /\ ((((192 + i) * 8) + 8) <= 3168)))]);
      b_sk <-
      (BArray3168.set64d b_sk ((192 + i) * 8)
      (W64.of_int 18446744073709551615));
      sk <- (BArray3168.set64d sk ((192 + i) * 8) t64);
      i <- (i + 1);
    }
    b_param <- (SBArray3168_32.get_sub8 b_sk 3104);
    param_0 <- (SBArray3168_32.get_sub8 sk 3104);
    param <- pk;
    (result, b_result, tmp__trace) <@ _sha3_256A_A1568 (param_0, b_param,
    param, (BArray1568.init_arr (W8.of_int 255) 1568));
    trace___crypto_kem_keypair_jazz <-
    (trace___crypto_kem_keypair_jazz ++ tmp__trace);
    trace___crypto_kem_keypair_jazz <-
    (trace___crypto_kem_keypair_jazz ++ [(Assert, (is_init b_result 0 32))]);
    b_sk <-
    (SBArray3168_32.set_sub8 b_sk 3104 (BArray32.init_arr (W8.of_int 255) 32)
    );
    sk <- (SBArray3168_32.set_sub8 sk 3104 result);
    randomnessp <- s_randomnessp;
    i <- 0;
    while ((i < 4)) {
      trace___crypto_kem_keypair_jazz <-
      (trace___crypto_kem_keypair_jazz ++
      [(Assert, ((0 <= ((4 + i) * 8)) /\ ((((4 + i) * 8) + 8) <= 64)))]);
      t64 <- (BArray64.get64 randomnessp (4 + i));
      trace___crypto_kem_keypair_jazz <-
      (trace___crypto_kem_keypair_jazz ++
      [(Assert, ((0 <= ((392 + i) * 8)) /\ ((((392 + i) * 8) + 8) <= 3168)))]);
      b_sk <-
      (BArray3168.set64d b_sk ((392 + i) * 8)
      (W64.of_int 18446744073709551615));
      sk <- (BArray3168.set64d sk ((392 + i) * 8) t64);
      i <- (i + 1);
    }
    b_pk <- (BArray1568.init_arr (W8.of_int 255) 1568);
    return (pk, b_pk, sk, b_sk, trace___crypto_kem_keypair_jazz);
  }
  proc __crypto_kem_enc_jazz (ct:BArray1568.t, b_ct:BArray1568.t,
                              shk:BArray32.t, b_shk:BArray32.t,
                              pk:BArray1568.t, b_pk:BArray1568.t,
                              randomnessp:BArray32.t,
                              b_randomnessp:BArray32.t) : BArray1568.t *
                                                          BArray1568.t *
                                                          BArray32.t *
                                                          BArray32.t * trace = {
    var buf:BArray64.t;
    var kr:BArray64.t;
    var param:BArray32.t;
    var param_0:BArray1568.t;
    var param_1:BArray32.t;
    var param_2:BArray1568.t;
    var result:BArray1568.t;
    var param_3:BArray64.t;
    var param_4:BArray64.t;
    var result_0:BArray64.t;
    var param_5:BArray1568.t;
    var param_6:BArray32.t;
    var result_1:BArray32.t;
    var b_kr:BArray64.t;
    var b_result:BArray1568.t;
    var b_param:BArray32.t;
    var b_param_0:BArray32.t;
    var b_param_1:BArray1568.t;
    var b_buf:BArray64.t;
    var b_result_0:BArray64.t;
    var b_param_2:BArray64.t;
    var b_param_3:BArray64.t;
    var b_result_1:BArray32.t;
    var b_param_4:BArray32.t;
    var trace___crypto_kem_enc_jazz:trace;
    b_buf <- witness;
    b_kr <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    buf <- witness;
    kr <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    result <- witness;
    result_0 <- witness;
    result_1 <- witness;
    trace___crypto_kem_enc_jazz <- [];
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++
    [(Assert, ((is_init b_randomnessp 0 32) /\ (is_init b_pk 0 1568)))]);
    b_buf <- (BArray64.init_arr (W8.of_int 0) 64);
    b_kr <- (BArray64.init_arr (W8.of_int 0) 64);
    (* Erased call to spill *)
    b_buf <-
    (SBArray64_32.set_sub8 b_buf 0 (BArray32.init_arr (W8.of_int 255) 32));
    buf <- (SBArray64_32.set_sub8 buf 0 (copy_64 randomnessp));
    b_param_4 <- (SBArray64_32.get_sub8 b_buf 32);
    param_6 <- (SBArray64_32.get_sub8 buf 32);
    param_5 <- pk;
    (result_1, b_result_1, tmp__trace) <@ _sha3_256A_A1568 (param_6,
    b_param_4, param_5, (BArray1568.init_arr (W8.of_int 255) 1568));
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ tmp__trace);
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ [(Assert, (is_init b_result_1 0 32))]);
    b_buf <-
    (SBArray64_32.set_sub8 b_buf 32 (BArray32.init_arr (W8.of_int 255) 32));
    buf <- (SBArray64_32.set_sub8 buf 32 result_1);
    b_param_3 <- b_kr;
    param_4 <- kr;
    b_param_2 <- b_buf;
    param_3 <- buf;
    (result_0, b_result_0, tmp__trace) <@ _sha3_512A_A64 (param_4, b_param_3,
    param_3, b_param_2);
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ tmp__trace);
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ [(Assert, (is_init b_result_0 0 64))]);
    b_kr <- (BArray64.init_arr (W8.of_int 255) 64);
    kr <- result_0;
    (* Erased call to unspill *)
    b_param_1 <- b_ct;
    param_2 <- ct;
    b_param_0 <- (SBArray64_32.get_sub8 b_buf 0);
    param_1 <- (SBArray64_32.get_sub8 buf 0);
    param_0 <- pk;
    b_param <- (SBArray64_32.get_sub8 b_kr 32);
    param <- (SBArray64_32.get_sub8 kr 32);
    (result, b_result, tmp__trace) <@ __indcpa_enc (param_2, b_param_1,
    param_1, b_param_0, param_0, (BArray1568.init_arr (W8.of_int 255) 1568),
    param, b_param);
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ tmp__trace);
    trace___crypto_kem_enc_jazz <-
    (trace___crypto_kem_enc_jazz ++ [(Assert, (is_init b_result 0 1568))]);
    ct <- result;
    (* Erased call to unspill *)
    b_shk <- (SBArray64_32.get_sub8 b_kr 0);
    shk <- (copy_64 (SBArray64_32.get_sub8 kr 0));
    b_ct <- (BArray1568.init_arr (W8.of_int 255) 1568);
    return (ct, b_ct, shk, b_shk, trace___crypto_kem_enc_jazz);
  }
  proc __crypto_kem_dec_jazz (shk:BArray32.t, b_shk:BArray32.t,
                              ct:BArray1568.t, b_ct:BArray1568.t,
                              sk:BArray3168.t, b_sk:BArray3168.t) : BArray32.t *
                                                                    BArray32.t *
                                                                    trace = {
    var zp_ct:BArray1600.t;
    var buf:BArray64.t;
    var kr:BArray64.t;
    var ctc:BArray1568.t;
    var cnd:W64.t;
    var param:W64.t;
    var param_0:BArray32.t;
    var param_1:BArray32.t;
    var result:BArray32.t;
    var param_2:BArray1600.t;
    var param_3:BArray32.t;
    var result_0:BArray32.t;
    var param_4:BArray1568.t;
    var param_5:BArray1568.t;
    var result_1:W64.t;
    var param_6:BArray32.t;
    var param_7:BArray1568.t;
    var param_8:BArray32.t;
    var param_9:BArray1568.t;
    var result_2:BArray1568.t;
    var param_10:BArray64.t;
    var param_11:BArray64.t;
    var result_3:BArray64.t;
    var param_12:BArray1536.t;
    var param_13:BArray1568.t;
    var param_14:BArray32.t;
    var result_4:BArray32.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var b_kr:BArray64.t;
    var b_result_0:BArray32.t;
    var b_param_0:BArray1600.t;
    var b_param_1:BArray32.t;
    var b_zp_ct:BArray1600.t;
    var b_ctc:BArray1568.t;
    var b_result_1:BArray1568.t;
    var b_param_2:BArray32.t;
    var b_param_3:BArray1568.t;
    var b_param_4:BArray32.t;
    var b_param_5:BArray1568.t;
    var b_buf:BArray64.t;
    var b_result_2:BArray64.t;
    var b_param_6:BArray64.t;
    var b_param_7:BArray64.t;
    var b_result_3:BArray32.t;
    var b_param_8:BArray1536.t;
    var b_param_9:BArray32.t;
    var trace___crypto_kem_dec_jazz:trace;
    b_buf <- witness;
    b_ctc <- witness;
    b_kr <- witness;
    b_param <- witness;
    b_param_0 <- witness;
    b_param_1 <- witness;
    b_param_2 <- witness;
    b_param_3 <- witness;
    b_param_4 <- witness;
    b_param_5 <- witness;
    b_param_6 <- witness;
    b_param_7 <- witness;
    b_param_8 <- witness;
    b_param_9 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    b_result_1 <- witness;
    b_result_2 <- witness;
    b_result_3 <- witness;
    b_zp_ct <- witness;
    buf <- witness;
    ctc <- witness;
    kr <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    param_3 <- witness;
    param_4 <- witness;
    param_5 <- witness;
    param_6 <- witness;
    param_7 <- witness;
    param_8 <- witness;
    param_9 <- witness;
    param_10 <- witness;
    param_11 <- witness;
    param_12 <- witness;
    param_13 <- witness;
    param_14 <- witness;
    result <- witness;
    result_0 <- witness;
    result_2 <- witness;
    result_3 <- witness;
    result_4 <- witness;
    zp_ct <- witness;
    trace___crypto_kem_dec_jazz <- [];
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++
    [(Assert, ((is_init b_ct 0 1568) /\ (is_init b_sk 0 3168)))]);
    b_buf <- (BArray64.init_arr (W8.of_int 0) 64);
    b_kr <- (BArray64.init_arr (W8.of_int 0) 64);
    b_ctc <- (BArray1568.init_arr (W8.of_int 0) 1568);
    b_zp_ct <- (BArray1600.init_arr (W8.of_int 0) 1600);
    (* Erased call to spill *)
    b_zp_ct <-
    (SBArray1600_32.set_sub8 b_zp_ct 0 (SBArray3168_32.get_sub8 b_sk 3136));
    zp_ct <-
    (SBArray1600_32.set_sub8 zp_ct 0
    (copy_64 (SBArray3168_32.get_sub8 sk 3136)));
    b_param_9 <- (SBArray64_32.get_sub8 b_buf 0);
    param_14 <- (SBArray64_32.get_sub8 buf 0);
    param_13 <- ct;
    b_param_8 <- (SBArray3168_1536.get_sub8 b_sk 0);
    param_12 <- (SBArray3168_1536.get_sub8 sk 0);
    (result_4, b_result_3, tmp__trace) <@ __indcpa_dec (param_14, b_param_9,
    param_13, (BArray1568.init_arr (W8.of_int 255) 1568), param_12,
    b_param_8);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ [(Assert, (is_init b_result_3 0 32))]);
    b_buf <-
    (SBArray64_32.set_sub8 b_buf 0 (BArray32.init_arr (W8.of_int 255) 32));
    buf <- (SBArray64_32.set_sub8 buf 0 result_4);
    b_buf <-
    (SBArray64_32.set_sub8 b_buf 32 (SBArray3168_32.get_sub8 b_sk 3104));
    buf <-
    (SBArray64_32.set_sub8 buf 32 (copy_64 (SBArray3168_32.get_sub8 sk 3104))
    );
    b_param_7 <- b_kr;
    param_11 <- kr;
    b_param_6 <- b_buf;
    param_10 <- buf;
    (result_3, b_result_2, tmp__trace) <@ _sha3_512A_A64 (param_11,
    b_param_7, param_10, b_param_6);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ [(Assert, (is_init b_result_2 0 64))]);
    b_kr <- (BArray64.init_arr (W8.of_int 255) 64);
    kr <- result_3;
    b_param_5 <- b_ctc;
    param_9 <- ctc;
    b_param_4 <- (SBArray64_32.get_sub8 b_buf 0);
    param_8 <- (SBArray64_32.get_sub8 buf 0);
    b_param_3 <- (SBArray3168_1568.get_sub8 b_sk 1536);
    param_7 <- (SBArray3168_1568.get_sub8 sk 1536);
    b_param_2 <- (SBArray64_32.get_sub8 b_kr 32);
    param_6 <- (SBArray64_32.get_sub8 kr 32);
    (result_2, b_result_1, tmp__trace) <@ __indcpa_enc (param_9, b_param_5,
    param_8, b_param_4, param_7, b_param_3, param_6, b_param_2);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ [(Assert, (is_init b_result_1 0 1568))]);
    ctc <- result_2;
    (* Erased call to unspill *)
    param_5 <- ct;
    param_4 <- ctc;
    (result_1, tmp__trace) <@ __verify (param_5,
    (BArray1568.init_arr (W8.of_int 255) 1568), param_4,
    (BArray1568.init_arr (W8.of_int 255) 1568));
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    cnd <- result_1;
    b_zp_ct <-
    (SBArray1600_1568.set_sub8 b_zp_ct 32
    (BArray1568.init_arr (W8.of_int 255) 1568));
    zp_ct <- (SBArray1600_1568.set_sub8 zp_ct 32 (copy_64 ct));
    (* Erased call to unspill *)
    b_param_1 <- b_shk;
    param_3 <- shk;
    b_param_0 <- b_zp_ct;
    param_2 <- zp_ct;
    (result_0, b_result_0, tmp__trace) <@ _shake256_A32__A1600 (param_3,
    b_param_1, param_2, b_param_0);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ [(Assert, (is_init b_result_0 0 32))]);
    shk <- result_0;
    param_1 <- shk;
    b_param <- (SBArray64_32.get_sub8 b_kr 0);
    param_0 <- (SBArray64_32.get_sub8 kr 0);
    param <- cnd;
    (result, b_result, tmp__trace) <@ __cmov (param_1,
    (BArray32.init_arr (W8.of_int 255) 32), param_0, b_param, param);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ tmp__trace);
    trace___crypto_kem_dec_jazz <-
    (trace___crypto_kem_dec_jazz ++ [(Assert, (is_init b_result 0 32))]);
    shk <- result;
    b_shk <- (BArray32.init_arr (W8.of_int 255) 32);
    return (shk, b_shk, trace___crypto_kem_dec_jazz);
  }
  proc jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand (public_key:BArray1568.t,
                                                           b_public_key:BArray1568.t,
                                                           secret_key:BArray3168.t,
                                                           b_secret_key:BArray3168.t,
                                                           coins:BArray64.t,
                                                           b_coins:BArray64.t) : 
  BArray1568.t * BArray1568.t * BArray3168.t * BArray3168.t * W64.t * trace = {
    var r:W64.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var param:BArray64.t;
    var param_0:BArray3168.t;
    var param_1:BArray1568.t;
    var result:BArray3168.t;
    var result_0:BArray1568.t;
    var b_result:BArray3168.t;
    var b_result_0:BArray1568.t;
    var b_param:BArray3168.t;
    var b_param_0:BArray1568.t;
    var  _0:bool;
    var trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    result <- witness;
    result_0 <- witness;
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand <- [];
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand ++
    [(Assert, (is_init b_coins 0 64))]);
    b_param_0 <- b_public_key;
    param_1 <- public_key;
    b_param <- b_secret_key;
    param_0 <- secret_key;
    param <- coins;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ __crypto_kem_keypair_jazz (
    param_1, b_param_0, param_0, b_param, param,
    (BArray64.init_arr (W8.of_int 255) 64));
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand ++ tmp__trace);
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand ++
    [(Assert, ((is_init b_result_0 0 1568) /\ (is_init b_result 0 3168)))]);
    public_key <- result_0;
    secret_key <- result;
    (_of_, _cf_, _sf_,  _0, _zf_, r) <- (set0_64);
    b_public_key <- (BArray1568.init_arr (W8.of_int 255) 1568);
    b_secret_key <- (BArray3168.init_arr (W8.of_int 255) 3168);
    return (public_key, b_public_key, secret_key, b_secret_key, r,
           trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand);
  }
  proc jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand (ciphertext:BArray1568.t,
                                                       b_ciphertext:BArray1568.t,
                                                       shared_secret:BArray32.t,
                                                       b_shared_secret:BArray32.t,
                                                       public_key:BArray1568.t,
                                                       b_public_key:BArray1568.t,
                                                       coins:BArray32.t,
                                                       b_coins:BArray32.t) : 
  BArray1568.t * BArray1568.t * BArray32.t * BArray32.t * W64.t * trace = {
    var r:W64.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var param:BArray32.t;
    var param_0:BArray1568.t;
    var param_1:BArray32.t;
    var param_2:BArray1568.t;
    var result:BArray32.t;
    var result_0:BArray1568.t;
    var b_result:BArray32.t;
    var b_result_0:BArray1568.t;
    var b_param:BArray32.t;
    var b_param_0:BArray1568.t;
    var  _0:bool;
    var trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    result <- witness;
    result_0 <- witness;
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand <- [];
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand ++
    [(Assert, ((is_init b_coins 0 32) /\ (is_init b_public_key 0 1568)))]);
    public_key <- public_key;
    b_param_0 <- b_ciphertext;
    param_2 <- ciphertext;
    b_param <- b_shared_secret;
    param_1 <- shared_secret;
    param_0 <- public_key;
    param <- coins;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ __crypto_kem_enc_jazz (
    param_2, b_param_0, param_1, b_param, param_0,
    (BArray1568.init_arr (W8.of_int 255) 1568), param,
    (BArray32.init_arr (W8.of_int 255) 32));
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand ++ tmp__trace);
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand ++
    [(Assert, ((is_init b_result_0 0 1568) /\ (is_init b_result 0 32)))]);
    ciphertext <- result_0;
    shared_secret <- result;
    (_of_, _cf_, _sf_,  _0, _zf_, r) <- (set0_64);
    b_ciphertext <- (BArray1568.init_arr (W8.of_int 255) 1568);
    b_shared_secret <- (BArray32.init_arr (W8.of_int 255) 32);
    return (ciphertext, b_ciphertext, shared_secret, b_shared_secret, 
           r, trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand);
  }
  proc jade_kem_mlkem_mlkem1024_amd64_avx2_keypair (public_key:BArray1568.t,
                                                    b_public_key:BArray1568.t,
                                                    secret_key:BArray3168.t,
                                                    b_secret_key:BArray3168.t) : 
  BArray1568.t * BArray1568.t * BArray3168.t * BArray3168.t * W64.t * trace = {
    var r:W64.t;
    var randomness:BArray64.t;
    var randomnessp:BArray64.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var param:BArray64.t;
    var param_0:BArray3168.t;
    var param_1:BArray1568.t;
    var result:BArray3168.t;
    var result_0:BArray1568.t;
    var b_result:BArray3168.t;
    var b_result_0:BArray1568.t;
    var b_param:BArray3168.t;
    var b_param_0:BArray1568.t;
    var  _0:bool;
    var trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    randomness <- witness;
    randomnessp <- witness;
    result <- witness;
    result_0 <- witness;
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair <- [];
    b_public_key <- b_public_key;
    public_key <- public_key;
    b_secret_key <- b_secret_key;
    secret_key <- secret_key;
    randomnessp <- randomness;
    randomnessp <@ SC.randombytes_64 (randomnessp);
    b_param_0 <- b_public_key;
    param_1 <- public_key;
    b_param <- b_secret_key;
    param_0 <- secret_key;
    param <- randomnessp;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ __crypto_kem_keypair_jazz (
    param_1, b_param_0, param_0, b_param, param,
    (BArray64.init_arr (W8.of_int 255) 64));
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair ++ tmp__trace);
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair ++
    [(Assert, ((is_init b_result_0 0 1568) /\ (is_init b_result 0 3168)))]);
    public_key <- result_0;
    secret_key <- result;
    (_of_, _cf_, _sf_,  _0, _zf_, r) <- (set0_64);
    b_public_key <- (BArray1568.init_arr (W8.of_int 255) 1568);
    b_secret_key <- (BArray3168.init_arr (W8.of_int 255) 3168);
    return (public_key, b_public_key, secret_key, b_secret_key, r,
           trace_jade_kem_mlkem_mlkem1024_amd64_avx2_keypair);
  }
  proc jade_kem_mlkem_mlkem1024_amd64_avx2_enc (ciphertext:BArray1568.t,
                                                b_ciphertext:BArray1568.t,
                                                shared_secret:BArray32.t,
                                                b_shared_secret:BArray32.t,
                                                public_key:BArray1568.t,
                                                b_public_key:BArray1568.t) : 
  BArray1568.t * BArray1568.t * BArray32.t * BArray32.t * W64.t * trace = {
    var r:W64.t;
    var randomness:BArray32.t;
    var randomnessp:BArray32.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var param:BArray32.t;
    var param_0:BArray1568.t;
    var param_1:BArray32.t;
    var param_2:BArray1568.t;
    var result:BArray32.t;
    var result_0:BArray1568.t;
    var b_result:BArray32.t;
    var b_result_0:BArray1568.t;
    var b_param:BArray32.t;
    var b_param_0:BArray1568.t;
    var  _0:bool;
    var trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc:trace;
    b_param <- witness;
    b_param_0 <- witness;
    b_result <- witness;
    b_result_0 <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    param_2 <- witness;
    randomness <- witness;
    randomnessp <- witness;
    result <- witness;
    result_0 <- witness;
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc <- [];
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc ++
    [(Assert, (is_init b_public_key 0 1568))]);
    b_ciphertext <- b_ciphertext;
    ciphertext <- ciphertext;
    b_shared_secret <- b_shared_secret;
    shared_secret <- shared_secret;
    public_key <- public_key;
    randomnessp <- randomness;
    randomnessp <@ SC.randombytes_32 (randomnessp);
    b_param_0 <- b_ciphertext;
    param_2 <- ciphertext;
    b_param <- b_shared_secret;
    param_1 <- shared_secret;
    param_0 <- public_key;
    param <- randomnessp;
    (result_0, b_result_0, result, b_result, tmp__trace) <@ __crypto_kem_enc_jazz (
    param_2, b_param_0, param_1, b_param, param_0,
    (BArray1568.init_arr (W8.of_int 255) 1568), param,
    (BArray32.init_arr (W8.of_int 255) 32));
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc ++ tmp__trace);
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc ++
    [(Assert, ((is_init b_result_0 0 1568) /\ (is_init b_result 0 32)))]);
    ciphertext <- result_0;
    shared_secret <- result;
    (_of_, _cf_, _sf_,  _0, _zf_, r) <- (set0_64);
    b_ciphertext <- (BArray1568.init_arr (W8.of_int 255) 1568);
    b_shared_secret <- (BArray32.init_arr (W8.of_int 255) 32);
    return (ciphertext, b_ciphertext, shared_secret, b_shared_secret, 
           r, trace_jade_kem_mlkem_mlkem1024_amd64_avx2_enc);
  }
  proc jade_kem_mlkem_mlkem1024_amd64_avx2_dec (shared_secret:BArray32.t,
                                                b_shared_secret:BArray32.t,
                                                ciphertext:BArray1568.t,
                                                b_ciphertext:BArray1568.t,
                                                secret_key:BArray3168.t,
                                                b_secret_key:BArray3168.t) : 
  BArray32.t * BArray32.t * W64.t * trace = {
    var r:W64.t;
    var _of_:bool;
    var _cf_:bool;
    var _sf_:bool;
    var _zf_:bool;
    var param:BArray3168.t;
    var param_0:BArray1568.t;
    var param_1:BArray32.t;
    var result:BArray32.t;
    var b_result:BArray32.t;
    var b_param:BArray32.t;
    var  _0:bool;
    var trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec:trace;
    b_param <- witness;
    b_result <- witness;
    param <- witness;
    param_0 <- witness;
    param_1 <- witness;
    result <- witness;
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec <- [];
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec ++
    [(Assert,
     ((is_init b_ciphertext 0 1568) /\ (is_init b_secret_key 0 3168)))]);
    b_param <- b_shared_secret;
    param_1 <- shared_secret;
    param_0 <- ciphertext;
    param <- secret_key;
    (result, b_result, tmp__trace) <@ __crypto_kem_dec_jazz (param_1,
    b_param, param_0, (BArray1568.init_arr (W8.of_int 255) 1568), param,
    (BArray3168.init_arr (W8.of_int 255) 3168));
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec ++ tmp__trace);
    trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec <-
    (trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec ++
    [(Assert, (is_init b_result 0 32))]);
    shared_secret <- result;
    (_of_, _cf_, _sf_,  _0, _zf_, r) <- (set0_64);
    b_shared_secret <- (BArray32.init_arr (W8.of_int 255) 32);
    return (shared_secret, b_shared_secret, r,
           trace_jade_kem_mlkem_mlkem1024_amd64_avx2_dec);
  }
}.

(* The post and trace are valid. *)

lemma __shuffle8_trace _a _b :
      hoare [M(Syscall).__shuffle8 :
      (((_b = b) /\ (_a = a)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __shuffle4_trace _a _b :
      hoare [M(Syscall).__shuffle4 :
      (((_b = b) /\ (_a = a)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __shuffle2_trace _a _b :
      hoare [M(Syscall).__shuffle2 :
      (((_b = b) /\ (_a = a)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __shuffle1_trace _a _b :
      hoare [M(Syscall).__shuffle1 :
      (((_b = b) /\ (_a = a)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __nttunpack128_trace _r0 _r1 _r2 _r3 _r4 _r5 _r6 _r7 :
      hoare [M(Syscall).__nttunpack128 :
      (((_r7 = r7) /\
       ((_r6 = r6) /\
       ((_r5 = r5) /\
       ((_r4 = r4) /\
       ((_r3 = r3) /\ ((_r2 = r2) /\ ((_r1 = r1) /\ (_r0 = r0)))))))) /\
      true) ==> (true /\ (valid res.`9))].
proof.
proc; inline *; auto .
qed .

lemma _nttunpack_trace _rp _b_rp :
      hoare [M(Syscall)._nttunpack :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__nttunpack128_trace param_6 param_5 param_4 param_3 param_2 param_1 
       param_0 param).
auto .
ecall (__nttunpack128_trace param_14 param_13 param_12 param_11 param_10 
       param_9 param_8 param_7).
auto .
smt (all_cat BArray512.init_arrP).
qed .

lemma __csubq_trace _r _qx16 :
      hoare [M(Syscall).__csubq :
      (((_qx16 = qx16) /\ (_r = r)) /\ true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma __red16x_trace _r _qx16 _vx16 :
      hoare [M(Syscall).__red16x :
      (((_vx16 = vx16) /\ ((_qx16 = qx16) /\ (_r = r))) /\ true) ==>
      (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma __fqmulprecomp16x_trace _b _al _ah _qx16 :
      hoare [M(Syscall).__fqmulprecomp16x :
      (((_qx16 = qx16) /\ ((_ah = ah) /\ ((_al = al) /\ (_b = b)))) /\ true) ==>
      (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma __fqmulx16_trace _a _b _qx16 _qinvx16 :
      hoare [M(Syscall).__fqmulx16 :
      (((_qinvx16 = qinvx16) /\ ((_qx16 = qx16) /\ ((_b = b) /\ (_a = a)))) /\
      true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma keccakf1600_index_trace _x _y :
      hoare [M(Syscall).keccakf1600_index :
      (((_y = y) /\ (_x = x)) /\ true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma keccakf1600_rho_offsets_trace _i :
      hoare [M(Syscall).keccakf1600_rho_offsets :
      ((_i = i) /\ true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; while(true); auto .
qed .

lemma keccakf1600_rhotates_trace _x _y :
      hoare [M(Syscall).keccakf1600_rhotates :
      (((_y = y) /\ (_x = x)) /\ true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto . while(true);auto.
qed .

lemma __keccakf1600_pround_avx2_trace _state _b_state :
      hoare [M(Syscall).__keccakf1600_pround_avx2 :
      (((_b_state = b_state) /\ (_state = state)) /\
      (is_init _b_state 0 224)) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
  proc. rewrite /=. wp -1.
  seq 2: (valid trace___keccakf1600_pround_avx2). by auto.
  conseq (:true). smt(BArray224.init_arrP).
  by auto.
qed.

lemma _keccakf1600_avx2_trace _state _b_state :
      hoare [M(Syscall)._keccakf1600_avx2 :
      (((_b_state = b_state) /\ (_state = state)) /\
      (is_init _b_state 0 224)) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__keccakf1600_avx2) /\ is_init b_state 0 224 /\ 0 <=  r).
auto .
ecall (__keccakf1600_pround_avx2_trace param (BArray224.init_arr
                                             (W8.of_int 255) 224)).
auto .
rewrite /is_init /valid /=.
smt (all_cat BArray224.init_arrP).
auto .
ecall (__keccakf1600_pround_avx2_trace param (BArray224.init_arr
                                             (W8.of_int 255) 224)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP).
qed .

lemma __u64_to_u256_trace _x _l :
      hoare [M(Syscall).__u64_to_u256 :
      (((_l = l) /\ (_x = x)) /\ true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma __state_init_avx2_trace  :
      hoare [M(Syscall).__state_init_avx2 :
      (true /\ true) ==> ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___state_init_avx2) /\ (((0 <= i) /\ (i <= 7)) /\
                                           (is_init b_st 0 (32 * i)))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __pstate_init_avx2_trace _pst _b_pst :
      hoare [M(Syscall).__pstate_init_avx2 :
      (((_b_pst = b_pst) /\ (_pst = pst)) /\ true) ==>
      (((is_init res.`2 0 200) /\ (is_init res.`4 0 224)) /\ (valid res.`5))].
proof.
proc; auto .
ecall (__state_init_avx2_trace).
auto .
while ((valid trace___pstate_init_avx2) /\  (((0 <= i) /\ (i <= 6)) /\
                                            (is_init b_pst 0 (32 * i)))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP).
qed .

lemma __perm_reg3456_avx2_trace _r3 _r4 _r5 _r6 :
      hoare [M(Syscall).__perm_reg3456_avx2 :
      (((_r6 = r6) /\ ((_r5 = r5) /\ ((_r4 = r4) /\ (_r3 = r3)))) /\ true) ==>
      (true /\ (valid res.`5))].
proof.
proc; inline *; auto .
qed .

lemma __state_from_pstate_avx2_trace _pst _b_pst :
      hoare [M(Syscall).__state_from_pstate_avx2 :
      (((_b_pst = b_pst) /\ (_pst = pst)) /\ (is_init _b_pst 0 200)) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__perm_reg3456_avx2_trace param_2 param_1 param_0 param).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __addstate_r3456_avx2_trace _st _b_st _r3 _r4 _r5 _r6 :
      hoare [M(Syscall).__addstate_r3456_avx2 :
      (((_r6 = r6) /\
       ((_r5 = r5) /\
       ((_r4 = r4) /\ ((_r3 = r3) /\ ((_b_st = b_st) /\ (_st = st)))))) /\
      (is_init _b_st 0 224)) ==> ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__perm_reg3456_avx2_trace param_2 param_1 param_0 param).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP).
qed .

lemma __addpst01_avx2_trace _st _b_st _pst _b_pst :
      hoare [M(Syscall).__addpst01_avx2 :
      (((_b_pst = b_pst) /\ ((_pst = pst) /\ ((_b_st = b_st) /\ (_st = st)))) /\
      ((is_init _b_pst 0 200) /\ (is_init _b_st 0 224))) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP).
qed .

lemma __addpst23456_avx2_trace _st _b_st _pst _b_pst :
      hoare [M(Syscall).__addpst23456_avx2 :
      (((_b_pst = b_pst) /\ ((_pst = pst) /\ ((_b_st = b_st) /\ (_st = st)))) /\
      ((is_init _b_pst 0 200) /\ (is_init _b_st 0 224))) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__addstate_r3456_avx2_trace param_3 (BArray224.init_arr
                                           (W8.of_int 255) 224) param_2 
       param_1 param_0 param).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP).
qed .

lemma _addpstate_avx2_trace _st _b_st _pst _b_pst :
      hoare [M(Syscall)._addpstate_avx2 :
      (((_b_pst = b_pst) /\ ((_pst = pst) /\ ((_b_st = b_st) /\ (_st = st)))) /\
      ((is_init _b_pst 0 200) /\ (is_init _b_st 0 224))) ==>
      ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__addpst23456_avx2_trace param_0 (BArray224.init_arr (W8.of_int 255)
                                        224) param (BArray200.init_arr
                                                   (W8.of_int 255) 200)).
auto .
ecall (__addpst01_avx2_trace param_2 (BArray224.init_arr (W8.of_int 255) 224) 
       param_1 (BArray200.init_arr (W8.of_int 255) 200)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray224.init_arrP BArray200.init_arrP).
qed .

lemma __stavx2_pos_avx2_trace _pOS :
      hoare [M(Syscall).__stavx2_pos_avx2 :
      ((_pOS = pOS) /\ true) ==>
      (((0 <= res.`1) /\ (res.`1 < 7)) /\ (valid res.`3))].
proof.
by proc; auto .
qed .

lemma __addratebit_avx2_trace _st _b_st _rATE8 :
      hoare [M(Syscall).__addratebit_avx2 :
      (((_rATE8 = rATE8) /\ ((_b_st = b_st) /\ (_st = st))) /\
      (is_init _b_st 0 224)) ==> ((is_init res.`2 0 224) /\ (valid res.`3))].
proof.
  proc; rewrite /=.
  seq 10: (#pre /\ valid trace___addratebit_avx2 /\ 0<=r /\ r < 7 ).
  + auto. ecall (__stavx2_pos_avx2_trace param_1).
    auto. smt(all_cat).
  if .
  + auto .
    rewrite /trace /is_init /valid /=.
    smt (all_cat BArray224.init_arrP).
  auto .
  ecall (__u64_to_u256_trace param_0 param).
  auto .
  rewrite /trace /is_init /valid /=.
  smt (all_cat BArray224.init_arrP).
qed .

lemma keccakf1600_4x_theta_sum_trace _a _b_a :
      hoare [M(Syscall).keccakf1600_4x_theta_sum :
      (((_b_a = b_a) /\ (_a = a)) /\ (is_init _b_a 0 800)) ==>
      ((is_init res.`2 0 160) /\ (valid res.`3))].
proof.
proc; auto .
  while(is_init b_c 0 (32*5) /\ 0<=y /\ is_init b_a 0 800 /\ valid trace_keccakf1600_4x_theta_sum).
  + auto.
    while(is_init b_c 0 (32*5) /\ 0<=y /\ is_init b_a 0 800 /\
          valid trace_keccakf1600_4x_theta_sum /\ 0<=x  /\ y<5);
    auto; rewrite /is_init /valid  /=; smt(all_cat).
  auto.
  while(is_init b_c 0 (32*x) /\ 0<=x /\ x<=5 /\  is_init b_a 0 800 /\ valid trace_keccakf1600_4x_theta_sum);
  auto; rewrite /is_init  /valid /=; smt(all_cat).
qed .


lemma keccakf1600_4x_rol_trace _a _b_a _x _r _r8 _r56 :
      hoare [M(Syscall).keccakf1600_4x_rol :
      (((_r56 = r56) /\
       ((_r8 = r8) /\ ((_r = r) /\ ((_x = x) /\ ((_b_a = b_a) /\ (_a = a)))))) /\
      (((is_init _b_a (_x * 32) 32) /\ (0 <= _x)) /\ (_x < 5))) ==>
      ((foldr (fun x => (fun acc => (x /\ acc))) true
       (map (fun k => ((is_init res.`2 k 1) = (is_init _b_a k 1)))
       (iota_ 0 160))) /\
      (valid res.`3))].
proof.
proc; auto .
rewrite /is_init /valid /= .
smt (all_cat and_iota).
qed .

lemma keccakf1600_4x_theta_rol_trace _c _b_c _r8 _r56 :
      hoare [M(Syscall).keccakf1600_4x_theta_rol :
      (((_r56 = r56) /\ ((_r8 = r8) /\ ((_b_c = b_c) /\ (_c = c)))) /\
      (is_init _b_c 0 160)) ==> ((is_init res.`2 0 160) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace_keccakf1600_4x_theta_rol) /\ is_init b_c 0 160 /\ is_init b_d 0 (x*32) /\ 0<=x /\ x<=5).
auto .
ecall (keccakf1600_4x_rol_trace param_3 b_param param_2 param_1 param_0 param).
auto .
rewrite /is_init /valid /= => &m /> ???????? H *.
rewrite !all_cat /=; do split;1..10,12..13,15..:smt (all_cat and_iota);
 have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 

auto .
rewrite /is_init /valid /= .
smt (all_cat and_iota).
qed .

lemma keccakf1600_4x_rol_sum_trace _a _b_a _d _b_d _y _r8 _r56 :
      hoare [M(Syscall).keccakf1600_4x_rol_sum :
      (((_r56 = r56) /\
       ((_r8 = r8) /\
       ((_y = y) /\
       ((_b_d = b_d) /\ ((_d = d) /\ ((_b_a = b_a) /\ (_a = a))))))) /\
      ((((is_init _b_a 0 800) /\ (is_init _b_d 0 160)) /\ (0 <= _y)) /\
      (_y < 5))) ==> ((is_init res.`2 0 160) /\ (valid res.`3))].
proof.
  proc; auto .
  while(is_init b_b 0 (x*32) /\ 0 <= x /\ x <= 5 /\ valid trace_keccakf1600_4x_rol_sum).
  + seq 17: (is_init b_b 0 ((x+1)*32) /\ 0 <= x /\ x < 5 /\ valid trace_keccakf1600_4x_rol_sum).
    + auto . ecall (keccakf1600_rhotates_trace param_5 param_4). auto. 
      rewrite /is_init /valid /= .
      smt (all_cat).
    if .
    + auto . ecall (keccakf1600_4x_rol_trace param_3 b_param param_2 param_1 param_0 param).
      auto . 
   rewrite /is_init /valid /= => &m /> ?????;do split;1:smt().
   move => ?? H *;do split;2..:smt(all_cat and_iota);
     have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 
  auto .
  rewrite /is_init /valid /=.
  smt (all_cat).

  auto .
  rewrite /is_init /valid /=.
  smt (all_cat).

qed .

lemma keccakf1600_4x_set_row_trace _e _b_e _b _b_b _y _rc :
      hoare [M(Syscall).keccakf1600_4x_set_row :
      (((_rc = rc) /\
       ((_y = y) /\
       ((_b_b = b_b) /\ ((_b = b) /\ ((_b_e = b_e) /\ (_e = e)))))) /\
      (((is_init _b_b 0 160) /\ (0 <= _y)) /\ (_y < 5))) ==>
      ((foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_e k 1) \/
       ((((_y * 5) * 32) <= k) /\ (k < (((_y + 1) * 5) * 32))))))
       (iota_ 0 800))) /\
      (valid res.`3))].
proof.
  proc;auto.
  while(is_init b_e (32*y*5) (32*x) /\ 0 <= x /\ x <= 5 /\ valid trace_keccakf1600_4x_set_row /\ 0<=y /\ y<5 /\ forall k, (k < (32*y*5) \/ (32*(y+1)*5) <= k) => is_init b_e k 1 = is_init _b_e k 1).
  + auto. rewrite /is_init /valid /trace /=. smt(all_cat).
  auto. rewrite /is_init /valid /trace /= => &m /> *.
  smt(and_iota).
qed .

lemma _keccakf1600_4x_round_trace _e _b_e _a _b_a _rc _r8 _r56 :
      hoare [M(Syscall)._keccakf1600_4x_round :
      (((_r56 = r56) /\
       ((_r8 = r8) /\
       ((_rc = rc) /\
       ((_b_a = b_a) /\ ((_a = a) /\ ((_b_e = b_e) /\ (_e = e))))))) /\
      (is_init _b_a 0 800)) ==> ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
  proc; auto .
  while(is_init b_e 0 (y*160) /\ 0<=y /\ y<=5 /\ valid  trace__keccakf1600_4x_round).
  + auto . ecall (keccakf1600_4x_set_row_trace param_2 b_param param_1 (BArray160.init_arr (W8.of_int 255) 160) param_0 param). auto.
    ecall (keccakf1600_4x_rol_sum_trace param_7 (BArray800.init_arr (W8.of_int 255) 800) param_6 (BArray160.init_arr (W8.of_int 255) 160) param_5 param_4 param_3). auto .
    rewrite /is_init /valid /= => &m /> *; do split;1..2:
    smt (all_cat and_iota BArray800.init_arrP BArray160.init_arrP).
    move => 6?H*;do split;2..:smt (all_cat and_iota);
     have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 
  auto .
  ecall (keccakf1600_4x_theta_rol_trace param_10 (BArray160.init_arr (W8.of_int 255) 160) param_9 param_8).
  auto .
  ecall (keccakf1600_4x_theta_sum_trace param_11 (BArray800.init_arr (W8.of_int 255) 800)).
  auto .
  rewrite /is_init /valid /= .
  smt (all_cat BArray800.init_arrP BArray160.init_arrP).
qed .

lemma __keccakf1600_avx2x4_trace _a _b_a :
      hoare [M(Syscall).__keccakf1600_avx2x4 :
      (((_b_a = b_a) /\ (_a = a)) /\ (is_init _b_a 0 800)) ==>
      ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___keccakf1600_avx2x4) /\ is_init b_a 0 800 /\ 0 <=  c /\ ( c) %% 2 = 0).
auto .
ecall (_keccakf1600_4x_round_trace param_3 b_param_0 param_2 b_param param_1 
       param_0 param).
auto .
ecall (_keccakf1600_4x_round_trace param_8 b_param_1 param_7 (BArray800.init_arr (W8.of_int 255) 800)
       param_6 param_5 param_4).
auto .
rewrite /is_init /valid /= => &m /> *.
smt (all_cat BArray800.init_arrP).
auto . smt(BArray800.init_arrP).
qed .

lemma _keccakf1600_avx2x4_trace _a _b_a :
      hoare [M(Syscall)._keccakf1600_avx2x4 :
      (((_b_a = b_a) /\ (_a = a)) /\ (is_init _b_a 0 800)) ==>
      ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__keccakf1600_avx2x4_trace param (BArray800.init_arr (W8.of_int 255)
                                        800)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray800.init_arrP).
qed .

lemma __state_init_avx2x4_trace _st _b_st :
      hoare [M(Syscall).__state_init_avx2x4 :
      (((_b_st = b_st) /\ (_st = st)) /\ true) ==>
      ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___state_init_avx2x4) /\  ((((0 <= i) /\ (i <= 800)) /\
                                              ((i %% 32) = 0)) /\
                                             (is_init b_st 0 i))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __addratebit_avx2x4_trace _st _b_st _rATE8 :
      hoare [M(Syscall).__addratebit_avx2x4 :
      (((_rATE8 = rATE8) /\ ((_b_st = b_st) /\ (_st = st))) /\
      (((is_init _b_st 0 800) /\ (0 < _rATE8)) /\ (_rATE8 < 200))) ==>
      ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
proc; auto .
rewrite /is_init /valid /= .
smt (all_cat BArray800.init_arrP).
qed .

lemma __4u64x4_u256x4_trace _y0 _y1 _y2 _y3 :
      hoare [M(Syscall).__4u64x4_u256x4 :
      (((_y3 = y3) /\ ((_y2 = y2) /\ ((_y1 = y1) /\ (_y0 = y0)))) /\ true) ==>
      (true /\ (valid res.`5))].
proof.
proc; inline *; auto .
qed .
   

require import Keccak_ASIZE.

clone KECCAK_ARRAY_ASIZE as KECCAK1 with
  op size <= 1, 
  theory BArrayS <= BArray1.


clone KECCAK_ARRAY_ASIZE as KECCAK2 with
  op size <= 2, 
  theory BArrayS <= BArray2.

 
clone KECCAK_ARRAY_ASIZE as KECCAK32 with
  op size <= 32, 
  theory BArrayS <= BArray32.

clone KECCAK_ARRAY_ASIZE as KECCAK33 with
  op size <= 33, 
  theory BArrayS <= BArray33.

clone KECCAK_ARRAY_ASIZE as KECCAK64 with
  op size <= 64, 
  theory BArrayS <= BArray64.

clone KECCAK_ARRAY_ASIZE as KECCAK128 with
  op size <= 128, 
  theory BArrayS <= BArray128.

clone KECCAK_ARRAY_ASIZE as KECCAK536 with
  op size <= 536, 
  theory BArrayS <= BArray536.

clone KECCAK_ARRAY_ASIZE as KECCAK1568 with
  op size <= 1568, 
  theory BArrayS <= BArray1568.

clone KECCAK_ARRAY_ASIZE as KECCAK1600 with
  op size <= 1600, 
  theory BArrayS <= BArray1600.
  
equiv a1_absorb_array_avx2x4_eq : M(Syscall).a1____absorb_array_avx2x4 ~ KECCAK1.M.__absorb_array_avx2x4 : ={arg}==> ={res}.
proof.
  proc; inline *; sim.
qed.

lemma a1____absorb_array_avx2x4_trace _st _b_st _aT _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a1____absorb_array_avx2x4 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf3 = b_buf3) /\
       ((_buf3 = buf3) /\
       ((_b_buf2 = b_buf2) /\
       ((_buf2 = buf2) /\
       ((_b_buf1 = b_buf1) /\
       ((_buf1 = buf1) /\
       ((_b_buf0 = b_buf0) /\
       ((_buf0 = buf0) /\ ((_aT = aT) /\ ((_b_st = b_st) /\ (_st = st))))))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 <= _aT)) /\
               (_aT < _rATE8)) /\
              (0 < _rATE8)) /\
             (_rATE8 < 200)) /\
            ((_offset + _lEN) <= 1)) /\
           (((_aT + _lEN) + ((_tRAILB <> 0) ? 1 : 0)) < 200)) /\
          (is_init _b_buf0 _offset _lEN)) /\
         (is_init _b_buf1 _offset _lEN)) /\
        (is_init _b_buf2 _offset _lEN)) /\
       (is_init _b_buf3 _offset _lEN)) /\
      (is_init _b_st 0 800))))))) ==>
      ((((0 <= res.`4) /\ (res.`4 <= 18446744073709551615)) /\
       (is_init res.`2 0 800)) /\
      (valid res.`5))].
proof.
 conseq ( a1_absorb_array_avx2x4_eq) (KECCAK1.__absorb_array_avx2x4_trace _st _b_st _aT _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.

equiv a1_pabsorb_array_avx2_eq : M(Syscall).a1____pabsorb_array_avx2 ~ KECCAK1.M.__pabsorb_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim.
qed.

lemma a1____pabsorb_array_avx2_trace _pst _b_pst _aT _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a1____pabsorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\
       ((_b_st = b_st) /\
       ((_st = st) /\ ((_aT = aT) /\ ((_b_pst = b_pst) /\ (_pst = pst))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 <= _aT)) /\
             (_aT < _rATE8)) /\
            ((_offset + _lEN) <= 1)) /\
           (((_aT + _lEN) + ((_tRAILB <> 0) ? 1 : 0)) < 200)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
        (is_init _b_buf _offset _lEN)) /\
       (is_init _b_pst 0 200)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`6) /\ (res.`6 <= 18446744073709551615)) /\
       ((is_init res.`2 0 200) /\ (is_init res.`5 0 224))) /\
      (valid res.`7))].
proof.
 conseq ( a1_pabsorb_array_avx2_eq) (KECCAK1.__pabsorb_array_avx2_trace _pst _b_pst _aT _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.


  equiv a2_absorb_array_avx2x4_eq : M(Syscall).a2____absorb_array_avx2x4 ~ KECCAK2.M.__absorb_array_avx2x4 : ={arg}==> ={res}.
proof.
 proc; inline *; sim.
qed.



lemma a2____absorb_array_avx2x4_trace _st _b_st _aT _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a2____absorb_array_avx2x4 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf3 = b_buf3) /\
       ((_buf3 = buf3) /\
       ((_b_buf2 = b_buf2) /\
       ((_buf2 = buf2) /\
       ((_b_buf1 = b_buf1) /\
       ((_buf1 = buf1) /\
       ((_b_buf0 = b_buf0) /\
       ((_buf0 = buf0) /\ ((_aT = aT) /\ ((_b_st = b_st) /\ (_st = st))))))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 <= _aT)) /\
               (_aT < _rATE8)) /\
              (0 < _rATE8)) /\
             (_rATE8 < 200)) /\
            ((_offset + _lEN) <= 2)) /\
           (((_aT + _lEN) + ((_tRAILB <> 0) ? 1 : 0)) < 200)) /\
          (is_init _b_buf0 _offset _lEN)) /\
         (is_init _b_buf1 _offset _lEN)) /\
        (is_init _b_buf2 _offset _lEN)) /\
       (is_init _b_buf3 _offset _lEN)) /\
      (is_init _b_st 0 800))))))) ==>
      ((((0 <= res.`4) /\ (res.`4 <= 18446744073709551615)) /\
       (is_init res.`2 0 800)) /\
      (valid res.`5))].
proof.
 conseq ( a2_absorb_array_avx2x4_eq) (KECCAK2.__absorb_array_avx2x4_trace _st _b_st _aT _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.

equiv a32_pabsorb_array_avx2_eq : M(Syscall).a32____pabsorb_array_avx2 ~ KECCAK32.M.__pabsorb_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim.
qed.

lemma a32____pabsorb_array_avx2_trace _pst _b_pst _aT _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a32____pabsorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\
       ((_b_st = b_st) /\
       ((_st = st) /\ ((_aT = aT) /\ ((_b_pst = b_pst) /\ (_pst = pst))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 <= _aT)) /\
             (_aT < _rATE8)) /\
            ((_offset + _lEN) <= 32)) /\
           (((_aT + _lEN) + ((_tRAILB <> 0) ? 1 : 0)) < 200)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
        (is_init _b_buf _offset _lEN)) /\
       (is_init _b_pst 0 200)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`6) /\ (res.`6 <= 18446744073709551615)) /\
       ((is_init res.`2 0 200) /\ (is_init res.`5 0 224))) /\
      (valid res.`7))].
proof.
 conseq ( a32_pabsorb_array_avx2_eq) (KECCAK32.__pabsorb_array_avx2_trace _pst _b_pst _aT _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.

equiv a32_squeeze_array_avx2_eq : M(Syscall).a32____squeeze_array_avx2 ~ KECCAK32.M.__squeeze_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.


lemma a32____squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8 :
      hoare [M(Syscall).a32____squeeze_array_avx2 :
      (((_rATE8 = rATE8) /\
       ((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\ ((_b_buf = b_buf) /\ (_buf = buf))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      ((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 < _rATE8)) /\ (_rATE8 < 200)) /\
       ((_offset + _lEN) <= 32)) /\
      (is_init _b_st 0 224)))))) ==>
      ((((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 32))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`2 k 1) =
        ((is_init _b_buf k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 32)))) /\
       (is_init res.`4 0 224)) /\
      (valid res.`5))].
proof.
conseq ( a32_squeeze_array_avx2_eq) (KECCAK32.__squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8) => //.
 smt().
qed.

equiv a32_absorb_bcast_array_avx2x4_eq : M(Syscall).a32____absorb_bcast_array_avx2x4 ~ KECCAK32.M.__absorb_bcast_array_avx2x4 : ={arg}==> ={res}.
proof.
  proc; inline *; sim.
qed.




lemma a32____absorb_bcast_array_avx2x4_trace _st _b_st _aT _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a32____absorb_bcast_array_avx2x4 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\ ((_aT = aT) /\ ((_b_st = b_st) /\ (_st = st))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      ((((((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 <= _aT)) /\
            (_aT < _rATE8)) /\
           ((_offset + _lEN) <= 32)) /\
          (((_aT + _lEN) + ((_tRAILB <> 0) ? 1 : 0)) < 200)) /\
         (0 < _rATE8)) /\
        (_rATE8 < 200)) /\
       (is_init _b_buf _offset _lEN)) /\
      (is_init _b_st 0 800))))))) ==>
      ((((0 <= res.`4) /\ (res.`4 <= 18446744073709551615)) /\
       ((is_init res.`2 0 800) /\
       (res.`3 = (((_aT + _lEN) %% _rATE8) + ((_tRAILB <> 0) ? 1 : 0))))) /\
      (valid res.`5))].
  proof.
   conseq ( a32_absorb_bcast_array_avx2x4_eq) (KECCAK32.__absorb_bcast_array_avx2x4_trace  _st _b_st _aT _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.

  equiv a33_absorb_array_avx2_eq : M(Syscall).a33____absorb_array_avx2 ~ KECCAK33.M.__absorb_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.

lemma a33____absorb_array_avx2_trace _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a33____absorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_st = b_st) /\ (_st = st)))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((0 <= _offset) /\ (0 <= _lEN)) /\ ((_offset + _lEN) <= 33)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
       (is_init _b_buf _offset _lEN)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`3) /\ (res.`3 <= 18446744073709551615)) /\
       (is_init res.`2 0 224)) /\
      (valid res.`4))].
proof.
  conseq ( a33_absorb_array_avx2_eq) (KECCAK33.__absorb_array_avx2_trace  _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.



  equiv a64_absorb_array_avx2_eq : M(Syscall).a64____absorb_array_avx2 ~ KECCAK64.M.__absorb_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.

lemma a64____absorb_array_avx2_trace _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a64____absorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_st = b_st) /\ (_st = st)))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((0 <= _offset) /\ (0 <= _lEN)) /\ ((_offset + _lEN) <= 64)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
       (is_init _b_buf _offset _lEN)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`3) /\ (res.`3 <= 18446744073709551615)) /\
       (is_init res.`2 0 224)) /\
      (valid res.`4))].
proof.
  conseq ( a64_absorb_array_avx2_eq) (KECCAK64.__absorb_array_avx2_trace  _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.


equiv a64_squeeze_array_avx2_eq : M(Syscall).a64____squeeze_array_avx2 ~ KECCAK64.M.__squeeze_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.
lemma a64____squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8 :
      hoare [M(Syscall).a64____squeeze_array_avx2 :
      (((_rATE8 = rATE8) /\
       ((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\ ((_b_buf = b_buf) /\ (_buf = buf))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      ((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 < _rATE8)) /\ (_rATE8 < 200)) /\
       ((_offset + _lEN) <= 64)) /\
      (is_init _b_st 0 224)))))) ==>
      ((((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 64))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`2 k 1) =
        ((is_init _b_buf k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 64)))) /\
       (is_init res.`4 0 224)) /\
      (valid res.`5))].
proof.
conseq ( a64_squeeze_array_avx2_eq) (KECCAK64.__squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8) => //.
 smt().
qed.

equiv a128_squeeze_array_avx2_eq : M(Syscall).a128____squeeze_array_avx2 ~ KECCAK128.M.__squeeze_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.
lemma a128____squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8 :
      hoare [M(Syscall).a128____squeeze_array_avx2 :
      (((_rATE8 = rATE8) /\
       ((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\ ((_b_buf = b_buf) /\ (_buf = buf))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      ((((((0 <= _offset) /\ (0 <= _lEN)) /\ (0 < _rATE8)) /\ (_rATE8 < 200)) /\
       ((_offset + _lEN) <= 128)) /\
      (is_init _b_st 0 224)))))) ==>
      ((((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 128))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`2 k 1) =
        ((is_init _b_buf k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 128)))) /\
       (is_init res.`4 0 224)) /\
      (valid res.`5))].
proof.
conseq ( a128_squeeze_array_avx2_eq) (KECCAK128.__squeeze_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st _rATE8) => //.
 smt().
qed.


equiv a128_squeeze_array_avx2x4_eq : M(Syscall).a128____squeeze_array_avx2x4 ~ KECCAK128.M.__squeeze_array_avx2x4 : ={arg}==> ={res}.
proof.
 proc; inline *; sim.
qed.



lemma a128____squeeze_array_avx2x4_trace _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _st _b_st _rATE8 :
      hoare [M(Syscall).a128____squeeze_array_avx2x4 :
      (((_rATE8 = rATE8) /\
       ((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf3 = b_buf3) /\
       ((_buf3 = buf3) /\
       ((_b_buf2 = b_buf2) /\
       ((_buf2 = buf2) /\
       ((_b_buf1 = b_buf1) /\
       ((_buf1 = buf1) /\ ((_b_buf0 = b_buf0) /\ (_buf0 = buf0))))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      ((((((0 <= _offset) /\ (0 <= _lEN)) /\ (is_init _b_st 0 800)) /\
        ((_offset + _lEN) <= 128)) /\
       (0 < _rATE8)) /\
      (_rATE8 < 200)))))) ==>
      ((((0 <= res.`9) /\ (res.`9 <= 18446744073709551615)) /\
       ((is_init res.`11 0 800) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 128))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`8 k 1) =
        ((is_init _b_buf3 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 128)))) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 128))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`6 k 1) =
        ((is_init _b_buf2 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 128)))) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 128))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`4 k 1) =
        ((is_init _b_buf1 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 128)))) /\
       ((foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        (((0 <= k) /\ (k <= 18446744073709551615)) /\
        (((0 <= k) /\ (k <= 18446744073709551615)) /\
        (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
        ((0 <= (_offset + _lEN)) /\
        ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 128))) /\
       (foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_buf0 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
       (iota_ 0 128))))))))) /\
      (valid res.`12))].
proof.
conseq ( a128_squeeze_array_avx2x4_eq) (KECCAK128.__squeeze_array_avx2x4_trace  _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _st _b_st _rATE8) => //.
 smt().
qed.

  equiv aBUFLEN_dumpstate_array_avx2_eq : M(Syscall).aBUFLEN____dumpstate_array_avx2 ~ KECCAK536.M.__dumpstate_array_avx2 : ={arg}==> ={res}.
  proof.
    proc; inline *; sim. 
qed.  


lemma aBUFLEN____dumpstate_array_avx2_trace _buf _b_buf _offset _lEN _st _b_st :
      hoare [M(Syscall).aBUFLEN____dumpstate_array_avx2 :
      (((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\ ((_b_buf = b_buf) /\ (_buf = buf)))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((0 <= _offset) /\ (0 <= _lEN)) /\ ((_offset + _lEN) <= 536)) /\
       (is_init _b_st 0 224)) /\
      (_lEN <= 200)))))) ==>
      ((((0 <= res.`3) /\ (res.`3 <= 18446744073709551615)) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 536))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`2 k 1) =
        ((is_init _b_buf k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 536)))) /\
       (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
       (((0 <= (_offset + _lEN)) /\
        ((_offset + _lEN) <= 18446744073709551615)) /\
       (res.`3 = (_offset + _lEN)))))) /\
      (valid res.`4))].
proof.
  conseq (aBUFLEN_dumpstate_array_avx2_eq) (KECCAK536.__dumpstate_array_avx2_trace  _buf _b_buf _offset _lEN _st _b_st) => //. 
 smt().
qed.


  equiv aBUFLEN_dumpstate_array_avx2x4_eq : M(Syscall).aBUFLEN____dumpstate_array_avx2x4 ~ KECCAK536.M.__dumpstate_array_avx2x4 : ={arg}==> ={res}.
proof.
 proc; inline *; sim.
qed.


lemma aBUFLEN____dumpstate_array_avx2x4_trace _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _st _b_st :
      hoare [M(Syscall).aBUFLEN____dumpstate_array_avx2x4 :
      (((_b_st = b_st) /\
       ((_st = st) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf3 = b_buf3) /\
       ((_buf3 = buf3) /\
       ((_b_buf2 = b_buf2) /\
       ((_buf2 = buf2) /\
       ((_b_buf1 = b_buf1) /\
       ((_buf1 = buf1) /\ ((_b_buf0 = b_buf0) /\ (_buf0 = buf0)))))))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((0 <= _offset) /\ (0 <= _lEN)) /\ (is_init _b_st 0 800)) /\
       ((_offset + _lEN) <= 536)) /\
      (_lEN <= 200)))))) ==>
      ((((0 <= res.`9) /\ (res.`9 <= 18446744073709551615)) /\
       ((((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
        (((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)) /\
        (res.`9 = (_offset + _lEN)))) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 536))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`8 k 1) =
        ((is_init _b_buf3 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 536)))) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 536))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`6 k 1) =
        ((is_init _b_buf2 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 536)))) /\
       (((foldr (fun x => (fun acc => (x /\ acc))) true
         (map
         (fun k =>
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= k) /\ (k <= 18446744073709551615)) /\
         (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
         ((0 <= (_offset + _lEN)) /\
         ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 536))) /\
        (foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        ((is_init res.`4 k 1) =
        ((is_init _b_buf1 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
        (iota_ 0 536)))) /\
       ((foldr (fun x => (fun acc => (x /\ acc))) true
        (map
        (fun k =>
        (((0 <= k) /\ (k <= 18446744073709551615)) /\
        (((0 <= k) /\ (k <= 18446744073709551615)) /\
        (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
        ((0 <= (_offset + _lEN)) /\
        ((_offset + _lEN) <= 18446744073709551615)))))) (iota_ 0 536))) /\
       (foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_buf0 k 1) \/ ((_offset <= k) /\ (k < (_offset + _lEN))))))
       (iota_ 0 536))))))))) /\
      (valid res.`10))].
proof.
 conseq (aBUFLEN_dumpstate_array_avx2x4_eq) (KECCAK536.__dumpstate_array_avx2x4_trace _buf0 _b_buf0 _buf1 _b_buf1 _buf2 _b_buf2 _buf3 _b_buf3 _offset _lEN _st _b_st) => //. 
 smt().
qed.

equiv a1568_absorb_array_avx2_eq : M(Syscall).a1568____absorb_array_avx2 ~ KECCAK1568.M.__absorb_array_avx2 : ={arg}==> ={res}.
proof.
    proc; inline *; sim. 
qed.

lemma a1568____absorb_array_avx2_trace _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a1568____absorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_st = b_st) /\ (_st = st)))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((0 <= _offset) /\ (0 <= _lEN)) /\ ((_offset + _lEN) <= 1568)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
       (is_init _b_buf _offset _lEN)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`3) /\ (res.`3 <= 18446744073709551615)) /\
       (is_init res.`2 0 224)) /\
      (valid res.`4))].
proof.
  conseq ( a1568_absorb_array_avx2_eq) (KECCAK1568.__absorb_array_avx2_trace  _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.

equiv a1600_absorb_array_avx2_eq : M(Syscall).a1600____absorb_array_avx2 ~ KECCAK1600.M.__absorb_array_avx2 : ={arg}==> ={res}.
proof.
    proc; inline *; sim. 
qed.

lemma a1600____absorb_array_avx2_trace _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB :
      hoare [M(Syscall).a1600____absorb_array_avx2 :
      (((_tRAILB = tRAILB) /\
       ((_rATE8 = rATE8) /\
       ((_lEN = lEN) /\
       ((_offset = offset) /\
       ((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_st = b_st) /\ (_st = st)))))))) /\
      (((0 <= _offset) /\ (_offset <= 18446744073709551615)) /\
      (((0 <= _tRAILB) /\ (_tRAILB < 256)) /\
      (((0 <= _lEN) /\ (_lEN <= 18446744073709551615)) /\
      (((0 <= (_offset + _lEN)) /\
       ((_offset + _lEN) <= 18446744073709551615)) /\
      (((((((0 <= _offset) /\ (0 <= _lEN)) /\ ((_offset + _lEN) <= 1600)) /\
          (0 < _rATE8)) /\
         (_rATE8 < 200)) /\
       (is_init _b_buf _offset _lEN)) /\
      (is_init _b_st 0 224))))))) ==>
      ((((0 <= res.`3) /\ (res.`3 <= 18446744073709551615)) /\
       (is_init res.`2 0 224)) /\
      (valid res.`4))].
proof.
  conseq ( a1600_absorb_array_avx2_eq) (KECCAK1600.__absorb_array_avx2_trace  _st _b_st _buf _b_buf _offset _lEN _rATE8 _tRAILB) => //.
 smt().
qed.



lemma _sha3_512A_A33_trace _out _b_out _in _b_in :
      hoare [M(Syscall)._sha3_512A_A33 :
      (((_b_in = b_in) /\
       ((_in = in_0) /\ ((_b_out = b_out) /\ (_out = out)))) /\
      (is_init _b_in 0 33)) ==> ((is_init res.`2 0 64) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a64____squeeze_array_avx2_trace param_3 b_param param_2 param_1 
       param_0 (BArray224.init_arr (W8.of_int 255) 224) param).
auto .
ecall (a33____absorb_array_avx2_trace param_9 (BArray224.init_arr
                                              (W8.of_int 255) 224) param_8 
       (BArray33.init_arr (W8.of_int 255) 33) param_7 param_6 param_5 
       param_4).
auto .
ecall (__state_init_avx2_trace).
auto .
rewrite /is_init /valid => &m /> *; do split;1..2:
smt (all_cat BArray224.init_arrP BArray33.init_arrP and_iota).
move => ?????????H??;do split; 2..:
smt (all_cat BArray224.init_arrP BArray33.init_arrP and_iota);
     have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 
qed .

lemma _sha3_512A_A64_trace _out _b_out _in _b_in :
      hoare [M(Syscall)._sha3_512A_A64 :
      (((_b_in = b_in) /\
       ((_in = in_0) /\ ((_b_out = b_out) /\ (_out = out)))) /\
      (is_init _b_in 0 64)) ==> ((is_init res.`2 0 64) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a64____squeeze_array_avx2_trace param_3 b_param param_2 param_1 
       param_0 (BArray224.init_arr (W8.of_int 255) 224) param).
auto .
ecall (a64____absorb_array_avx2_trace param_9 (BArray224.init_arr
                                              (W8.of_int 255) 224) param_8 
       (BArray64.init_arr (W8.of_int 255) 64) param_7 param_6 param_5 
       param_4).
auto .
ecall (__state_init_avx2_trace).
auto .
rewrite /is_init /valid => &m /> *; do split;1..2:
smt (all_cat BArray224.init_arrP BArray64.init_arrP and_iota).
move => ?????????H??;do split; 2..:
smt (all_cat BArray224.init_arrP BArray64.init_arrP and_iota);
     have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 
qed .

lemma _shake256_A128__A32_A1_trace _out _b_out _seed _b_seed _nonce _b_nonce :
      hoare [M(Syscall)._shake256_A128__A32_A1 :
      (((_b_nonce = b_nonce) /\
       ((_nonce = nonce) /\
       ((_b_seed = b_seed) /\
       ((_seed = seed) /\ ((_b_out = b_out) /\ (_out = out)))))) /\
      ((is_init _b_seed 0 32) /\ (is_init _b_nonce 0 1))) ==>
      ((is_init res.`2 0 128) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a128____squeeze_array_avx2_trace param_3 b_param param_2 param_1 
       param_0 (BArray224.init_arr (W8.of_int 255) 224) param).
auto .
ecall (a1____pabsorb_array_avx2_trace param_11 (BArray200.init_arr
                                               (W8.of_int 255) 200) param_10 
       param_9 (BArray224.init_arr (W8.of_int 255) 224) param_8 (
                                                                BArray1.init_arr
                                                                (W8.of_int
                                                                255) 1) 
       param_7 param_6 param_5 param_4).
auto .
ecall (a32____pabsorb_array_avx2_trace param_19 (BArray200.init_arr
                                                (W8.of_int 255) 200) 
       param_18 param_17 (BArray224.init_arr (W8.of_int 255) 224) param_16 
       (BArray32.init_arr (W8.of_int 255) 32) param_15 param_14 param_13 
       param_12).
auto .
ecall (__pstate_init_avx2_trace param_20 b_param_0).
auto .
rewrite /is_init /valid => &m /> *; do split;1..3:
smt (all_cat and_iota BArray32.init_arrP BArray200.init_arrP BArray224.init_arrP).
move => *; do split;1:
smt (all_cat BArray224.init_arrP BArray64.init_arrP BArray1.init_arrP and_iota).
move => ?????????H??;do split; 2..:
smt (all_cat BArray224.init_arrP BArray64.init_arrP and_iota);
     have := H; rewrite and_iota /= => HH;move => i *;have := HH i _; smt(). 
qed .

lemma _shake256x4_A128__A32_A1_trace _out0 _b_out0 _out1 _b_out1 _out2 _b_out2 _out3 _b_out3 _seed _b_seed _nonces _b_nonces :
      hoare [M(Syscall)._shake256x4_A128__A32_A1 :
      (((_b_nonces = b_nonces) /\
       ((_nonces = nonces) /\
       ((_b_seed = b_seed) /\
       ((_seed = seed) /\
       ((_b_out3 = b_out3) /\
       ((_out3 = out3) /\
       ((_b_out2 = b_out2) /\
       ((_out2 = out2) /\
       ((_b_out1 = b_out1) /\
       ((_out1 = out1) /\ ((_b_out0 = b_out0) /\ (_out0 = out0)))))))))))) /\
      ((is_init _b_seed 0 32) /\ (is_init _b_nonces 0 4))) ==>
      (((((is_init res.`2 0 128) /\ (is_init res.`4 0 128)) /\
        (is_init res.`6 0 128)) /\
       (is_init res.`8 0 128)) /\
      (valid res.`9))].
proof.
proc; auto .
ecall (a128____squeeze_array_avx2x4_trace param_6 b_param_2 param_5 b_param_1 
       param_4 b_param_0 param_3 b_param param_2 param_1 param_0 (
                                                                 BArray800.init_arr
                                                                 (W8.of_int
                                                                 255) 800) 
       param).
auto .
ecall (a1____absorb_array_avx2x4_trace param_16 (BArray800.init_arr
                                                (W8.of_int 255) 800) 
       param_15 param_14 b_param_6 param_13 b_param_5 param_12 b_param_4 
       param_11 b_param_3 param_10 param_9 param_8 param_7).
auto .
ecall (a32____absorb_bcast_array_avx2x4_trace param_23 (BArray800.init_arr
                                                       (W8.of_int 255) 800) 
       param_22 param_21 (BArray32.init_arr (W8.of_int 255) 32) param_20 
       param_19 param_18 param_17).
auto .
ecall (__state_init_avx2x4_trace param_24 b_param_7).
auto .
rewrite /is_init /valid !and_iota => &m /> *; do split;1..2:
smt (all_cat  BArray800.init_arrP BArray32.init_arrP and_iota SBArray4_1.is_init_cell_get).
move => *;do split => ???;1..4:
smt (all_cat  BArray800.init_arrP BArray32.init_arrP and_iota SBArray4_1.is_init_cell_get).
move => ???????????;rewrite !and_iota => H0 H1 H2 H3 *;
do split;5:
smt (all_cat BArray224.init_arrP BArray64.init_arrP and_iota); move => i *.
have := H3 i _; smt(). 
have := H2 i _; smt(). 
have := H1 i _; smt(). 
have := H0 i _; smt(). 

qed .

lemma _shake128x4_absorb_A32_A2_trace _st _b_st _seed _b_seed _pos _b_pos :
      hoare [M(Syscall)._shake128x4_absorb_A32_A2 :
      (((_b_pos = b_pos) /\
       ((_pos = pos) /\
       ((_b_seed = b_seed) /\
       ((_seed = seed) /\ ((_b_st = b_st) /\ (_st = st)))))) /\
      ((is_init _b_seed 0 32) /\ (is_init _b_pos 0 8))) ==>
      ((is_init res.`2 0 800) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a2____absorb_array_avx2x4_trace param_8 (BArray800.init_arr
                                               (W8.of_int 255) 800) param_7 
       param_6 b_param_2 param_5 b_param_1 param_4 b_param_0 param_3 
       b_param param_2 param_1 param_0 param).
auto .
ecall (a32____absorb_bcast_array_avx2x4_trace param_15 (BArray800.init_arr
                                                       (W8.of_int 255) 800) 
       param_14 param_13 (BArray32.init_arr (W8.of_int 255) 32) param_12 
       param_11 param_10 param_9).
auto .
ecall (__state_init_avx2x4_trace param_16 b_param_3).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray32.init_arrP BArray800.init_arrP SBArray8_2.is_init_cell_get).
qed .

lemma _shake128_next_state_trace _buf _b_buf :
      hoare [M(Syscall)._shake128_next_state :
      (((_b_buf = b_buf) /\ (_buf = buf)) /\ (is_init _b_buf 0 536)) ==>
      ((is_init res.`2 0 536) /\ (valid res.`3))].
proof.
proc; auto .
ecall (aBUFLEN____dumpstate_array_avx2_trace param_2 (BArray536.init_arr
                                                     (W8.of_int 255) 536) 
       param_1 param_0 param (BArray224.init_arr (W8.of_int 255) 224)).
auto .
ecall (_keccakf1600_avx2_trace param_3 (BArray224.init_arr (W8.of_int 255)
                                       224)).
auto .
ecall (__state_from_pstate_avx2_trace param_4 b_param).
auto .
rewrite /is_init /valid !and_iota => &m /> *; do split;1:
smt (all_cat and_iota BArray224.init_arrP SBArray536_200.is_init_cell_get BArray536.init_arrP).
move => *;do split => ???;1:
smt (all_cat and_iota BArray224.init_arrP SBArray536_200.is_init_cell_get BArray536.init_arrP).
move => ????;rewrite !and_iota => ? H  *;
do split;2:
smt (all_cat BArray224.init_arrP BArray64.init_arrP and_iota); move => i *.
have /= := H i _;1: smt(). 
 smt (all_cat and_iota BArray224.init_arrP SBArray536_200.is_init_cell_get BArray536.init_arrP).
qed .

lemma _shake128x4_squeeze3blocks_trace _st _b_st _buf _b_buf :
      hoare [M(Syscall)._shake128x4_squeeze3blocks :
      (((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_st = b_st) /\ (_st = st)))) /\
      (is_init _b_st 0 800)) ==> ((is_init res.`4 0 2144) /\ (valid res.`5))].
proof.
proc; auto .
ecall (aBUFLEN____dumpstate_array_avx2x4_trace param_5 b_param_2 param_4 
       b_param_1 param_3 b_param_0 param_2 b_param param_1 param_0 param 
       (BArray800.init_arr (W8.of_int 255) 800)).
auto .
ecall (_keccakf1600_avx2x4_trace param_6 (BArray800.init_arr (W8.of_int 255)
                                         800)).
auto .
ecall (aBUFLEN____dumpstate_array_avx2x4_trace param_13 b_param_6 param_12 
       b_param_5 param_11 b_param_4 param_10 b_param_3 param_9 param_8 
       param_7 (BArray800.init_arr (W8.of_int 255) 800)).
auto .
ecall (_keccakf1600_avx2x4_trace param_14 (BArray800.init_arr (W8.of_int 255)
                                          800)).
auto .
ecall (aBUFLEN____dumpstate_array_avx2x4_trace param_21 b_param_10 param_20 
       b_param_9 param_19 b_param_8 param_18 b_param_7 param_17 param_16 
       param_15 (BArray800.init_arr (W8.of_int 255) 800)).
auto .
ecall (_keccakf1600_avx2x4_trace param_22 (BArray800.init_arr (W8.of_int 255)
                                          800)).
auto. rewrite /is_init /valid /= => &m /> *. split.  smt( BArray800.init_arrP). 
move => ?????????; rewrite !and_iota =>H0 H1 H2 H3????;split;1:smt().
move => ????????; rewrite !and_iota =>H00 H01 H02 H03????;split;1:smt().
move => ????????; rewrite !and_iota =>H10 H11 H12 H13?;do split. 
move => i *.
rewrite !SBArray2144_536.is_init_cell_set => *;do split.
have /= := H0 (i-1608) _;1: smt().
have /= := H00 (i-1608) _;1: smt().
have /= := H10 (i-1608) _; smt().
smt(all_cat SBArray2144_536.is_init_cell_set SBArray2144_536.is_init_cell_get and_iota).

smt(all_cat).
qed .

lemma _sha3_256A_A1568_trace _out _b_out _in _b_in :
      hoare [M(Syscall)._sha3_256A_A1568 :
      (((_b_in = b_in) /\
       ((_in = in_0) /\ ((_b_out = b_out) /\ (_out = out)))) /\
      (is_init _b_in 0 1568)) ==> ((is_init res.`2 0 32) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a32____squeeze_array_avx2_trace param_3 b_param param_2 param_1 
       param_0 (BArray224.init_arr (W8.of_int 255) 224) param).
auto .
ecall (a1568____absorb_array_avx2_trace param_9 (BArray224.init_arr
                                                (W8.of_int 255) 224) 
       param_8 (BArray1568.init_arr (W8.of_int 255) 1568) param_7 param_6 
       param_5 param_4).
auto .
ecall (__state_init_avx2_trace).
auto .
rewrite /is_init /valid /= => &m /> *;do split;1..2:
smt (all_cat and_iota BArray224.init_arrP BArray1568.init_arrP).
move => ?????????; rewrite and_iota => H??; do split; last 
smt (all_cat and_iota BArray224.init_arrP BArray1568.init_arrP).
move => i *;
have /= := H i _;
smt (all_cat and_iota BArray224.init_arrP BArray1568.init_arrP).
qed .

lemma _shake256_A32__A1600_trace _out _b_out _in _b_in :
      hoare [M(Syscall)._shake256_A32__A1600 :
      (((_b_in = b_in) /\
       ((_in = in_0) /\ ((_b_out = b_out) /\ (_out = out)))) /\
      (is_init _b_in 0 1600)) ==> ((is_init res.`2 0 32) /\ (valid res.`3))].
proof.
proc; auto .
ecall (a32____squeeze_array_avx2_trace param_3 b_param param_2 param_1 
       param_0 (BArray224.init_arr (W8.of_int 255) 224) param).
auto .
ecall (a1600____absorb_array_avx2_trace param_9 (BArray224.init_arr
                                                (W8.of_int 255) 224) 
       param_8 (BArray1600.init_arr (W8.of_int 255) 1600) param_7 param_6 
       param_5 param_4).
auto .
ecall (__state_init_avx2_trace).
auto .
rewrite /is_init /valid /= => &m /> *;do split;1..2:
smt (all_cat and_iota BArray224.init_arrP BArray1600.init_arrP).
move => ?????????; rewrite and_iota => H??; do split; last 
smt (all_cat and_iota BArray224.init_arrP BArray1600.init_arrP).
move => i *;
have /= := H i _;
smt (all_cat and_iota BArray224.init_arrP BArray1600.init_arrP).
qed .

lemma _poly_add2_trace _rp _b_rp _bp _b_bp :
      hoare [M(Syscall)._poly_add2 :
      (((_b_bp = b_bp) /\ ((_bp = bp) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      ((is_init _b_bp 0 512) /\ (is_init _b_rp 0 512))) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_add2) /\ 0<=i).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma _poly_csubq_trace _rp _b_rp :
      hoare [M(Syscall)._poly_csubq :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_csubq) /\ 0<=i).
auto .
ecall (__csubq_trace param_0 param).
auto .
rewrite /is_init /valid /=.
smt (all_cat BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma __w256_interleave_u16_trace _al _ah :
      hoare [M(Syscall).__w256_interleave_u16 :
      (((_ah = ah) /\ (_al = al)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __w256_deinterleave_u16_trace __zero _a0 _a1 :
      hoare [M(Syscall).__w256_deinterleave_u16 :
      (((_a1 = a1) /\ ((_a0 = a0) /\ (__zero = _zero))) /\ true) ==>
      (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __mont_red_trace _lo _hi _qx16 _qinvx16 :
      hoare [M(Syscall).__mont_red :
      (((_qinvx16 = qinvx16) /\
       ((_qx16 = qx16) /\ ((_hi = hi) /\ (_lo = lo)))) /\
      true) ==> (true /\ (valid res.`2))].
proof.
proc; inline *; auto .
qed .

lemma __wmul_16u16_trace _x _y :
      hoare [M(Syscall).__wmul_16u16 :
      (((_y = y) /\ (_x = x)) /\ true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma __schoolbook16x_trace _are _aim _bre _bim _zeta _zetaqinv _qx16 _qinvx16 _sign :
      hoare [M(Syscall).__schoolbook16x :
      (((_sign = sign) /\
       ((_qinvx16 = qinvx16) /\
       ((_qx16 = qx16) /\
       ((_zetaqinv = zetaqinv) /\
       ((_zeta = zeta_0) /\
       ((_bim = bim) /\ ((_bre = bre) /\ ((_aim = aim) /\ (_are = are))))))))) /\
      true) ==> (true /\ (valid res.`3))].
proof.
proc; inline *; auto .
qed .

lemma _poly_basemul_trace _rp _b_rp _ap _b_ap _bp _b_bp :
      hoare [M(Syscall)._poly_basemul :
      (((_b_bp = b_bp) /\
       ((_bp = bp) /\
       ((_b_ap = b_ap) /\ ((_ap = ap) /\ ((_b_rp = b_rp) /\ (_rp = rp)))))) /\
      ((is_init _b_ap 0 512) /\ (is_init _b_bp 0 512))) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__schoolbook16x_trace param_7 param_6 param_5 param_4 param_3 
       param_2 param_1 param_0 param).
auto .
ecall (__schoolbook16x_trace param_16 param_15 param_14 param_13 param_12 
       param_11 param_10 param_9 param_8).
auto .
ecall (__schoolbook16x_trace param_25 param_24 param_23 param_22 param_21 
       param_20 param_19 param_18 param_17).
auto .
ecall (__schoolbook16x_trace param_34 param_33 param_32 param_31 param_30 
       param_29 param_28 param_27 param_26).
auto .
ecall (__schoolbook16x_trace param_43 param_42 param_41 param_40 param_39 
       param_38 param_37 param_36 param_35).
auto .
ecall (__schoolbook16x_trace param_52 param_51 param_50 param_49 param_48 
       param_47 param_46 param_45 param_44).
auto .
ecall (__schoolbook16x_trace param_61 param_60 param_59 param_58 param_57 
       param_56 param_55 param_54 param_53).
auto .
ecall (__schoolbook16x_trace param_70 param_69 param_68 param_67 param_66 
       param_65 param_64 param_63 param_62).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma _i_poly_frombytes_trace _rp _b_rp _ap _b_ap :
      hoare [M(Syscall)._i_poly_frombytes :
      (((_b_ap = b_ap) /\ ((_ap = ap) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_ap 0 384)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__i_poly_frombytes) /\ is_init b_rp 0 (256*i) /\ 0<=i /\ i<=2).
auto .
ecall (__shuffle1_trace param_0 param).
auto .
ecall (__shuffle1_trace param_2 param_1).
auto .
ecall (__shuffle1_trace param_4 param_3).
auto .
ecall (__shuffle2_trace param_6 param_5).
auto .
ecall (__shuffle2_trace param_8 param_7).
auto .
ecall (__shuffle2_trace param_10 param_9).
auto .
ecall (__shuffle4_trace param_12 param_11).
auto .
ecall (__shuffle4_trace param_14 param_13).
auto .
ecall (__shuffle4_trace param_16 param_15).
auto .
ecall (__shuffle8_trace param_18 param_17).
auto .
ecall (__shuffle8_trace param_20 param_19).
auto .
ecall (__shuffle8_trace param_22 param_21).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma _poly_frommont_trace _rp _b_rp :
      hoare [M(Syscall)._poly_frommont :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_frommont) /\ 0<=i).
auto .
ecall (__fqmulx16_trace param_2 param_1 param_0 param).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma _i_poly_frommsg_trace _rp _b_rp _ap _b_ap :
      hoare [M(Syscall)._i_poly_frommsg :
      (((_b_ap = b_ap) /\ ((_ap = ap) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_ap 0 32)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__i_poly_frommsg) /\ ((((0 <= i) /\ (i <= 4)) /\
           (is_init b_rp 0 ((32 * i) * 2))) /\
           (is_init b_rp 256 ((32 * i) * 2)))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __cbd2_trace _rp _b_rp _buf _b_buf :
      hoare [M(Syscall).__cbd2 :
      (((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_buf 0 128)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___cbd2) /\  (((0 <= i) /\ (i <= 4)) /\
                                (is_init b_rp 0 ((32 * i) * 4)))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __poly_cbd_eta1_trace _rp _b_rp _buf _b_buf :
      hoare [M(Syscall).__poly_cbd_eta1 :
      (((_b_buf = b_buf) /\ ((_buf = buf) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_buf 0 128)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__cbd2_trace param_0 b_param_0 param b_param).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP SBArray128_128.is_init_cell_get).
qed .

lemma _poly_getnoise_eta2_trace _rp _b_rp _seed _b_seed _nonce :
      hoare [M(Syscall)._poly_getnoise_eta2 :
      (((_nonce = nonce) /\
       ((_b_seed = b_seed) /\
       ((_seed = seed) /\ ((_b_rp = b_rp) /\ (_rp = rp))))) /\
      (is_init _b_seed 0 32)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__poly_cbd_eta1_trace param_0 b_param param (BArray128.init_arr
                                                   (W8.of_int 255) 128)).
auto .
ecall (_shake256_A128__A32_A1_trace param_3 b_param_1 param_2 (
                                                              BArray32.init_arr
                                                              (W8.of_int 255)
                                                              32) param_1 
       b_param_0).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray128.init_arrP BArray32.init_arrP BArray512.init_arrP).
qed .

lemma _poly_getnoise_eta1_4x_trace _r0 _b_r0 _r1 _b_r1 _r2 _b_r2 _r3 _b_r3 _seed _b_seed _nonce :
      hoare [M(Syscall)._poly_getnoise_eta1_4x :
      (((_nonce = nonce) /\
       ((_b_seed = b_seed) /\
       ((_seed = seed) /\
       ((_b_r3 = b_r3) /\
       ((_r3 = r3) /\
       ((_b_r2 = b_r2) /\
       ((_r2 = r2) /\
       ((_b_r1 = b_r1) /\ ((_r1 = r1) /\ ((_b_r0 = b_r0) /\ (_r0 = r0))))))))))) /\
      (is_init _b_seed 0 32)) ==>
      (((((is_init res.`2 0 512) /\ (is_init res.`4 0 512)) /\
        (is_init res.`6 0 512)) /\
       (is_init res.`8 0 512)) /\
      (valid res.`9))].
proof.
proc; auto .
ecall (__poly_cbd_eta1_trace param_0 b_param param (BArray128.init_arr
                                                   (W8.of_int 255) 128)).
auto .
ecall (__poly_cbd_eta1_trace param_2 b_param_0 param_1 (BArray128.init_arr
                                                       (W8.of_int 255) 128)).
auto .
ecall (__poly_cbd_eta1_trace param_4 b_param_1 param_3 (BArray128.init_arr
                                                       (W8.of_int 255) 128)).
auto .
ecall (__poly_cbd_eta1_trace param_6 b_param_2 param_5 (BArray128.init_arr
                                                       (W8.of_int 255) 128)).
auto .
ecall (_shake256x4_A128__A32_A1_trace param_12 b_param_7 param_11 b_param_6 
       param_10 b_param_5 param_9 b_param_4 param_8 (BArray32.init_arr
                                                    (W8.of_int 255) 32) 
       param_7 b_param_3).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray128.init_arrP BArray32.init_arrP BArray512.init_arrP).
qed .

lemma __invntt___butterfly64x_trace _rl0 _rl1 _rl2 _rl3 _rh0 _rh1 _rh2 _rh3 _zl0 _zl1 _zh0 _zh1 _qx16 :
      hoare [M(Syscall).__invntt___butterfly64x :
      (((_qx16 = qx16) /\
       ((_zh1 = zh1) /\
       ((_zh0 = zh0) /\
       ((_zl1 = zl1) /\
       ((_zl0 = zl0) /\
       ((_rh3 = rh3) /\
       ((_rh2 = rh2) /\
       ((_rh1 = rh1) /\
       ((_rh0 = rh0) /\
       ((_rl3 = rl3) /\ ((_rl2 = rl2) /\ ((_rl1 = rl1) /\ (_rl0 = rl0))))))))))))) /\
      true) ==> (true /\ (valid res.`9))].
proof.
proc; inline *; auto .
qed .

lemma _poly_invntt_trace _rp _b_rp :
      hoare [M(Syscall)._poly_invntt :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_invntt) /\  (((((0 <= i) /\ b_r6) /\ b_r4) /\ b_r2) /\
  b_r0)).
auto .
ecall (__fqmulprecomp16x_trace param_2 param_1 param_0 param).
auto .
ecall (__fqmulprecomp16x_trace param_6 param_5 param_4 param_3).
auto .
ecall (__fqmulprecomp16x_trace param_10 param_9 param_8 param_7).
auto .
ecall (__fqmulprecomp16x_trace param_14 param_13 param_12 param_11).
auto .
ecall (__invntt___butterfly64x_trace param_27 param_26 param_25 param_24 
       param_23 param_22 param_21 param_20 param_19 param_18 param_17 
       param_16 param_15).
auto .
rewrite /is_init /valid /= => &m /> *.
smt (all_cat BArray512.init_arrP).
auto .
while ((valid trace__poly_invntt) /\ ((0 <= i) /\
                                      ((2 <= i) ? (((b_r6 /\ b_r4) /\ b_r2) /\
                                                  b_r0) : true))).
auto .
ecall (__red16x_trace param_30 param_29 param_28).
auto .
ecall (__invntt___butterfly64x_trace param_43 param_42 param_41 param_40 
       param_39 param_38 param_37 param_36 param_35 param_34 param_33 
       param_32 param_31).
auto .
ecall (__shuffle8_trace param_45 param_44).
auto .
ecall (__shuffle8_trace param_47 param_46).
auto .
ecall (__shuffle8_trace param_49 param_48).
auto .
ecall (__shuffle8_trace param_51 param_50).
auto .
ecall (__red16x_trace param_54 param_53 param_52).
auto .
ecall (__invntt___butterfly64x_trace param_67 param_66 param_65 param_64 
       param_63 param_62 param_61 param_60 param_59 param_58 param_57 
       param_56 param_55).
auto .
ecall (__shuffle4_trace param_69 param_68).
auto .
ecall (__shuffle4_trace param_71 param_70).
auto .
ecall (__shuffle4_trace param_73 param_72).
auto .
ecall (__shuffle4_trace param_75 param_74).
auto .
ecall (__red16x_trace param_78 param_77 param_76).
auto .
ecall (__invntt___butterfly64x_trace param_91 param_90 param_89 param_88 
       param_87 param_86 param_85 param_84 param_83 param_82 param_81 
       param_80 param_79).
auto .
ecall (__shuffle2_trace param_93 param_92).
auto .
ecall (__shuffle2_trace param_95 param_94).
auto .
ecall (__shuffle2_trace param_97 param_96).
auto .
ecall (__shuffle2_trace param_99 param_98).
auto .
ecall (__red16x_trace param_102 param_101 param_100).
auto .
ecall (__invntt___butterfly64x_trace param_115 param_114 param_113 param_112 
       param_111 param_110 param_109 param_108 param_107 param_106 param_105 
       param_104 param_103).
auto .
ecall (__shuffle1_trace param_117 param_116).
auto .
ecall (__shuffle1_trace param_119 param_118).
auto .
ecall (__shuffle1_trace param_121 param_120).
auto .
ecall (__shuffle1_trace param_123 param_122).
auto .
ecall (__invntt___butterfly64x_trace param_136 param_135 param_134 param_133 
       param_132 param_131 param_130 param_129 param_128 param_127 param_126 
       param_125 param_124).
auto .
ecall (__red16x_trace param_139 param_138 param_137).
auto .
ecall (__red16x_trace param_142 param_141 param_140).
auto .
ecall (__red16x_trace param_145 param_144 param_143).
auto .
ecall (__red16x_trace param_148 param_147 param_146).
auto .
ecall (__invntt___butterfly64x_trace param_161 param_160 param_159 param_158 
       param_157 param_156 param_155 param_154 param_153 param_152 param_151 
       param_150 param_149).
auto.
rewrite /is_init /valid /= => * /=; do split => *; rewrite !all_cat;
smt (all_cat  BArray512.init_arrP).
auto .
rewrite /is_init /valid /= => * /=; do split => *;
smt (all_cat  BArray512.init_arrP).
qed .

lemma __butterfly64x_trace _rl0 _rl1 _rl2 _rl3 _rh0 _rh1 _rh2 _rh3 _zl0 _zl1 _zh0 _zh1 _qx16 :
      hoare [M(Syscall).__butterfly64x :
      (((_qx16 = qx16) /\
       ((_zh1 = zh1) /\
       ((_zh0 = zh0) /\
       ((_zl1 = zl1) /\
       ((_zl0 = zl0) /\
       ((_rh3 = rh3) /\
       ((_rh2 = rh2) /\
       ((_rh1 = rh1) /\
       ((_rh0 = rh0) /\
       ((_rl3 = rl3) /\ ((_rl2 = rl2) /\ ((_rl1 = rl1) /\ (_rl0 = rl0))))))))))))) /\
      true) ==> (true /\ (valid res.`9))].
proof.
proc; inline *; auto .
qed .

lemma _poly_ntt_trace _rp _b_rp :
      hoare [M(Syscall)._poly_ntt :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_ntt) /\ 0<=i).
auto .
ecall (__red16x_trace param_1 param_0 param).
auto .
ecall (__red16x_trace param_4 param_3 param_2).
auto .
ecall (__red16x_trace param_7 param_6 param_5).
auto .
ecall (__red16x_trace param_10 param_9 param_8).
auto .
ecall (__red16x_trace param_13 param_12 param_11).
auto .
ecall (__red16x_trace param_16 param_15 param_14).
auto .
ecall (__red16x_trace param_19 param_18 param_17).
auto .
ecall (__red16x_trace param_22 param_21 param_20).
auto .
ecall (__butterfly64x_trace param_35 param_34 param_33 param_32 param_31 
       param_30 param_29 param_28 param_27 param_26 param_25 param_24 
       param_23).
auto .
ecall (__butterfly64x_trace param_48 param_47 param_46 param_45 param_44 
       param_43 param_42 param_41 param_40 param_39 param_38 param_37 
       param_36).
auto .
ecall (__shuffle1_trace param_50 param_49).
auto .
ecall (__shuffle1_trace param_52 param_51).
auto .
ecall (__shuffle1_trace param_54 param_53).
auto .
ecall (__shuffle1_trace param_56 param_55).
auto .
ecall (__butterfly64x_trace param_69 param_68 param_67 param_66 param_65 
       param_64 param_63 param_62 param_61 param_60 param_59 param_58 
       param_57).
auto .
ecall (__shuffle2_trace param_71 param_70).
auto .
ecall (__shuffle2_trace param_73 param_72).
auto .
ecall (__shuffle2_trace param_75 param_74).
auto .
ecall (__shuffle2_trace param_77 param_76).
auto .
ecall (__butterfly64x_trace param_90 param_89 param_88 param_87 param_86 
       param_85 param_84 param_83 param_82 param_81 param_80 param_79 
       param_78).
auto .
ecall (__shuffle4_trace param_92 param_91).
auto .
ecall (__shuffle4_trace param_94 param_93).
auto .
ecall (__shuffle4_trace param_96 param_95).
auto .
ecall (__shuffle4_trace param_98 param_97).
auto .
ecall (__butterfly64x_trace param_111 param_110 param_109 param_108 param_107 
       param_106 param_105 param_104 param_103 param_102 param_101 param_100 
       param_99).
auto .
ecall (__shuffle8_trace param_113 param_112).
auto .
ecall (__shuffle8_trace param_115 param_114).
auto .
ecall (__shuffle8_trace param_117 param_116).
auto .
ecall (__shuffle8_trace param_119 param_118).
auto .
ecall (__butterfly64x_trace param_132 param_131 param_130 param_129 param_128 
       param_127 param_126 param_125 param_124 param_123 param_122 param_121 
       param_120).
auto .
rewrite /is_init /valid /= => *; do split => *; rewrite !all_cat;
smt (all_cat BArray512.init_arrP).
auto .
ecall (__butterfly64x_trace param_145 param_144 param_143 param_142 param_141 
       param_140 param_139 param_138 param_137 param_136 param_135 param_134 
       param_133).
auto .
ecall (__butterfly64x_trace param_158 param_157 param_156 param_155 param_154 
       param_153 param_152 param_151 param_150 param_149 param_148 param_147 
       param_146).
auto .
rewrite /is_init /valid /= => *; do split;
smt (all_cat BArray512.init_arrP).
qed .

lemma __poly_reduce_trace _rp _b_rp :
      hoare [M(Syscall).__poly_reduce :
      (((_b_rp = b_rp) /\ (_rp = rp)) /\ (is_init _b_rp 0 512)) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___poly_reduce) /\ 0<=i).
auto .
ecall (__red16x_trace param_1 param_0 param).
auto .
rewrite /is_init /valid /=.
smt (all_cat BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma _poly_sub_trace _rp _b_rp _ap _b_ap _bp _b_bp :
      hoare [M(Syscall)._poly_sub :
      (((_b_bp = b_bp) /\
       ((_bp = bp) /\
       ((_b_ap = b_ap) /\ ((_ap = ap) /\ ((_b_rp = b_rp) /\ (_rp = rp)))))) /\
      ((is_init _b_ap 0 512) /\ (is_init _b_bp 0 512))) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__poly_sub) /\ (0 <= i) /\ (is_init b_rp 0 (32 * i))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma _i_poly_tobytes_trace _rp _b_rp _a _b_a :
      hoare [M(Syscall)._i_poly_tobytes :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_a 0 512)) ==>
      (((is_init res.`2 0 384) /\ (is_init res.`4 0 512)) /\ (valid res.`5))].
proof.
proc; auto .
while ((valid trace__i_poly_tobytes) /\ 0 <= i /\ i<=2 /\ is_init b_rp 0 (i*192)).
auto .
ecall (__shuffle8_trace param_0 param).
auto .
ecall (__shuffle8_trace param_2 param_1).
auto .
ecall (__shuffle8_trace param_4 param_3).
auto .
ecall (__shuffle4_trace param_6 param_5).
auto .
ecall (__shuffle4_trace param_8 param_7).
auto .
ecall (__shuffle4_trace param_10 param_9).
auto .
ecall (__shuffle2_trace param_12 param_11).
auto .
ecall (__shuffle2_trace param_14 param_13).
auto .
ecall (__shuffle2_trace param_16 param_15).
auto .
ecall (__shuffle1_trace param_18 param_17).
auto .
ecall (__shuffle1_trace param_20 param_19).
auto .
ecall (__shuffle1_trace param_22 param_21).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (_poly_csubq_trace param_23 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma _i_poly_tomsg_trace _rp _b_rp _a _b_a :
      hoare [M(Syscall)._i_poly_tomsg :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_a 0 512)) ==>
      (((is_init res.`2 0 32) /\ (is_init res.`4 0 512)) /\ (valid res.`5))].
proof.
proc; auto .
while ((valid trace__i_poly_tomsg) /\ ((0 <= i) /\ (i <= 8)) /\
                                       (is_init b_rp 0 (4 * i))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (_poly_csubq_trace param (BArray512.init_arr (W8.of_int 255) 512)).
auto .
rewrite /is_init /valid /= .
smt (BArray512.init_arrP all_cat).
qed .

lemma _i_poly_compress_trace _rp _b_rp _a _b_a :
      hoare [M(Syscall)._i_poly_compress :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_a 0 512)) ==>
      (((is_init res.`2 0 160) /\ (is_init res.`4 0 512)) /\ (valid res.`5))].
proof.
proc; auto .
while ((valid trace__i_poly_compress) /\ 0<=i /\ i<= 8 /\ is_init b_rp 0 (i*20)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (_poly_csubq_trace param (BArray512.init_arr (W8.of_int 255) 512)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray512.init_arrP).
qed .

lemma _i_poly_decompress_trace _rp _b_rp _a _b_a :
      hoare [M(Syscall)._i_poly_decompress :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_a 0 160)) ==> ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__i_poly_decompress) /\ 0<=i /\ i<= 16 /\ is_init b_rp 0 (i*32)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __polyvec_add2_trace _r _b_r _b _b_b :
      hoare [M(Syscall).__polyvec_add2 :
      (((_b_b = b_b) /\ ((_b = b) /\ ((_b_r = b_r) /\ (_r = r)))) /\
      ((is_init _b_b 0 2048) /\ (is_init _b_r 0 2048))) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_add2) /\ 0<=i /\ is_init b_r 0 2048 /\ is_init b_b 0 2048).
auto .
ecall (_poly_add2_trace param_0 b_param_0 param b_param).
auto .
rewrite /is_init /valid /= => &m /> *.
smt (SBArray2048_512.is_init_cell_get SBArray2048_512.is_init_cell_set 
     BArray512.init_arrP all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __polyvec_csubq_trace _r _b_r :
      hoare [M(Syscall).__polyvec_csubq :
      (((_b_r = b_r) /\ (_r = r)) /\ (is_init _b_r 0 2048)) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_csubq) /\ 0<=i /\ is_init b_r 0 2048).
auto .
ecall (_poly_csubq_trace param b_param).
auto .
rewrite /is_init /valid /=.
smt (all_cat SBArray2048_512.is_init_cell_set SBArray2048_512.is_init_cell_get BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __polyvec_invntt_trace _r _b_r :
      hoare [M(Syscall).__polyvec_invntt :
      (((_b_r = b_r) /\ (_r = r)) /\ (is_init _b_r 0 2048)) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_invntt) /\ 0<=i /\ is_init b_r 0 2048).
auto .
ecall (_poly_invntt_trace param b_param).
auto .
rewrite /is_init /valid /=.
smt (all_cat SBArray2048_512.is_init_cell_set SBArray2048_512.is_init_cell_get BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __polyvec_ntt_trace _r _b_r :
      hoare [M(Syscall).__polyvec_ntt :
      (((_b_r = b_r) /\ (_r = r)) /\ (is_init _b_r 0 2048)) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_ntt) /\ 0<=i /\ is_init b_r 0 2048).
auto .
ecall (_poly_ntt_trace param b_param).
auto .
rewrite /is_init /valid /=.
smt (all_cat SBArray2048_512.is_init_cell_set SBArray2048_512.is_init_cell_get BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __polyvec_reduce_trace _r _b_r :
      hoare [M(Syscall).__polyvec_reduce :
      (((_b_r = b_r) /\ (_r = r)) /\ (is_init _b_r 0 2048)) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_reduce) /\ 0<=i /\ is_init b_r 0 2048).
auto .
ecall (__poly_reduce_trace param b_param).
auto .
rewrite /is_init /valid /=.
smt (all_cat SBArray2048_512.is_init_cell_set SBArray2048_512.is_init_cell_get BArray512.init_arrP).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __i_polyvec_frombytes_trace _a _b_a :
      hoare [M(Syscall).__i_polyvec_frombytes :
      (((_b_a = b_a) /\ (_a = a)) /\ (is_init _b_a 0 1536)) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___i_polyvec_frombytes) /\ 0<=i /\ i<=4 /\ is_init b_r 0 (i*512) /\ is_init b_a 0 1536).
auto .
ecall (_i_poly_frombytes_trace param_0 b_param_0 param b_param).
auto .
rewrite /is_init /valid /=.
smt(all_cat SBArray2048_512.is_init_cell_set BArray2048.init_arrP BArray512.init_arrP SBArray1536_384.is_init_cell_get).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __i_polyvec_tobytes_trace _r _b_r _a _b_a :
      hoare [M(Syscall).__i_polyvec_tobytes :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_r = b_r) /\ (_r = r)))) /\
      (is_init _b_a 0 2048)) ==> ((is_init res.`2 0 1536) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___i_polyvec_tobytes) /\ 0<=i /\ i<=4 /\ is_init b_r 0 (i*384) /\ is_init b_a 0 2048).
auto .
ecall (_i_poly_tobytes_trace param_0 b_param_0 param b_param).
auto .
rewrite /is_init /valid /=.
smt(all_cat SBArray2048_512.is_init_cell_get SBArray2048_512.is_init_cell_set  BArray384.init_arrP BArray512.init_arrP SBArray1536_384.is_init_cell_set).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __polyvec_pointwise_acc_trace _r _b_r _a _b_a _b _b_b :
      hoare [M(Syscall).__polyvec_pointwise_acc :
      (((_b_b = b_b) /\
       ((_b = b) /\
       ((_b_a = b_a) /\ ((_a = a) /\ ((_b_r = b_r) /\ (_r = r)))))) /\
      ((is_init _b_a 0 2048) /\ (is_init _b_b 0 2048))) ==>
      ((is_init res.`2 0 512) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___polyvec_pointwise_acc)  /\ 0<=i /\ is_init b_a 0 2048 /\ is_init b_b 0 2048 ).
auto .
ecall (_poly_add2_trace param_0 (BArray512.init_arr (W8.of_int 255) 512) 
       param (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (_poly_basemul_trace param_3 b_param_1 param_2 b_param_0 param_1 
       b_param).
auto .
rewrite /is_init /valid /=.
smt (SBArray2048_512.is_init_cell_get SBArray2048_512.is_init_cell_set 
  BArray512.init_arrP all_cat).
auto .
ecall (_poly_basemul_trace param_6 b_param_4 param_5 b_param_3 param_4 
       b_param_2).
auto .
rewrite /is_init /valid /= .
smt (SBArray2048_512.is_init_cell_get SBArray2048_512.is_init_cell_set 
  BArray512.init_arrP all_cat).
qed .

lemma __i_polyvec_decompress_trace _r _b_r _rp _b_rp :
      hoare [M(Syscall).__i_polyvec_decompress :
      (((_b_rp = b_rp) /\ ((_rp = rp) /\ ((_b_r = b_r) /\ (_r = r)))) /\
      (is_init _b_rp 0 1568)) ==> ((is_init res.`2 0 2048) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___i_polyvec_decompress) /\  0<=k /\ k<=4 /\ is_init b_r 0 (k*512)).
auto .
while ((valid trace___i_polyvec_decompress) /\ 0<=i /\ i<=16 /\ 0<=k /\ k<4 /\ is_init b_r 0 (32*(16*k + i))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= .
smt (all_cat).
qed .

lemma __i_polyvec_compress_trace _rp _b_rp _a _b_a :
      hoare [M(Syscall).__i_polyvec_compress :
      (((_b_a = b_a) /\ ((_a = a) /\ ((_b_rp = b_rp) /\ (_rp = rp)))) /\
      (is_init _b_a 0 2048)) ==> ((is_init res.`2 0 1410) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace___i_polyvec_compress) /\ 0<=i /\ i<=64 /\ (i<> 0 => is_init b_rp 0 (i*22 + 2))).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (__polyvec_csubq_trace param (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray2048.init_arrP).
qed .

lemma __gen_matrix_buf_rejection_filter48_trace _pol _b_pol _counter _buf _b_buf _buf_offset _load_shuffle _mask _bounds _sst _b_sst _ones _ms :
      hoare [M(Syscall).__gen_matrix_buf_rejection_filter48 :
      (((_ms = ms) /\
       ((_ones = ones) /\
       ((_b_sst = b_sst) /\
       ((_sst = sst) /\
       ((_bounds = bounds) /\
       ((_mask = mask) /\
       ((_load_shuffle = load_shuffle) /\
       ((_buf_offset = buf_offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\
       ((_counter = counter) /\ ((_b_pol = b_pol) /\ (_pol = pol))))))))))))) /\
      ((((((is_init _b_buf 0 536) /\ (is_init _b_sst 0 2048)) /\
         (0 <= (W64.to_uint _counter))) /\
        (((W64.to_uint _counter) + 32) <= 256)) /\
       (0 <= (W64.to_uint _buf_offset))) /\
      ((((W64.to_uint _buf_offset) + 24) + 32) <= 536))) ==>
      (((((W64.to_uint _counter) <= (W64.to_uint res.`3)) /\
        ((W64.to_uint res.`3) <= 256)) /\
       (foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_pol k 1) \/
       ((((W64.to_uint _counter) * 2) <= k) /\
       (k < (2 * (W64.to_uint res.`3))))))) (iota_ 0 512)))) /\
      (valid res.`4))].
proof.
proc. 
auto => /> *.
have H : forall w,0<= count idfun (W64.w2bits (W64.of_int (W64.to_uint w %% 256))) <= 8.
+ move => w; rewrite count_ge0 /=.
  rewrite w2bitsE (: 64 = 8 + 56) 1://  mkseq_add // count_cat /=.
  have  ->/= : count idfun (mkseq (fun (i : int) => (W64.of_int (to_uint w %% 256)).[8 + i]) 56) = 0 ; last  by smt(size_mkseq count_ge0 count_size).
  rewrite /mkseq count_map /preim /idfun /=;apply count_pred0_eq_in => x; rewrite mem_iota  /= => *.
  rewrite get_to_uint /= (: (0 <= 8 + x < 64)) 1:/# /=.
  rewrite of_uintK /= (modz_small _ 18446744073709551616); 1:smt().
  have /= ? : 2^8 <=  2 ^ (8 + x) <= 2^64; last by smt().
  split; 1: by  apply StdOrder.IntOrder.ler_weexpn2l; smt(). 
  move => ?. 
  by have  := StdOrder.IntOrder.ler_weexpn2l 2 _ (8+x) 64 _;  smt(). 

pose w := ((protect_64 _)).
have H255 : 255 = 2^8 - 1 by auto.
rewrite H255 !and_mod //=.
rewrite / POPCNT_64 /rflags_of_popcnt /flags_w /=. 
rewrite !to_uintM_small => /=;1..4:smt(W64.of_uintK pow2_64 modz_small).
rewrite !W64.to_uintD_small /=;1..15:
 smt(W64.of_uintK pow2_64 modz_small).
do split; 1,2,4..20:smt(W64.of_uintK pow2_64 modz_small);
  last by  smt(W64.of_uintK pow2_64 modz_small).
  
rewrite and_iota => k kb /=.
pose c1 := (W64.of_int (count idfun (w2bits (W64.of_int (to_uint (w _ms `>>` W8.of_int 8) %% 256))))).
pose c2 := (W64.of_int (count idfun (w2bits (W64.of_int (to_uint (w _ms `>>` W8.of_int 16) %% 256))))).
pose c3 := (W64.of_int (count idfun (w2bits (W64.of_int (to_uint (w _ms `>>` W8.of_int 24) %% 256))))).
pose c4 := (W64.of_int (count idfun (w2bits (W64.of_int (to_uint (w _ms) %% 256))))).
admit.
qed.


lemma __write_u128_boundchk_trace _pol _b_pol _ctr _data _ms :
      hoare [M(Syscall).__write_u128_boundchk :
      (((_ms = ms) /\
       ((_data = data) /\
       ((_ctr = ctr) /\ ((_b_pol = b_pol) /\ (_pol = pol))))) /\
      true) ==>
      ((foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_pol k 1) \/
       (((2 * (W64.to_uint _ctr)) <= k) /\
       (k <
       ((2 * (W64.to_uint _ctr)) +
       ((((16 < (2 * (256 - (W64.to_uint _ctr)))) ? 16 : (2 *
                                                         (256 -
                                                         (W64.to_uint _ctr)))) <
        0) ? 0 : ((16 < (2 * (256 - (W64.to_uint _ctr)))) ? 16 : (2 *
                                                                 (256 -
                                                                 (W64.to_uint
                                                                 _ctr)))))))))))
       (iota_ 0 512))) /\
      (valid res.`4))].
proof.
  proc. auto. rewrite /is_init /valid /= => &m /> *.  split.
  rewrite !uleE /=. move => *. smt(and_iota W64.to_uint_cmp).
  rewrite !uleE /=. move => *.
  split. move => *.
  + split; rewrite !to_uintD_small /=; smt(and_iota W64.to_uint_cmp).
  move => *. split.  move => *. rewrite !to_uintD_small /=; smt(and_iota W64.to_uint_cmp).
  smt(and_iota W64.to_uint_cmp).
qed.

lemma __gen_matrix_buf_rejection_filter24_trace _pol _b_pol _counter _buf _b_buf _buf_offset _load_shuffle _mask _bounds _sst _b_sst _ones _ms :
      hoare [M(Syscall).__gen_matrix_buf_rejection_filter24 :
      (((_ms = ms) /\
       ((_ones = ones) /\
       ((_b_sst = b_sst) /\
       ((_sst = sst) /\
       ((_bounds = bounds) /\
       ((_mask = mask) /\
       ((_load_shuffle = load_shuffle) /\
       ((_buf_offset = buf_offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\
       ((_counter = counter) /\ ((_b_pol = b_pol) /\ (_pol = pol))))))))))))) /\
      (((((is_init _b_buf 0 536) /\ (is_init _b_sst 0 2048)) /\
        (0 <= (W64.to_uint _counter))) /\
       (0 <= (W64.to_uint _buf_offset))) /\
      (((W64.to_uint _buf_offset) + 32) <= 536))) ==>
      (((((W64.of_int (W64.to_uint _counter)) \ule res.`3) /\
        ((W64.to_uint res.`3) <= 256)) /\
       (foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_pol k 1) \/
       (((2 * (W64.to_uint _counter)) <= k) /\
       (k < (2 * (W64.to_uint res.`3))))))) (iota_ 0 512)))) /\
      (valid res.`5))].
proof.
admitted.

lemma _gen_matrix_buf_rejection_trace _pol _b_pol _counter _buf _b_buf _buf_offset :
      hoare [M(Syscall)._gen_matrix_buf_rejection :
      (((_buf_offset = buf_offset) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\
       ((_counter = counter) /\ ((_b_pol = b_pol) /\ (_pol = pol)))))) /\
      (((((is_init _b_buf 0 536) /\ (0 <= (W64.to_uint _counter))) /\
        ((W64.to_uint _counter) <= 256)) /\
       (0 <= (W64.to_uint _buf_offset))) /\
      ((W64.to_uint _buf_offset) < 536))) ==>
      (((((W64.of_int (W64.to_uint _counter)) \ule res.`3) /\
        ((W64.to_uint res.`3) <= 256)) /\
       (foldr (fun x => (fun acc => (x /\ acc))) true
       (map
       (fun k =>
       ((is_init res.`2 k 1) =
       ((is_init _b_pol k 1) \/
       (((2 * (W64.to_uint _counter)) <= k) /\
       (k < (2 * (W64.to_uint res.`3))))))) (iota_ 0 512)))) /\
      (valid res.`4))].
proof.
  proc; auto .
  while ((valid trace__gen_matrix_buf_rejection) /\ 0<= to_uint counter /\ to_uint counter <= 256 /\
         (forall k, 0<=k /\ k<512 => is_init_cell b_pol k = (is_init_cell _b_pol k \/
         (to_uint _counter * 2) <= k /\  k < (2* to_uint counter ))) /\
         (condition_loop => (to_uint  buf_offset < 481)) /\
           to_uint _counter <= to_uint counter) .
  + auto . sp.
    if .
    + auto . 
      ecall (__gen_matrix_buf_rejection_filter24_trace param_8 b_param param_7 
       param_6 (BArray536.init_arr (W8.of_int 255) 536) param_5 param_4 
       param_3 param_2 param_1 (BArray2048.init_arr (W8.of_int 255) 2048) 
       param_0 param).
      auto .
      rewrite /is_init /valid /= => &m /> 7?. rewrite ultE /= => *.
      split. smt(W64.to_uint_cmp BArray536.init_arrP BArray2048.init_arrP). move => /> 5?.
      rewrite !uleE !ultE !to_uintD_small /=; smt(and_iota W64.to_uint_cmp all_cat).
    by auto .
  auto . 
  while ((valid trace__gen_matrix_buf_rejection) /\ 0<= to_uint counter /\ to_uint counter <= 256 /\
         to_uint _counter <= to_uint counter /\ 
         (forall k, 0<=k /\ k<512 => is_init_cell b_pol k = (is_init_cell _b_pol k \/
         (to_uint _counter * 2) <= k /\  k < (2* to_uint counter ))) /\
         (to_uint counter < 225 => saved_buf_offset = buf_offset) /\
         (condition_loop => (to_uint  buf_offset < 457))).
  + auto . sp.
    if .
    + auto .
      ecall (__gen_matrix_buf_rejection_filter48_trace param_18 b_param_0 param_17 
       param_16 (BArray536.init_arr (W8.of_int 255) 536) param_15 param_14 
       param_13 param_12 param_11 (BArray2048.init_arr (W8.of_int 255) 2048) 
       param_10 param_9).
      auto .
      rewrite /is_init /valid /= => &m /> 7?. rewrite ultE /= => *.
      split. smt(W64.to_uint_cmp BArray536.init_arrP BArray2048.init_arrP). move => /> *.
      rewrite !ultE !to_uintD_small /=; smt(and_iota W64.to_uint_cmp all_cat).
    auto .
    rewrite /is_init /valid /= => &m /> 8?. rewrite ultE /= => *. smt().
auto .
rewrite /is_init /valid /= => &m /> *. split. rewrite !ultE /=. smt(and_iota). move => *.
split.  rewrite !ultE /=. smt(). move => *. rewrite uleE /=. smt(and_iota).
qed .

lemma gen_matrix_get_indexes_trace _b __t :
      hoare [M(Syscall).gen_matrix_get_indexes :
      (((__t = _t) /\ (_b = b)) /\
      (((W64.of_int 0) \ule (_b + (__t `<<` (W8.of_int 5)))) /\
      ((_b + (__t `<<` (W8.of_int 5))) \ule (W64.of_int 56)))) ==>
      (true /\ (valid res.`2))].
proof.
  proc; auto . move => &m /> . rewrite !uleE /= => *. smt().
qed .

lemma __gen_matrix_fill_polynomial_trace _pol _b_pol _buf _b_buf :
      hoare [M(Syscall).__gen_matrix_fill_polynomial :
      (((_b_buf = b_buf) /\
       ((_buf = buf) /\ ((_b_pol = b_pol) /\ (_pol = pol)))) /\
      (is_init _b_buf 0 536)) ==>
      (((is_init res.`2 0 512) /\ (is_init res.`4 0 536)) /\ (valid res.`5))].
proof.
  proc; auto .
  while ((valid trace___gen_matrix_fill_polynomial) /\ 0 <=to_uint counter /\ to_uint buf_offset = 2*168  /\ is_init b_pol 0 (to_uint counter*2) /\ is_init b_buf 0 536).
auto .
ecall (_gen_matrix_buf_rejection_trace param_2 b_param param_1 param_0 
 (BArray536.init_arr (W8.of_int 255) 536) param).
auto .
ecall (_shake128_next_state_trace param_3 ( BArray536.init_arr (W8.of_int 255) 536)).
auto .
   rewrite /is_init /valid /= => &m /> . rewrite !ultE !to_uintK_small /=. smt(). move => *.
   split.  smt(BArray536.init_arrP W64.to_uint_cmp). move => *. split. smt(). move => 4?.
   rewrite !uleE /= => *.   smt(and_iota all_cat BArray536.init_arrP).

auto .
ecall (_gen_matrix_buf_rejection_trace param_7 b_param_0 param_6 param_5 
       (BArray536.init_arr (W8.of_int 255) 536) param_4).
auto .
         rewrite /is_init /valid /= => &m /> *. split. smt(BArray536.init_arrP). move => 2?.
  rewrite uleE /= => *. split. smt(and_iota all_cat). move => 3?. rewrite ultE /=.  smt ().
qed .

lemma _gen_matrix_sample_four_polynomials_trace _polx4 _b_polx4 _buf _b_buf _rho _b_rho _pos_entry _transposed :
      hoare [M(Syscall)._gen_matrix_sample_four_polynomials :
      (((_transposed = transposed) /\
       ((_pos_entry = pos_entry) /\
       ((_b_rho = b_rho) /\
       ((_rho = rho) /\
       ((_b_buf = b_buf) /\
       ((_buf = buf) /\ ((_b_polx4 = b_polx4) /\ (_polx4 = polx4)))))))) /\
      (((is_init _b_rho 0 32) /\
       ((W64.of_int 0) \ule (_pos_entry + (_transposed `<<` (W8.of_int 5))))) /\
      ((_pos_entry + (_transposed `<<` (W8.of_int 5))) \ule (W64.of_int 56)))) ==>
      ((is_init res.`2 0 2048) /\ (valid res.`5))].
proof.
proc; auto .
ecall (__gen_matrix_fill_polynomial_trace param_0 b_param_0 param b_param).
auto .
ecall (__gen_matrix_fill_polynomial_trace param_2 b_param_2 param_1 b_param_1).
auto .
ecall (__gen_matrix_fill_polynomial_trace param_4 b_param_4 param_3 b_param_3).
auto .
ecall (__gen_matrix_fill_polynomial_trace param_6 b_param_6 param_5 b_param_5).
auto .
ecall (_shake128x4_squeeze3blocks_trace param_8 (BArray800.init_arr
                                                (W8.of_int 255) 800) 
       param_7 b_param_7).
auto .
ecall (_shake128x4_absorb_A32_A2_trace param_11 b_param_9 param_10 (
                                                                   BArray32.init_arr
                                                                   (W8.of_int
                                                                   255) 32) 
       param_9 b_param_8).
auto .
ecall (gen_matrix_get_indexes_trace param_13 param_12).
auto .
rewrite /is_init /valid /= => &m /> *.
split. smt(BArray32.init_arrP). move => /> *. 
split. smt(BArray800.init_arrP). move => /> *. split. smt(SBArray2144_536.is_init_cell_get BArray2144.init_arrP). move => /> *.
split. smt(SBArray2144_536.is_init_cell_set SBArray2144_536.is_init_cell_get BArray2144.init_arrP BArray536.init_arrP).
move => /> *. split.  smt(SBArray2144_536.is_init_cell_set SBArray2144_536.is_init_cell_get BArray536.init_arrP BArray2144.init_arrP).
move => /> *. split. smt(SBArray2144_536.is_init_cell_set SBArray2144_536.is_init_cell_get BArray536.init_arrP BArray2144.init_arrP).
move => /> *.  split. smt(SBArray2048_512.is_init_cell_set BArray512.init_arrP). move => /> *. 
rewrite !all_cat /=. smt().
qed .

lemma _gen_matrix_avx2_trace _matrix _b_matrix _rho _b_rho _transposed :
      hoare [M(Syscall)._gen_matrix_avx2 :
      (((_transposed = transposed) /\
       ((_b_rho = b_rho) /\
       ((_rho = rho) /\ ((_b_matrix = b_matrix) /\ (_matrix = matrix))))) /\
      (((is_init _b_rho 0 32) /\ ((W64.of_int 0) \ule _transposed)) /\
      (_transposed \ule (W64.of_int 1)))) ==>
      ((is_init res.`2 0 8192) /\ (valid res.`3))].
proof.
proc; auto .
while ((valid trace__gen_matrix_avx2) /\  0<= i /\ is_init b_matrix 0 8192).
auto .
while ((valid trace__gen_matrix_avx2) /\ 0<=i /\ i<4 /\ 0<= j /\ is_init b_matrix 0 8192).
auto .
ecall (_nttunpack_trace param b_param).
auto .
rewrite /is_init /valid /= => &m /> *.
smt(all_cat SBArray8192_512.is_init_cell_set  SBArray8192_512.is_init_cell_get BArray512.init_arrP).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
while ((valid trace__gen_matrix_avx2) /\  is_init b_matrix 0 (i*4*256*2) /\ 0<=i /\ i<=4 /\
  0<= to_uint transposed /\ to_uint transposed <=1).
auto .
ecall (_gen_matrix_sample_four_polynomials_trace param_4 b_param_1 param_3 
       b_param_0 param_2 (BArray32.init_arr (W8.of_int 255) 32) param_1 
       param_0).
auto .
  rewrite /is_init /valid /= => &m /> *.
  split. rewrite !uleE /= !to_uintD_small to_uint_shl !to_uintK_small /=;  smt(BArray32.init_arrP). move => *.
  smt(all_cat SBArray8192_2048.is_init_cell_set BArray2048.init_arrP).
auto. rewrite /is_init /valid /= => &m /> ?. rewrite !uleE to_uintK_small /=. smt().
move => *. split.  smt().  move => *.  smt(BArray32.init_arrP).
qed .

lemma __indcpa_keypair_trace _pk _b_pk _sk _b_sk _randomnessp _b_randomnessp :
      hoare [M(Syscall).__indcpa_keypair :
      (((_b_randomnessp = b_randomnessp) /\
       ((_randomnessp = randomnessp) /\
       ((_b_sk = b_sk) /\ ((_sk = sk) /\ ((_b_pk = b_pk) /\ (_pk = pk)))))) /\
      (is_init _b_randomnessp 0 32)) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 1536)) /\
      (valid res.`5))].
proof.
proc; auto .
 while ((valid trace___indcpa_keypair) /\ 0<=i /\ i<=4 /\ is_init b_publicseed 0 32 /\ is_init b_pk 0 ((i + 192)*8)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (__i_polyvec_tobytes_trace param_0 b_param param (BArray2048.init_arr
                                                       (W8.of_int 255) 2048)).
auto .
ecall (__i_polyvec_tobytes_trace param_2 b_param_0 param_1 (
                                                           BArray2048.init_arr
                                                           (W8.of_int 255)
                                                           2048)).
auto .
ecall (__polyvec_reduce_trace param_3 (BArray2048.init_arr (W8.of_int 255)
                                      2048)).
auto .
ecall (__polyvec_add2_trace param_5 b_param_1 param_4 (BArray2048.init_arr
                                                      (W8.of_int 255) 2048)).
auto .
while ((valid trace___indcpa_keypair) /\ is_init b_publicseed 0 32 /\ is_init b_pkpv 0 (i*512) /\ 0<=i /\ i<=4 /\ is_init b_aa 0 8192).
auto .
ecall (_poly_frommont_trace param_6 b_param_2).
auto .
ecall (__polyvec_pointwise_acc_trace param_9 b_param_4 param_8 b_param_3 
       param_7 (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
rewrite /is_init /valid /= => &m /> *.
split. smt(BArray2048.init_arrP SBArray8192_2048.is_init_cell_get). move => *.
smt(SBArray2048_512.is_init_cell_get SBArray2048_512.is_init_cell_set BArray512.init_arrP all_cat). auto .
ecall (__polyvec_ntt_trace param_10 b_param_5).
auto .
ecall (__polyvec_ntt_trace param_11 b_param_6).
auto .
ecall (_poly_getnoise_eta1_4x_trace param_17 b_param_11 param_16 b_param_10 
       param_15 b_param_9 param_14 b_param_8 param_13 b_param_7 param_12).
auto .
ecall (_poly_getnoise_eta1_4x_trace param_23 b_param_16 param_22 b_param_15 
       param_21 b_param_14 param_20 b_param_13 param_19 b_param_12 param_18).
auto .
ecall (_gen_matrix_avx2_trace param_26 b_param_18 param_25 b_param_17 
       param_24).
auto .
while ((valid trace___indcpa_keypair) /\ 0<=i /\ i<=4 /\ is_init b_publicseed 0 (i*8) /\ is_init b_noiseseed 0 (i*8)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (_sha3_512A_A33_trace param_28 b_param_20 param_27 b_param_19).
auto .
while ((valid trace___indcpa_keypair) /\  0<=i /\ i<=4  /\ is_init b_inbuf 0 (8*i) ).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
rewrite /is_init /valid /= => &m /> *.
smt(all_cat SBArray2048_512.is_init_cell_set BArray2048.init_arrP BArray512.init_arrP BArray8192.init_arrP SBArray1568_1536.is_init_cell_set BArray1536.init_arrP).
qed .

lemma __indcpa_enc_trace _ct _b_ct _msgp _b_msgp _pk _b_pk _noiseseed _b_noiseseed :
      hoare [M(Syscall).__indcpa_enc :
      (((_b_noiseseed = b_noiseseed) /\
       ((_noiseseed = noiseseed) /\
       ((_b_pk = b_pk) /\
       ((_pk = pk) /\
       ((_b_msgp = b_msgp) /\
       ((_msgp = msgp) /\ ((_b_ct = b_ct) /\ (_ct = ct)))))))) /\
      (((is_init _b_msgp 0 32) /\ (is_init _b_pk 0 1568)) /\
      (is_init _b_noiseseed 0 32))) ==>
      ((is_init res.`2 0 1568) /\ (valid res.`3))].
proof.
proc; auto .
ecall (_i_poly_compress_trace param_0 b_param param (BArray512.init_arr
                                                    (W8.of_int 255) 512)).
auto .
ecall (__i_polyvec_compress_trace param_2 b_param_0 param_1 (
                                                            BArray2048.init_arr
                                                            (W8.of_int 255)
                                                            2048)).
auto .
ecall (__poly_reduce_trace param_3 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (__polyvec_reduce_trace param_4 (BArray2048.init_arr (W8.of_int 255)
                                      2048)).
auto .
ecall (_poly_add2_trace param_6 (BArray512.init_arr (W8.of_int 255) 512) 
       param_5 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (_poly_add2_trace param_8 (BArray512.init_arr (W8.of_int 255) 512) 
       param_7 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (__polyvec_add2_trace param_10 (BArray2048.init_arr (W8.of_int 255)
                                     2048) param_9 b_param_1).
auto .
ecall (_poly_invntt_trace param_11 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (__polyvec_invntt_trace param_12 b_param_2).
auto .
ecall (__polyvec_pointwise_acc_trace param_15 b_param_3 param_14 (
                                                                 BArray2048.init_arr
                                                                 (W8.of_int
                                                                 255) 2048) 
       param_13 (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
while ((valid trace___indcpa_enc) /\ 0<=w /\ w<=4 /\ is_init b_bp 0 (w*512) /\ is_init b_aat 0 8192 ).
auto .
ecall (__polyvec_pointwise_acc_trace param_18 b_param_5 param_17 b_param_4 
       param_16 (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
rewrite /is_init /valid /= => &m /> *.
split. smt(BArray2048.init_arrP SBArray8192_2048.is_init_cell_get). move => *.
 smt(all_cat SBArray2048_512.is_init_cell_set BArray512.init_arrP).
auto .
ecall (__polyvec_ntt_trace param_19 b_param_6).
auto .
ecall (_poly_getnoise_eta2_trace param_22 b_param_7 param_21 (
                                                             BArray32.init_arr
                                                             (W8.of_int 255)
                                                             32) param_20).
auto .
ecall (_poly_getnoise_eta1_4x_trace param_28 b_param_11 param_27 b_param_10 
       param_26 b_param_9 param_25 b_param_8 param_24 (BArray32.init_arr
                                                      (W8.of_int 255) 32) 
       param_23).
auto .
ecall (_poly_getnoise_eta1_4x_trace param_34 b_param_15 param_33 b_param_14 
       param_32 b_param_13 param_31 b_param_12 param_30 (BArray32.init_arr
                                                        (W8.of_int 255) 32) 
       param_29).
auto .
ecall (_gen_matrix_avx2_trace param_37 b_param_17 param_36 b_param_16 
       param_35).
auto .
ecall (_i_poly_frommsg_trace param_39 b_param_18 param_38 (BArray32.init_arr
                                                          (W8.of_int 255) 32)).
auto .
while ((valid trace___indcpa_enc) /\ 0<=w /\  w <= 4 /\ is_init b_publicseed 0 (8*w)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (__i_polyvec_frombytes_trace param_40 b_param_19).
auto .
rewrite /is_init /valid /= .
smt (all_cat SBArray1568_1536.is_init_cell_get BArray32.init_arrP SBArray2048_512.is_init_cell_set BArray512.init_arrP BArray8192.init_arrP BArray2048.init_arrP SBArray1568_160.is_init_cell_set BArray1410.init_arrP BArray160.init_arrP SBArray1568_1410.is_init_cell_set).
qed .

lemma __indcpa_dec_trace _msgp _b_msgp _ct _b_ct _sk _b_sk :
      hoare [M(Syscall).__indcpa_dec :
      (((_b_sk = b_sk) /\
       ((_sk = sk) /\
       ((_b_ct = b_ct) /\
       ((_ct = ct) /\ ((_b_msgp = b_msgp) /\ (_msgp = msgp)))))) /\
      ((is_init _b_ct 0 1568) /\ (is_init _b_sk 0 1536))) ==>
      ((is_init res.`2 0 32) /\ (valid res.`3))].
proof.
proc; auto .
ecall (_i_poly_tomsg_trace param_0 b_param param (BArray512.init_arr
                                                 (W8.of_int 255) 512)).
auto .
ecall (__poly_reduce_trace param_1 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (_poly_sub_trace param_4 b_param_0 param_3 (BArray512.init_arr
                                                 (W8.of_int 255) 512) 
       param_2 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (_poly_invntt_trace param_5 (BArray512.init_arr (W8.of_int 255) 512)).
auto .
ecall (__polyvec_pointwise_acc_trace param_8 b_param_1 param_7 (
                                                               BArray2048.init_arr
                                                               (W8.of_int 255
                                                               ) 2048) 
       param_6 (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
ecall (__polyvec_ntt_trace param_9 (BArray2048.init_arr (W8.of_int 255) 2048)).
auto .
ecall (__i_polyvec_frombytes_trace param_10 (BArray1536.init_arr
                                            (W8.of_int 255) 1536)).
auto .
ecall (_i_poly_decompress_trace param_12 b_param_3 param_11 b_param_2).
auto .
ecall (__i_polyvec_decompress_trace param_14 b_param_4 param_13 (
                                                                BArray1568.init_arr
                                                                (W8.of_int
                                                                255) 1568)).
auto .
rewrite /is_init /valid /= .
smt (all_cat  BArray1568.init_arrP  BArray1536.init_arrP BArray2048.init_arrP BArray512.init_arrP  BArray32.init_arrP SBArray1568_160.is_init_cell_get ).
qed .

lemma __verify_trace _ct _b_ct _ctpc _b_ctpc :
      hoare [M(Syscall).__verify :
      (((_b_ctpc = b_ctpc) /\
       ((_ctpc = ctpc) /\ ((_b_ct = b_ct) /\ (_ct = ct)))) /\
      ((is_init _b_ctpc 0 1568) /\ (is_init _b_ct 0 1568))) ==>
      (true /\ (valid res.`2))].
proof.
proc; auto .
while ((valid trace___verify) /\ 0<=i).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
by auto .
qed .

lemma __cmov_trace _dst _b_dst _src _b_src _cnd :
      hoare [M(Syscall).__cmov :
      (((_cnd = cnd) /\
       ((_b_src = b_src) /\
       ((_src = src) /\ ((_b_dst = b_dst) /\ (_dst = dst))))) /\
      ((is_init _b_src 0 32) /\ (is_init _b_dst 0 32))) ==>
      ((is_init res.`2 0 32) /\ (valid res.`3))].
proof.
proc; auto .
rewrite /is_init /valid /= .
smt (all_cat BArray32.init_arrP).
qed .

lemma __crypto_kem_keypair_jazz_trace _pk _b_pk _sk _b_sk _randomnessp _b_randomnessp :
      hoare [M(Syscall).__crypto_kem_keypair_jazz :
      (((_b_randomnessp = b_randomnessp) /\
       ((_randomnessp = randomnessp) /\
       ((_b_sk = b_sk) /\ ((_sk = sk) /\ ((_b_pk = b_pk) /\ (_pk = pk)))))) /\
      (is_init _b_randomnessp 0 64)) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 3168)) /\
      (valid res.`5))].
proof.
proc; auto .
while ((valid trace___crypto_kem_keypair_jazz) /\ 0<=i /\ i<=4 /\ is_init b_sk 0 ((392+i) *8)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (_sha3_256A_A1568_trace param_0 b_param param (BArray1568.init_arr
                                                    (W8.of_int 255) 1568)).
auto .
while ((valid trace___crypto_kem_keypair_jazz) /\ 0<=i /\ i<=196 /\ is_init b_sk 0 ((192 + i) *8)).
auto .
rewrite /is_init /valid /=.
smt (all_cat).
auto .
ecall (__indcpa_keypair_trace param_3 b_param_2 param_2 b_param_1 param_1 
       b_param_0).
auto .
rewrite /is_init /valid /= .
smt (all_cat SBArray64_32.is_init_cell_get SBArray3168_1536.is_init_cell_set BArray1536.init_arrP BArray1568.init_arrP  SBArray3168_32.is_init_cell_set BArray32.init_arrP).
qed .

lemma __crypto_kem_enc_jazz_trace _ct _b_ct _shk _b_shk _pk _b_pk _randomnessp _b_randomnessp :
      hoare [M(Syscall).__crypto_kem_enc_jazz :
      (((_b_randomnessp = b_randomnessp) /\
       ((_randomnessp = randomnessp) /\
       ((_b_pk = b_pk) /\
       ((_pk = pk) /\
       ((_b_shk = b_shk) /\ ((_shk = shk) /\ ((_b_ct = b_ct) /\ (_ct = ct)))))))) /\
      ((is_init _b_randomnessp 0 32) /\ (is_init _b_pk 0 1568))) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 32)) /\ (valid res.`5))].
proof.
proc; auto .
ecall (__indcpa_enc_trace param_2 b_param_1 param_1 b_param_0 param_0 
       (BArray1568.init_arr (W8.of_int 255) 1568) param b_param).
auto .
ecall (_sha3_512A_A64_trace param_4 b_param_3 param_3 b_param_2).
auto .
ecall (_sha3_256A_A1568_trace param_6 b_param_4 param_5 (BArray1568.init_arr
                                                        (W8.of_int 255) 1568)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray1568.init_arrP SBArray64_32.is_init_cell_get SBArray64_32.is_init_cell_set BArray32.init_arrP BArray64.init_arrP BArray1568.init_arrP).
qed .

lemma __crypto_kem_dec_jazz_trace _shk _b_shk _ct _b_ct _sk _b_sk :
      hoare [M(Syscall).__crypto_kem_dec_jazz :
      (((_b_sk = b_sk) /\
       ((_sk = sk) /\
       ((_b_ct = b_ct) /\ ((_ct = ct) /\ ((_b_shk = b_shk) /\ (_shk = shk)))))) /\
      ((is_init _b_ct 0 1568) /\ (is_init _b_sk 0 3168))) ==>
      ((is_init res.`2 0 32) /\ (valid res.`3))].
proof.
proc; auto .
ecall (__cmov_trace param_1 (BArray32.init_arr (W8.of_int 255) 32) param_0 
       b_param param).
auto .
ecall (_shake256_A32__A1600_trace param_3 b_param_1 param_2 b_param_0).
auto .
ecall (__verify_trace param_5 (BArray1568.init_arr (W8.of_int 255) 1568) 
       param_4 (BArray1568.init_arr (W8.of_int 255) 1568)).
auto .
ecall (__indcpa_enc_trace param_9 b_param_5 param_8 b_param_4 param_7 
       b_param_3 param_6 b_param_2).
auto .
ecall (_sha3_512A_A64_trace param_11 b_param_7 param_10 b_param_6).
auto .
ecall (__indcpa_dec_trace param_14 b_param_9 param_13 (BArray1568.init_arr
                                                      (W8.of_int 255) 1568) 
       param_12 b_param_8).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray32.init_arrP BArray64.init_arrP BArray1568.init_arrP SBArray3168_1536.is_init_cell_get SBArray64_32.is_init_cell_set SBArray64_32.is_init_cell_get SBArray3168_32.is_init_cell_get SBArray3168_1568.is_init_cell_get SBArray1600_1568.is_init_cell_set SBArray1600_32.is_init_cell_set).
qed .

lemma jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand_trace _public_key _b_public_key _secret_key _b_secret_key _coins _b_coins :
      hoare [M(Syscall).jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_derand :
      (((_b_coins = b_coins) /\
       ((_coins = coins) /\
       ((_b_secret_key = b_secret_key) /\
       ((_secret_key = secret_key) /\
       ((_b_public_key = b_public_key) /\ (_public_key = public_key)))))) /\
      (is_init _b_coins 0 64)) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 3168)) /\
      (valid res.`6))].
proof.
proc; auto .
ecall (__crypto_kem_keypair_jazz_trace param_1 b_param_0 param_0 b_param 
       param (BArray64.init_arr (W8.of_int 255) 64)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray64.init_arrP BArray1568.init_arrP BArray3168.init_arrP).
qed .

lemma jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand_trace _ciphertext _b_ciphertext _shared_secret _b_shared_secret _public_key _b_public_key _coins _b_coins :
      hoare [M(Syscall).jade_kem_mlkem_mlkem1024_amd64_avx2_enc_derand :
      (((_b_coins = b_coins) /\
       ((_coins = coins) /\
       ((_b_public_key = b_public_key) /\
       ((_public_key = public_key) /\
       ((_b_shared_secret = b_shared_secret) /\
       ((_shared_secret = shared_secret) /\
       ((_b_ciphertext = b_ciphertext) /\ (_ciphertext = ciphertext)))))))) /\
      ((is_init _b_coins 0 32) /\ (is_init _b_public_key 0 1568))) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 32)) /\ (valid res.`6))].
proof.
proc; auto .
ecall (__crypto_kem_enc_jazz_trace param_2 b_param_0 param_1 b_param 
       param_0 (BArray1568.init_arr (W8.of_int 255) 1568) param (
                                                                BArray32.init_arr
                                                                (W8.of_int
                                                                255) 32)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray32.init_arrP BArray1568.init_arrP).
qed .

lemma jade_kem_mlkem_mlkem1024_amd64_avx2_keypair_trace _public_key _b_public_key _secret_key _b_secret_key :
      hoare [M(Syscall).jade_kem_mlkem_mlkem1024_amd64_avx2_keypair :
      (((_b_secret_key = b_secret_key) /\
       ((_secret_key = secret_key) /\
       ((_b_public_key = b_public_key) /\ (_public_key = public_key)))) /\
      true) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 3168)) /\
      (valid res.`6))].
proof.
proc; auto .
ecall (__crypto_kem_keypair_jazz_trace param_1 b_param_0 param_0 b_param 
       param (BArray64.init_arr (W8.of_int 255) 64)).
auto .
rewrite /is_init /valid /= . inline. auto.
smt (all_cat BArray64.init_arrP BArray1568.init_arrP BArray3168.init_arrP).
qed .

lemma jade_kem_mlkem_mlkem1024_amd64_avx2_enc_trace _ciphertext _b_ciphertext _shared_secret _b_shared_secret _public_key _b_public_key :
      hoare [M(Syscall).jade_kem_mlkem_mlkem1024_amd64_avx2_enc :
      (((_b_public_key = b_public_key) /\
       ((_public_key = public_key) /\
       ((_b_shared_secret = b_shared_secret) /\
       ((_shared_secret = shared_secret) /\
       ((_b_ciphertext = b_ciphertext) /\ (_ciphertext = ciphertext)))))) /\
      (is_init _b_public_key 0 1568)) ==>
      (((is_init res.`2 0 1568) /\ (is_init res.`4 0 32)) /\ (valid res.`6))].
proof.
proc; auto .
ecall (__crypto_kem_enc_jazz_trace param_2 b_param_0 param_1 b_param 
       param_0 (BArray1568.init_arr (W8.of_int 255) 1568) param (
                                                                BArray32.init_arr
                                                                (W8.of_int
                                                                255) 32)).
auto .
rewrite /is_init /valid /= . inline. auto.
smt (all_cat BArray32.init_arrP BArray1568.init_arrP).
qed .

lemma jade_kem_mlkem_mlkem1024_amd64_avx2_dec_trace _shared_secret _b_shared_secret _ciphertext _b_ciphertext _secret_key _b_secret_key :
      hoare [M(Syscall).jade_kem_mlkem_mlkem1024_amd64_avx2_dec :
      (((_b_secret_key = b_secret_key) /\
       ((_secret_key = secret_key) /\
       ((_b_ciphertext = b_ciphertext) /\
       ((_ciphertext = ciphertext) /\
       ((_b_shared_secret = b_shared_secret) /\
       (_shared_secret = shared_secret)))))) /\
      ((is_init _b_ciphertext 0 1568) /\ (is_init _b_secret_key 0 3168))) ==>
      ((is_init res.`2 0 32) /\ (valid res.`4))].
proof.
proc; auto .
ecall (__crypto_kem_dec_jazz_trace param_1 b_param param_0 (
                                                           BArray1568.init_arr
                                                           (W8.of_int 255)
                                                           1568) param 
       (BArray3168.init_arr (W8.of_int 255) 3168)).
auto .
rewrite /is_init /valid /= .
smt (all_cat BArray32.init_arrP BArray1568.init_arrP BArray3168.init_arrP).
qed .
